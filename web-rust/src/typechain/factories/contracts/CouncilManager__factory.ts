/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CouncilManager,
  CouncilManagerInterface,
} from "../../contracts/CouncilManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_daoAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CouncilNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "LogicError",
    type: "error",
  },
  {
    inputs: [],
    name: "NationAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "NationDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "BROKER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CENTRAL_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EMERGING_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GENERAL_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDUSTRY_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LESSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POWER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proposalAddress",
        type: "address",
      },
    ],
    name: "acceptNewMember",
    outputs: [
      {
        internalType: "address",
        name: "memberId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "doesCouncilExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "doesCouncilGroupExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "memberId",
        type: "address",
      },
    ],
    name: "doesNationExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllRoles",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getCouncil",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "randomizeByGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "randomizeByMember",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "outputCountForGroup",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "outputCountForMember",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "voteDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "voteNumerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumNumerator",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "avgVotes",
                type: "bool",
              },
            ],
            internalType: "struct MembershipManagement.VotingParameters",
            name: "votingParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "id",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                ],
                internalType: "struct MembershipManagement.Nation[]",
                name: "members",
                type: "tuple[]",
              },
            ],
            internalType: "struct MembershipManagement.CouncilGroup[]",
            name: "groups",
            type: "tuple[]",
          },
        ],
        internalType: "struct MembershipManagement.Council",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getCouncilForGroupId",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "randomizeByGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "randomizeByMember",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "outputCountForGroup",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "outputCountForMember",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "voteDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "voteNumerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumNumerator",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "avgVotes",
                type: "bool",
              },
            ],
            internalType: "struct MembershipManagement.VotingParameters",
            name: "votingParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "id",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                ],
                internalType: "struct MembershipManagement.Nation[]",
                name: "members",
                type: "tuple[]",
              },
            ],
            internalType: "struct MembershipManagement.CouncilGroup[]",
            name: "groups",
            type: "tuple[]",
          },
        ],
        internalType: "struct MembershipManagement.Council",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nationId",
        type: "address",
      },
    ],
    name: "getCouncilForNation",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "randomizeByGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "randomizeByMember",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "outputCountForGroup",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "outputCountForMember",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "voteDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "voteNumerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumNumerator",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "avgVotes",
                type: "bool",
              },
            ],
            internalType: "struct MembershipManagement.VotingParameters",
            name: "votingParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "id",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                ],
                internalType: "struct MembershipManagement.Nation[]",
                name: "members",
                type: "tuple[]",
              },
            ],
            internalType: "struct MembershipManagement.CouncilGroup[]",
            name: "groups",
            type: "tuple[]",
          },
        ],
        internalType: "struct MembershipManagement.Council",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getCouncilRoleForGroup",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "member",
            type: "address",
          },
          {
            internalType: "bool",
            name: "voteCasted",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
        ],
        internalType: "struct MembershipManagement.Vote[]",
        name: "vs",
        type: "tuple[]",
      },
    ],
    name: "getCouncilVotes",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "councilId",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "randomizeByGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "randomizeByMember",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "outputCountForGroup",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "outputCountForMember",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "voteDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "voteNumerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumNumerator",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "avgVotes",
                type: "bool",
              },
            ],
            internalType: "struct MembershipManagement.VotingParameters",
            name: "votingParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "groupId",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "member",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "voteCasted",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "timestamp",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "proposalId",
                    type: "uint256",
                  },
                ],
                internalType: "struct MembershipManagement.Vote[]",
                name: "votes",
                type: "tuple[]",
              },
              {
                internalType: "int256",
                name: "score",
                type: "int256",
              },
            ],
            internalType: "struct MembershipManagement.CouncilGroupVotes[]",
            name: "votes",
            type: "tuple[]",
          },
          {
            internalType: "int256",
            name: "score",
            type: "int256",
          },
        ],
        internalType: "struct MembershipManagement.CouncilVotes[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCouncils",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "randomizeByGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "randomizeByMember",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "outputCountForGroup",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "outputCountForMember",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "voteDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "voteNumerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumNumerator",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "avgVotes",
                type: "bool",
              },
            ],
            internalType: "struct MembershipManagement.VotingParameters",
            name: "votingParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "id",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                ],
                internalType: "struct MembershipManagement.Nation[]",
                name: "members",
                type: "tuple[]",
              },
            ],
            internalType: "struct MembershipManagement.CouncilGroup[]",
            name: "groups",
            type: "tuple[]",
          },
        ],
        internalType: "struct MembershipManagement.Council[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
    ],
    name: "getNation",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "id",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct MembershipManagement.Nation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nationId",
        type: "address",
      },
    ],
    name: "removeNation",
    outputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proposalAddress",
        type: "address",
      },
    ],
    name: "updateVotingParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040527f7fcce6a499b6d8a3672e3669f525a458fa2543baa244623617dd2ae829df407d6080527fed8815186908135b357c7061ba3c55257b68958e2410b61db8545aeec7a2a95b60a0527ff965ff90568a04fa10fac40602bcbfc47d8be6cfe6e27f85c10e31d8757fe49760c0527f79390b8ce962a43f5951d1ed360f47f4a2c7ad9ccf449c00c6102231fe41bc4d60e0527f85f6017c7f3635f3e21f932bfcec61f314ced22845f0e0e3813bdc644b86d415610100527f065a4c25030bac931a2a8918598ed1bdd12b4bcee1d984f7a29145a5a12aa500610120527ffa7f857eacbee4676fe5725cb4ad51d1057eedfc53fcc9131edf602c759639e86101405234801561011057600080fd5b5060405161458738038061458783398101604081905261012f91611389565b600880546001600160a01b0319166001600160a01b0383161790556040805180820182526006815265213937b5b2b960d11b6020808301919091526080516000908152600790915291909120906101869082611458565b5060808051600081815260076020818152604080842060019081019590955580516101208101825284815280830185815281830186815260608301878152838a0189815260a0850189815260c086018b815260e087018b81526101008089018d81529e518d52998b9052978b20965160028801805497519651955161ffff1990981691151561ff001916919091179515159099029490941762010000600160501b0319166201000063ffffffff9485160263ffffffff60301b19161766010000000000009390951692909202939093179095559051600383015592516004820155915160058301555160068201559351908401805460ff19169115159190911790556008909201805482018155825280549091906102a390611516565b9182905550608051600090815260076020526040812060080180549091906102cd576102cd61153d565b600091825260208083206003909202909101929092556040805180820182526007808252665072696d61727960c81b8286015260805184529093528120600801805490919061031e5761031e61153d565b9060005260206000209060030201600101908161033b9190611458565b506080516001805460009081526005602081815260408084208690556006805495860190556000805160206145678339815191529094019490945582518084018452908152642837bbb2b960d91b8185015260a0518252600790935220906103a39082611458565b5060a08051600081815260076020818152604080842060019081019590955580516101208101825284815280830186815281830186815260608301888152608084018981526006858c0181815260c087018c815260e088018d8152610100808a018e81529f518e529a8c9052988c20975160028901805498519751965161ffff1990991691151561ff00191691909117961515909a029590951762010000600160501b0319166201000063ffffffff9586160263ffffffff60301b19161766010000000000009490961693909302949094179096559451600384015593516004830155925160058201559051918101919091559351908401805460ff19169115159190911790556008909201805482018155825280549091906104c590611516565b918290555060a051600090815260076020526040812060080180549091906104ef576104ef61153d565b600091825260208083206003909202909101929092556040805180820182526007808252665072696d61727960c81b8286015260a0518452909352812060080180549091906105405761054061153d565b9060005260206000209060030201600101908161055d9190611458565b5060a051600180546000908152600560209081526040808320859055600680549485019055600080516020614567833981519152909301939093558151808301835260078082526610d95b9d1c985b60ca1b8286015260c051835290935220906105c79082611458565b5060c0516007600060c051815260200190815260200160002060010181905550604051806101200160405280600015158152602001600015158152602001600063ffffffff168152602001600163ffffffff16815260200160038152602001600181526020016001815260200160028152602001600015158152506007600060c051815260200190815260200160002060020160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548163ffffffff021916908363ffffffff16021790555060608201518160000160066101000a81548163ffffffff021916908363ffffffff1602179055506080820151816001015560a0820151816002015560c0820151816003015560e082015181600401556101008201518160050160006101000a81548160ff0219169083151502179055509050506007600060c051815260200190815260200160002060080160018160018154018082558091505003906000526020600020905050604051806040016040528060078152602001665072696d61727960c81b8152506007600060c05181526020019081526020016000206008016000815481106107b2576107b261153d565b906000526020600020906003020160010190816107cf9190611458565b506001600081546107df90611516565b918290555060c051600090815260076020526040812060080180549091906108095761080961153d565b6000918252602080832060039092029091019290925560c05160018054835260058452604080842083905560068054928301905560008051602061456783398151915290910191909155805180820182526008815267456d657267696e6760c01b8185015260e051835260079093529020906108859082611458565b5060e0516007600060e051815260200190815260200160002060010181905550604051806101200160405280600115158152602001600015158152602001600163ffffffff168152602001600063ffffffff16815260200160058152602001600381526020016001815260200160048152602001600015158152506007600060e051815260200190815260200160002060020160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548163ffffffff021916908363ffffffff16021790555060608201518160000160066101000a81548163ffffffff021916908363ffffffff1602179055506080820151816001015560a0820151816002015560c0820151816003015560e082015181600401556101008201518160050160006101000a81548160ff0219169083151502179055509050506007600060e051815260200190815260200160002060080160018160018154018082558091505003906000526020600020905050600160008154610a3590611516565b918290555060e05160009081526007602052604081206008018054909190610a5f57610a5f61153d565b6000918252602080832060039092029091019290925560408051808201825260078082526647726f7570204160c81b8286015260e051845290935281206008018054909190610ab057610ab061153d565b90600052602060002090600302016001019081610acd9190611458565b5060e0516001805460009081526005602090815260408083208590559382526007905291822060080180548201815582528054909190610b0c90611516565b918290555060e051600090815260076020526040902060080180546001908110610b3857610b3861153d565b6000918252602080832060039092029091019290925560408051808201825260078082526623b937bab8102160c91b8286015260e0518452909352902060080180546001908110610b8b57610b8b61153d565b90600052602060002090600302016001019081610ba89190611458565b5060e051600180546000908152600560209081526040808320859055600680549485019055600080516020614567833981519152909301939093558151808301835260078082526611d95b995c985b60ca1b828601526101005183529093522090610c139082611458565b50610100516007600061010051815260200190815260200160002060010181905550604051806101200160405280600015158152602001600015158152602001600063ffffffff168152602001600063ffffffff16815260200160018152602001600181526020016001815260200160028152602001600115158152506007600061010051815260200190815260200160002060020160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548163ffffffff021916908363ffffffff16021790555060608201518160000160066101000a81548163ffffffff021916908363ffffffff1602179055506080820151816001015560a0820151816002015560c0820151816003015560e082015181600401556101008201518160050160006101000a81548160ff0219169083151502179055509050506007600061010051815260200190815260200160002060080160018160018154018082558091505003906000526020600020905050604051806040016040528060078152602001665072696d61727960c81b81525060076000610100518152602001908152602001600020600801600081548110610e0357610e0361153d565b90600052602060002090600302016001019081610e209190611458565b50600160008154610e3090611516565b91829055506101005160009081526007602052604081206008018054909190610e5b57610e5b61153d565b60009182526020808320600390920290910192909255610100516001805483526005845260408084208390556006805492830181556000805160206145678339815191529092019290925581518083018352908152652632b9b9b2b960d11b818501526101205183526007909352902090610ed69082611458565b50610120516007600061012051815260200190815260200160002060010181905550604051806101200160405280600015158152602001600015158152602001600063ffffffff168152602001600163ffffffff16815260200160038152602001600181526020016001815260200160058152602001600015158152506007600061012051815260200190815260200160002060020160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548163ffffffff021916908363ffffffff16021790555060608201518160000160066101000a81548163ffffffff021916908363ffffffff1602179055506080820151816001015560a0820151816002015560c0820151816003015560e082015181600401556101008201518160050160006101000a81548160ff0219169083151502179055509050506007600061012051815260200190815260200160002060080160018160018154018082558091505003906000526020600020905050604051806040016040528060078152602001665072696d61727960c81b815250600760006101205181526020019081526020016000206008016000815481106110c6576110c661153d565b906000526020600020906003020160010190816110e39190611458565b506001600081546110f390611516565b9182905550610120516000908152600760205260408120600801805490919061111e5761111e61153d565b600091825260208083206003909202909101929092556101205160018054835260058452604080842083905560068054928301905560008051602061456783398151915290910191909155805180820182526008815267496e64757374727960c01b81850152610140518352600790935290209061119c9082611458565b5061014080516000818152600760208181526040808420600190810195909555805161012081018252848152808301858152818301868152606083018881526080840187815260a085018a815260c086018b815260e087018c81526101008089018d81528f518e528c8c528a8e20995160028b0180549a519951985161ffff19909b1691151561ff001916919091179815159092029790971762010000600160501b0319166201000063ffffffff9788160263ffffffff60301b1916176601000000000000969098169590950296909617909355905160038601555160048501555160058401559051600683015551818501805460ff19169115159190911790556008908101805490960190955580518082018252838152665072696d61727960c81b8184015295518452919052812090910180549091906112e0576112e061153d565b906000526020600020906003020160010190816112fd9190611458565b5060016000815461130d90611516565b918290555061014051600090815260076020526040812060080180549091906113385761133861153d565b60009182526020808320600390920290910192909255610140516001805483526005909352604082208190556006805493840181559091526000805160206145678339815191529091015550611553565b60006020828403121561139b57600080fd5b81516001600160a01b03811681146113b257600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806113e357607f821691505b60208210810361140357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561145357806000526020600020601f840160051c810160208510156114305750805b601f840160051c820191505b81811015611450576000815560010161143c565b50505b505050565b81516001600160401b03811115611471576114716113b9565b6114858161147f84546113cf565b84611409565b6020601f8211600181146114b957600083156114a15750848201515b600019600385901b1c1916600184901b178455611450565b600084815260208120601f198516915b828110156114e957878501518255602094850194600190920191016114c9565b50848210156115075786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b60006001820161153657634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b60805160a05160c05160e051610100516101205161014051612f896115de60003960008181610271015261212901526000818161031801526120fa015260008181610217015261200f0152600081816102ab015261209c0152600081816103f5015261206d0152600081816103b9015261203e01526000818161014c01526120cb0152612f896000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063b0b224d7116100b8578063d5a2a5dd1161007c578063d5a2a5dd1461035a578063e7ad2ed414610362578063ed1f1b9014610382578063ee67c353146103b4578063f2bcac3d146103db578063f4f10da9146103f057600080fd5b8063b0b224d7146102cd578063c4bdfb1f146102e0578063c8881997146102f3578063cf61552a14610313578063d3d1ff301461033a57600080fd5b806359bd7a741161010a57806359bd7a74146102125780635e805757146102395780635e986ccd146102595780636d3491ec1461026c578063802751ba14610293578063aca2c41f146102a657600080fd5b8063029793ec146101475780630ed40bd0146101815780630f2d64d1146101b35780633773cfe1146101e85780634a7e372d146101fd575b600080fd5b61016e7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b61019461018f366004612269565b610417565b604080516001600160a01b039093168352602083019190915201610178565b6101d86101c1366004612286565b600090815260076020526040902060080154151590565b6040519015158152602001610178565b6101fb6101f6366004612269565b6106f7565b005b6102056108c8565b60405161017891906124bd565b61016e7f000000000000000000000000000000000000000000000000000000000000000081565b61024c610247366004612269565b610ccb565b6040516101789190612522565b61024c610267366004612286565b611031565b61016e7f000000000000000000000000000000000000000000000000000000000000000081565b6101d86102a1366004612269565b611380565b61016e7f000000000000000000000000000000000000000000000000000000000000000081565b61024c6102db366004612286565b6113a1565b61016e6102ee366004612269565b6116ef565b610306610301366004612269565b611a87565b6040516101789190612535565b61016e7f000000000000000000000000000000000000000000000000000000000000000081565b61016e610348366004612286565b60009081526005602052604090205490565b60025461016e565b61037561037036600461262c565b611b63565b6040516101789190612716565b6101d8610390366004612286565b60009081526005602090815260408083205483526007909152902060080154151590565b61016e7f000000000000000000000000000000000000000000000000000000000000000081565b6103e3611e96565b6040516101789190612873565b61016e7f000000000000000000000000000000000000000000000000000000000000000081565b60085460009081906001600160a01b03163314610446576040516282b42960e81b815260040160405180910390fd5b60008390506000816001600160a01b031663b46a357f6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561048b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104b391908101906128c1565b90506104c28160000151611380565b156104e057604051632607e5b560e21b815260040160405180910390fd5b6000826001600160a01b031663a0f44c926040518163ffffffff1660e01b8152600401602060405180830381865afa158015610520573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610544919061299e565b6000818152600560209081526040808320548352600790915281209192505b60088201548110156105af5782826008018281548110610585576105856129b7565b90600052602060002090600302016000015403156105af57806105a7816129e3565b915050610563565b60008260080182815481106105c6576105c66129b7565b6000918252602082208254600390920201925090806105e4836129e3565b909155505084516001600160a01b039081166000908152600360209081526040909120875181546001600160a01b031916931692909217825586015186919060018201906106329082612a99565b50508551600280546001818101835560008381527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90920180546001600160a01b039586166001600160a01b031991821617909155888201548b518616845260046020908152604085209190915587850180548085018255908552938190208c5194909502909401805493909516921691909117835590880151889350908201906106dd9082612a99565b505094516001909301549297509195505050505050915091565b6008546001600160a01b03163314610721576040516282b42960e81b815260040160405180910390fd5b60008190506000816001600160a01b031663fd50aa446040518163ffffffff1660e01b8152600401600060405180830381865afa158015610766573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261078e9190810190612d5d565b905060005b8160200151518110156108c2576000826020015182815181106107b8576107b86129b7565b60209081029190910181015180516000908152600790925260408220600881015491935091036107fb57604051634b4c8d2960e11b815260040160405180910390fd5b6020828101516101008082015160078501805460ff19169115159190911790556040820151600285018054606085015185519686015169ffffffffffffffff0000199092166201000063ffffffff9586160269ffffffff000000000000191617600160301b94909116939093029290921761ffff191694151561ff001916949094179015159091021790915560c0810151600583015560e081015160068301556080810151600383015560a001516004820155826108b8816129e3565b9350505050610793565b50505050565b60606000806006805490506001600160401b038111156108ea576108ea612548565b60405190808252806020026020018201604052801561092357816020015b610910612156565b8152602001906001900390816109085790505b5090505b600654821015610cc5576007600060068481548110610948576109486129b7565b9060005260206000200154815260200190815260200160002060405180608001604052908160008201805461097c906129fc565b80601f01602080910402602001604051908101604052809291908181526020018280546109a8906129fc565b80156109f55780601f106109ca576101008083540402835291602001916109f5565b820191906000526020600020905b8154815290600101906020018083116109d857829003601f168201915b505050918352505060018201546020808301919091526040805161012081018252600285015460ff80821615158352610100808304821615158487015263ffffffff620100008404811685870152600160301b90930490921660608085019190915260038801546080850152600488015460a0850152600588015460c0850152600688015460e08501526007880154909116151591830191909152828501919091526008850180548351818602810186019094528084529190940193919260009084015b82821015610c8d578382906000526020600020906003020160405180606001604052908160008201548152602001600182018054610af6906129fc565b80601f0160208091040260200160405190810160405280929190818152602001828054610b22906129fc565b8015610b6f5780601f10610b4457610100808354040283529160200191610b6f565b820191906000526020600020905b815481529060010190602001808311610b5257829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015610c76576000848152602090819020604080518082019091526002850290910180546001600160a01b031682526001810180549293919291840191610be5906129fc565b80601f0160208091040260200160405190810160405280929190818152602001828054610c11906129fc565b8015610c5e5780601f10610c3357610100808354040283529160200191610c5e565b820191906000526020600020905b815481529060010190602001808311610c4157829003601f168201915b50505050508152505081526020019060010190610b9d565b505050508152505081526020019060010190610ab9565b5050505081525050818381518110610ca757610ca76129b7565b60200260200101819052508180610cbd906129e3565b925050610927565b92915050565b610cd3612156565b6001600160a01b03821660009081526004602090815260408083205483526007909152808220815160808101909252805482908290610d11906129fc565b80601f0160208091040260200160405190810160405280929190818152602001828054610d3d906129fc565b8015610d8a5780601f10610d5f57610100808354040283529160200191610d8a565b820191906000526020600020905b815481529060010190602001808311610d6d57829003601f168201915b505050918352505060018201546020808301919091526040805161012081018252600285015460ff80821615158352610100808304821615158487015263ffffffff620100008404811685870152600160301b90930490921660608085019190915260038801546080850152600488015460a0850152600588015460c0850152600688015460e08501526007880154909116151591830191909152828501919091526008850180548351818602810186019094528084529190940193919260009084015b82821015611022578382906000526020600020906003020160405180606001604052908160008201548152602001600182018054610e8b906129fc565b80601f0160208091040260200160405190810160405280929190818152602001828054610eb7906129fc565b8015610f045780601f10610ed957610100808354040283529160200191610f04565b820191906000526020600020905b815481529060010190602001808311610ee757829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b8282101561100b576000848152602090819020604080518082019091526002850290910180546001600160a01b031682526001810180549293919291840191610f7a906129fc565b80601f0160208091040260200160405190810160405280929190818152602001828054610fa6906129fc565b8015610ff35780601f10610fc857610100808354040283529160200191610ff3565b820191906000526020600020905b815481529060010190602001808311610fd657829003601f168201915b50505050508152505081526020019060010190610f32565b505050508152505081526020019060010190610e4e565b50505091525090949350505050565b611039612156565b60008281526007602052604090819020815160808101909252805482908290611061906129fc565b80601f016020809104026020016040519081016040528092919081815260200182805461108d906129fc565b80156110da5780601f106110af576101008083540402835291602001916110da565b820191906000526020600020905b8154815290600101906020018083116110bd57829003601f168201915b505050918352505060018201546020808301919091526040805161012081018252600285015460ff80821615158352610100808304821615158487015263ffffffff620100008404811685870152600160301b90930490921660608085019190915260038801546080850152600488015460a0850152600588015460c0850152600688015460e08501526007880154909116151591830191909152828501919091526008850180548351818602810186019094528084529190940193919260009084015b828210156113725783829060005260206000209060030201604051806060016040529081600082015481526020016001820180546111db906129fc565b80601f0160208091040260200160405190810160405280929190818152602001828054611207906129fc565b80156112545780601f1061122957610100808354040283529160200191611254565b820191906000526020600020905b81548152906001019060200180831161123757829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b8282101561135b576000848152602090819020604080518082019091526002850290910180546001600160a01b0316825260018101805492939192918401916112ca906129fc565b80601f01602080910402602001604051908101604052809291908181526020018280546112f6906129fc565b80156113435780601f1061131857610100808354040283529160200191611343565b820191906000526020600020905b81548152906001019060200180831161132657829003601f168201915b50505050508152505081526020019060010190611282565b50505050815250508152602001906001019061119e565b505050915250909392505050565b6001600160a01b039081166000818152600360205260409020549091161490565b6113a9612156565b60008281526005602090815260408083205483526007909152908190208151608081019092528054829082906113de906129fc565b80601f016020809104026020016040519081016040528092919081815260200182805461140a906129fc565b80156114575780601f1061142c57610100808354040283529160200191611457565b820191906000526020600020905b81548152906001019060200180831161143a57829003601f168201915b505050918352505060018201546020808301919091526040805161012081018252600285015460ff80821615158352610100808304821615158487015263ffffffff620100008404811685870152600160301b90930490921660608085019190915260038801546080850152600488015460a0850152600588015460c0850152600688015460e08501526007880154909116151591830191909152828501919091526008850180548351818602810186019094528084529190940193919260009084015b82821015611372578382906000526020600020906003020160405180606001604052908160008201548152602001600182018054611558906129fc565b80601f0160208091040260200160405190810160405280929190818152602001828054611584906129fc565b80156115d15780601f106115a6576101008083540402835291602001916115d1565b820191906000526020600020905b8154815290600101906020018083116115b457829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156116d8576000848152602090819020604080518082019091526002850290910180546001600160a01b031682526001810180549293919291840191611647906129fc565b80601f0160208091040260200160405190810160405280929190818152602001828054611673906129fc565b80156116c05780601f10611695576101008083540402835291602001916116c0565b820191906000526020600020905b8154815290600101906020018083116116a357829003601f168201915b505050505081525050815260200190600101906115ff565b50505050815250508152602001906001019061151b565b6008546000906001600160a01b0316331461171c576040516282b42960e81b815260040160405180910390fd5b61172582611380565b61174257604051638979ca3b60e01b815260040160405180910390fd5b6001600160a01b03821660009081526004602090815260408083205483526007909152812090805b6008830154821015611a7957600083600801838154811061178d5761178d6129b7565b9060005260206000209060030201905060005b6002820154811015611a5857866001600160a01b03168260020182815481106117cb576117cb6129b7565b60009182526020909120600290910201546001600160a01b031603611a465760028201546117fb90600190612e63565b811461188b5760028201805461181390600190612e63565b81548110611823576118236129b7565b9060005260206000209060020201826002018281548110611846576118466129b7565b60009182526020909120825460029092020180546001600160a01b0319166001600160a01b0390921691909117815560018082019061188790840182612e76565b5050505b8160020180548061189e5761189e612f3d565b60008281526020812060026000199093019283020180546001600160a01b0319168155906118cf6001830182612183565b5050905560005b6002548110156119ed57876001600160a01b0316600282815481106118fd576118fd6129b7565b6000918252602090912001546001600160a01b0316036119db5760025461192690600190612e63565b81146119a7576002805461193c90600190612e63565b8154811061194c5761194c6129b7565b600091825260209091200154600280546001600160a01b039092169183908110611978576119786129b7565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b60028054806119b8576119b8612f3d565b600082815260209020810160001990810180546001600160a01b03191690550190555b806119e5816129e3565b9150506118d6565b6001600160a01b038816600090815260036020526040812080546001600160a01b031916815590611a216001830182612183565b5050506001600160a01b03871660009081526004602052604081205560019250611a58565b80611a50816129e3565b9150506117a0565b8215611a65575050611a79565b83611a6f816129e3565b945050505061176a565b50506001015490505b919050565b604080518082018252600080825260606020808401919091526001600160a01b038581168352600382529184902084518086019095528054909216845260018201805493949391840191611ada906129fc565b80601f0160208091040260200160405190810160405280929190818152602001828054611b06906129fc565b8015611b535780601f10611b2857610100808354040283529160200191611b53565b820191906000526020600020905b815481529060010190602001808311611b3657829003601f168201915b5050505050815250509050919050565b60408051600780825261010082019092526060916000918291816020015b611b896121c0565b815260200190600190039081611b815790505090505b8351821015611e8f576000848381518110611bbc57611bbc6129b7565b602002602001015190506000611bd58260000151610ccb565b90506000611be7828460000151611eee565b90506000611bf8836020015161200b565b90506000858281518110611c0e57611c0e6129b7565b60200260200101519050836020015181600001818152505083604001518160200181905250806040015151600003611cb9578360600151516001600160401b03811115611c5d57611c5d612548565b604051908082528060200260200182016040528015611cb257816020015b611c9f60405180606001604052806000815260200160608152602001600081525090565b815260200190600190039081611c7b5790505b5060408201525b60005b816040015151811015611da557604051806060016040528086606001518381518110611cea57611cea6129b7565b60200260200101516000015181526020018b516001600160401b03811115611d1457611d14612548565b604051908082528060200260200182016040528015611d6657816020015b604080516080810182526000808252602080830182905292820181905260608201528252600019909201910181611d325790505b508152602001600081525082604001518281518110611d8757611d876129b7565b60200260200101819052508080611d9d906129e3565b915050611cbc565b60005b826040015151811015611df25784516040840151805183908110611dce57611dce6129b7565b6020026020010151600001510315611df25780611dea816129e3565b915050611da8565b826040015151811115611e1857604051634b4c8d2960e11b815260040160405180910390fd5b8683604001518281518110611e2f57611e2f6129b7565b6020026020010151602001518a81518110611e4c57611e4c6129b7565b602002602001018190525082888581518110611e6a57611e6a6129b7565b60200260200101819052508880611e80906129e3565b99505050505050505050611b9f565b9392505050565b60606006805480602002602001604051908101604052809291908181526020018280548015611ee457602002820191906000526020600020905b815481526020019060010190808311611ed0575b5050505050905090565b611f1260405180606001604052806000815260200160608152602001606081525090565b60005b836060015151811015611ff25760005b84606001518281518110611f3b57611f3b6129b7565b60200260200101516040015151811015611fdf57836001600160a01b031685606001518381518110611f6f57611f6f6129b7565b6020026020010151604001518281518110611f8c57611f8c6129b7565b6020026020010151600001516001600160a01b031603611fcd5784606001518281518110611fbc57611fbc6129b7565b602002602001015192505050610cc5565b80611fd7816129e3565b915050611f25565b81611fe9816129e3565b92505050611f15565b60405163057f71d760e21b815260040160405180910390fd5b60007f0000000000000000000000000000000000000000000000000000000000000000820361203c57506000919050565b7f0000000000000000000000000000000000000000000000000000000000000000820361206b57506001919050565b7f0000000000000000000000000000000000000000000000000000000000000000820361209a57506002919050565b7f000000000000000000000000000000000000000000000000000000000000000082036120c957506003919050565b7f000000000000000000000000000000000000000000000000000000000000000082036120f857506004919050565b7f0000000000000000000000000000000000000000000000000000000000000000820361212757506005919050565b7f00000000000000000000000000000000000000000000000000000000000000008203611ff257506006919050565b6040805160808101825260608152600060208201529081016121766121ef565b8152602001606081525090565b50805461218f906129fc565b6000825580601f1061219f575050565b601f0160209004906000526020600020908101906121bd919061223b565b50565b604080516080810190915260008152602081016121db6121ef565b815260200160608152602001600081525090565b6040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915290565b5b80821115612250576000815560010161223c565b5090565b6001600160a01b03811681146121bd57600080fd5b60006020828403121561227b57600080fd5b8135611e8f81612254565b60006020828403121561229857600080fd5b5035919050565b60005b838110156122ba5781810151838201526020016122a2565b50506000910152565b600081518084526122db81602086016020860161229f565b601f01601f19169290920160200192915050565b8051151582526020810151151560208301526040810151612318604084018263ffffffff169052565b506060810151612330606084018263ffffffff169052565b506080810151608083015260a081015160a083015260c081015160c083015260e081015160e083015261010081015161236e61010084018215159052565b505050565b60018060a01b038151168252600060208201516040602085015261239a60408501826122c3565b949350505050565b6000815161018084526123b96101808501826122c3565b90506020830151602085015260408301516123d760408601826122ef565b50606083015184820361016086015280518083526020918201918084019190600582901b85010160005b828110156124b157601f1986830301845284518051835260208101516060602085015261243160608501826122c3565b905060408201519150838103604085015280825180835260208301915060208160051b84010160208501945060005b8281101561249157601f1985830301845261247c828751612373565b60209687019694909401939150600101612460565b508096505050505050602085019450602084019350600181019050612401565b50979650505050505050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b8281101561251657603f198786030184526125018583516123a2565b945060209384019391909101906001016124e5565b50929695505050505050565b602081526000611e8f60208301846123a2565b602081526000611e8f6020830184612373565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171561258057612580612548565b60405290565b604080519081016001600160401b038111828210171561258057612580612548565b60405161012081016001600160401b038111828210171561258057612580612548565b604051601f8201601f191681016001600160401b03811182821017156125f3576125f3612548565b604052919050565b60006001600160401b0382111561261457612614612548565b5060051b60200190565b80151581146121bd57600080fd5b60006020828403121561263e57600080fd5b81356001600160401b0381111561265457600080fd5b8201601f8101841361266557600080fd5b8035612678612673826125fb565b6125cb565b8082825260208201915060208360071b85010192508683111561269a57600080fd5b6020840193505b8284101561270c57608084880312156126b957600080fd5b6126c161255e565b84356126cc81612254565b815260208501356126dc8161261e565b602082810191909152604086810135908301526060808701359083015290835260809094019391909101906126a1565b9695505050505050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b8281101561251657603f198786030184528151610180860181518752602082015161276c60208901826122ef565b5060408201516101806101408901528181518084526101a08a0191506101a08160051b8b0101935060208301925060005b8181101561284a578a850361019f190183528351805186526020808201516060828901819052815190890181905291019060009060808901905b8083101561282557835160018060a01b0381511683526020810151151560208401526040810151604084015260608101516060840152506080820191506020840193506001830192506127d7565b506040938401519890930197909752509450602093840193929092019160010161279d565b50505050606091909101516101609690960195909552602093840193919091019060010161273e565b602080825282518282018190526000918401906040840190835b818110156128ab57835183526020938401939092019160010161288d565b509095945050505050565b8051611a8281612254565b6000602082840312156128d357600080fd5b81516001600160401b038111156128e957600080fd5b8201604081850312156128fb57600080fd5b612903612586565b815161290e81612254565b815260208201516001600160401b0381111561292957600080fd5b80830192505084601f83011261293e57600080fd5b81516001600160401b0381111561295757612957612548565b61296a601f8201601f19166020016125cb565b81815286602083860101111561297f57600080fd5b61299082602083016020870161229f565b602083015250949350505050565b6000602082840312156129b057600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016129f5576129f56129cd565b5060010190565b600181811c90821680612a1057607f821691505b602082108103612a3057634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561236e57806000526020600020601f840160051c81016020851015612a5d5750805b601f840160051c820191505b81811015612a7d5760008155600101612a69565b5050505050565b600019600383901b1c191660019190911b1790565b81516001600160401b03811115612ab257612ab2612548565b612ac681612ac084546129fc565b84612a36565b6020601f821160018114612af45760008315612ae25750848201515b612aec8482612a84565b855550612a7d565b600084815260208120601f198516915b82811015612b245787850151825560209485019460019092019101612b04565b5084821015612b425786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b8051611a828161261e565b805163ffffffff81168114611a8257600080fd5b600082601f830112612b8157600080fd5b8151612b8f612673826125fb565b8082825260208201915060206101408402860101925085831115612bb257600080fd5b602085015b83811015612c9657808703610140811215612bd157600080fd5b612bd9612586565b82518152610120601f1983011215612bf057600080fd5b612bf86125a8565b9150612c0660208401612b51565b8252612c1460408401612b51565b6020830152612c2560608401612b5c565b6040830152612c3660808401612b5c565b606083015260a083810151608084015260c0808501519184019190915260e0808501519184019190915261010084015190830152612c776101208401612b51565b6101008301526020818101929092528452929092019161014001612bb7565b5095945050505050565b600082601f830112612cb157600080fd5b8151612cbf612673826125fb565b8082825260208201915060208360071b860101925085831115612ce157600080fd5b602085015b83811015612c965760808188031215612cfe57600080fd5b612d0661255e565b8151612d1181612254565b81526020820151612d218161261e565b60208281019190915260408381015190830152606080840151908301529084529290920191608001612ce6565b805160058110611a8257600080fd5b600060208284031215612d6f57600080fd5b81516001600160401b03811115612d8557600080fd5b82016101208185031215612d9857600080fd5b612da06125a8565b8151815260208201516001600160401b03811115612dbd57600080fd5b612dc986828501612b70565b60208301525060408201516001600160401b03811115612de857600080fd5b612df486828501612ca0565b60408301525060608281015190820152612e1060808301612d4e565b6080820152612e2160a08301612b51565b60a0820152612e3260c08301612b51565b60c0820152612e4360e083016128b6565b60e0820152612e5561010083016128b6565b610100820152949350505050565b81810381811115610cc557610cc56129cd565b818103612e81575050565b612e8b82546129fc565b6001600160401b03811115612ea257612ea2612548565b612eb081612ac084546129fc565b6000601f821160018114612ed55760008315612ae2575084820154612aec8482612a84565b600085815260209020601f19841690600086815260209020845b83811015612f0f5782860154825560019586019590910190602001612eef565b5085831015612f2d5781850154600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220ab2d701c1dc3ac4f044cbc724b69ec784675f9d0d49d61ad6d18e99bd0038f1564736f6c634300081c0033f652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f";

type CouncilManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CouncilManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CouncilManager__factory extends ContractFactory {
  constructor(...args: CouncilManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _daoAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_daoAddress, overrides || {});
  }
  override deploy(
    _daoAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_daoAddress, overrides || {}) as Promise<
      CouncilManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CouncilManager__factory {
    return super.connect(runner) as CouncilManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CouncilManagerInterface {
    return new Interface(_abi) as CouncilManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CouncilManager {
    return new Contract(address, _abi, runner) as unknown as CouncilManager;
  }
}
