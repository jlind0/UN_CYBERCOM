/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Utils, UtilsInterface } from "../../contracts/Utils";

const _abi = [
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "AuthorizationError",
    type: "error",
  },
  {
    inputs: [],
    name: "GroupNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "LogicError",
    type: "error",
  },
  {
    inputs: [],
    name: "NationAlreadyMember",
    type: "error",
  },
  {
    inputs: [],
    name: "NationDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OutstandingProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposalNotReadyForTally",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "memberId",
        type: "address",
      },
    ],
    name: "MemberAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "memberId",
        type: "address",
      },
    ],
    name: "MemberKept",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "memberId",
        type: "address",
      },
    ],
    name: "MemberRejected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "memberId",
        type: "address",
      },
    ],
    name: "MemberRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposalAddress",
        type: "address",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "TallyPrepared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "vote",
        type: "bool",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "startedBy",
        type: "address",
      },
    ],
    name: "VoteStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum MembershipManagement.ApprovalStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "VotingCompleted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockLength",
        type: "uint256",
      },
    ],
    name: "getDigitBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61039a610034600b8282823980515f1a607314602857634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610610034575f3560e01c8063eff46d8114610038575b5f5ffd5b61004b6100463660046101b6565b61005d565b60405190815260200160405180910390f35b5f61006c565b60405180910390fd5b5f82116100bb5760405162461bcd60e51b815260206004820152601d60248201527f426c6f636b206c656e677468206d75737420626520706f7369746976650000006044820152606401610063565b60015f6100c786610188565b90505f6100d485876101f3565b6100de908361020a565b9050848110156101305760405162461bcd60e51b815260206004820152601f60248201527f52657175657374656420626c6f636b206973206f7574206f662072616e6765006044820152606401610063565b5f5b61013c868361020a565b8110156101585761014e600a856101f3565b9350600101610132565b505f61016586600a610300565b905080610172858a610326565b61017c9190610339565b98975050505050505050565b5f805b82156101b05761019c600a84610326565b9250806101a88161034c565b91505061018b565b92915050565b5f5f5f606084860312156101c8575f5ffd5b505081359360208301359350604090920135919050565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176101b0576101b06101df565b818103818111156101b0576101b06101df565b6001815b60018411156102585780850481111561023c5761023c6101df565b600184161561024a57908102905b60019390931c928002610221565b935093915050565b5f8261026e575060016101b0565b8161027a57505f6101b0565b8160018114610290576002811461029a576102b6565b60019150506101b0565b60ff8411156102ab576102ab6101df565b50506001821b6101b0565b5060208310610133831016604e8410600b84101617156102d9575081810a6101b0565b6102e55f19848461021d565b805f19048211156102f8576102f86101df565b029392505050565b5f61030b8383610260565b9392505050565b634e487b7160e01b5f52601260045260245ffd5b5f8261033457610334610312565b500490565b5f8261034757610347610312565b500690565b5f6001820161035d5761035d6101df565b506001019056fea264697066735822122053f27fd532fdaea727fad890bda13a0b97ab1338a6b2d795f810b57426cd580b64736f6c634300081c0033";

type UtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Utils__factory extends ContractFactory {
  constructor(...args: UtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Utils & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Utils__factory {
    return super.connect(runner) as Utils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UtilsInterface {
    return new Interface(_abi) as UtilsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Utils {
    return new Contract(address, _abi, runner) as unknown as Utils;
  }
}
