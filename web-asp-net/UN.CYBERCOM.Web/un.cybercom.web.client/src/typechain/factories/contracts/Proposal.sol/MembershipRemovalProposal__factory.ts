/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MembershipRemovalProposal,
  MembershipRemovalProposalInterface,
  MembershipManagement,
} from "../../../contracts/Proposal.sol/MembershipRemovalProposal";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "daoAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "votingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "councilManagementAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "proposalStorageAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "membershipRemovalAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "membershipManagerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "votingParametersManagerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "packageManagerAddress",
            type: "address",
          },
        ],
        internalType: "struct MembershipManagement.ContractAddresses",
        name: "_contractAddresses",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "id",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct MembershipManagement.Nation",
        name: "_nation",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyInPackage",
    type: "error",
  },
  {
    inputs: [],
    name: "AuthorizationError",
    type: "error",
  },
  {
    inputs: [],
    name: "CanOnlyVotePackage",
    type: "error",
  },
  {
    inputs: [],
    name: "ClosedForDocumentAdd",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingAlreadytStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingNotStarted",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum MembershipManagement.ApprovalStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "StatusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "vote",
        type: "bool",
      },
    ],
    name: "VoteCasted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "VotingCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "VotingStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "docHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "addDocument",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_packageAddress",
        type: "address",
      },
    ],
    name: "enlistPackage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDocuments",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "dochash",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "address",
            name: "docAddress",
            type: "address",
          },
        ],
        internalType: "struct MembershipManagement.Doc[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMembershipResponse",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "id",
                type: "address",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
            ],
            internalType: "struct MembershipManagement.Nation",
            name: "nationToRemove",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "member",
                type: "address",
              },
              {
                internalType: "bool",
                name: "voteCasted",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "proposalId",
                type: "uint256",
              },
            ],
            internalType: "struct MembershipManagement.Vote[]",
            name: "votes",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "enum MembershipManagement.ApprovalStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isProcessing",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "votingStarted",
            type: "bool",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "proposalAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "packageAddress",
            type: "address",
          },
        ],
        internalType: "struct MembershipManagement.MembershipRemovalResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNation",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "id",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct MembershipManagement.Nation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getThreshold",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getVotes",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "member",
            type: "address",
          },
          {
            internalType: "bool",
            name: "voteCasted",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
        ],
        internalType: "struct MembershipManagement.Vote[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isProcessing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "packageAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalType",
    outputs: [
      {
        internalType: "enum MembershipManagement.ProposalTypes",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "processing",
        type: "bool",
      },
    ],
    name: "setProcessing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "random",
        type: "uint256",
      },
    ],
    name: "setRandomNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "startVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum MembershipManagement.ApprovalStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum MembershipManagement.ApprovalStatus",
        name: "_status",
        type: "uint8",
      },
    ],
    name: "updateStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "voteCasted",
        type: "bool",
      },
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votingStarted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523461047f57612700803803908161001a81610483565b918239808281010391610180831261047f57610100610038836104a8565b93601f19011261047f5760405161010081016001600160401b038111828210176104665760405261006b602084016104a8565b8152610079604084016104a8565b6020820190815261008c606085016104a8565b6040830190815261009f608086016104a8565b606084019081526100b260a087016104a8565b90608085019182526100c660c088016104a8565b9260a086019384526100da60e089016104a8565b9460c087019586526100ef6101008a016104a8565b60e0880152610120890151976101408a01519961016081015160018060401b03811161047f57810191604083828401031261047f576040805160808190529081019081106001600160401b038211176104665760405261014e836104a8565b608051526020830151916001600160401b03831161047f57818101601f84860101121561047f578383015160c08190526001600160401b0310610466576101a06020601f19601f60c051011601610483565b60a05260c05160a0515201602060c05183850101011161047f5760209060c051920101602060a051015e60c05160a080515f9201602090810192909252608051905191019081526007805460ff19908116909155600980546001600160a81b03191660089d909d1b610100600160a81b03169c909c17909b558751600d80546001600160a01b03199081166001600160a01b03938416179091559251600e805485169183169190911790559251600f80548416918516919091179055925160108054831691841691909117905592516011805485169183169190911790559251601280548416918516919091179055925160138054831691841691909117905560e0909301516014805490941691161790915560029190915560038054909316831790925561012c81101561047a575061012c5b6004556005805460ff191690554260065560805151601580546001600160a01b0319166001600160a01b03929092169190911790555180516001600160401b03811161046657601654600181811c9116801561045c575b602082101461044857601f81116103e5575b50602091601f8211600114610385579181925f9261037a575b50508160011b915f199060031b1c1916176016555b60405161224390816104bd8239f35b015190505f80610356565b601f1982169260165f52805f20915f5b8581106103cd575083600195106103b5575b505050811b0160165561036b565b01515f1960f88460031b161c191690555f80806103a7565b91926020600181928685015181550194019201610395565b60165f527fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b5124289601f830160051c8101916020841061043e575b601f0160051c01905b818110610433575061033d565b5f8155600101610426565b909150819061041d565b634e487b7160e01b5f52602260045260245ffd5b90607f169061032b565b634e487b7160e01b5f52604160045260245ffd5b6102d4565b5f80fd5b6040519190601f01601f191682016001600160401b0381118382101761046657604052565b51906001600160a01b038216820361047f5756fe6080806040526004361015610012575f80fd5b5f3560e01c9081630248489514611195575080630b3af7f9146110875780630dc96015146110245780630f79223514610fe55780630fb5a6b414610fc8578063200d2ed214610fa357806331393ca614610deb578063348edff714610a82578063351d9f9614610a59578063633dfc701461082c5780636922582b146107c757806383d948b7146107a55780638da5cb5b14610779578063972b8e3014610751578063af640d0f14610734578063b377a854146105ee578063b46a357f146105b2578063b80777ea14610595578063ccbac9f514610578578063d6bfea281461053f578063e75235b8146105245763ef2d87001461010e575f80fd5b346102ff575f3660031901126102ff5760015461012a81611370565b9061013860405192836112e3565b808252610147601f1991611370565b015f5b8181106104e757825f5b8151811015610422576101668161139b565b5060405181545f926101778261160e565b916001811690811561040b57506001146103d7575b50505f8083529181900360200190205460405163129e754360e21b8152916001600160a01b03919091169082600481845afa91821561030b575f926103bb575b50604051635600f04f60e01b81525f81600481855afa90811561030b575f91610399575b506040516310c83e5360e01b8152602081600481865afa90811561030b575f91610368575b506040516351ff484760e01b8152905f82600481875afa91821561030b575f92610316575b5060405163238ac93360e01b815292602084600481885afa93841561030b575f946102cc575b506040519561026e876112ad565b86526020860152604085015260608401526001600160a01b0316608083015260a082015261029c82846113df565b526102a781836113df565b505f1981146102b857600101610154565b634e487b7160e01b5f52601160045260245ffd5b9093506020813d8211610303575b816102e7602093836112e3565b810103126102ff576102f890611387565b9288610260565b5f80fd5b3d91506102da565b6040513d5f823e3d90fd5b9091503d805f833e61032881836112e3565b8101906020818303126102ff578051906001600160401b0382116102ff57019080601f830112156102ff5781516103619260200161171e565b908761023a565b90506020813d8211610391575b81610382602093836112e3565b810103126102ff575186610215565b3d9150610375565b6103b591503d805f833e6103ad81836112e3565b810190611754565b856101f0565b6103d09192503d805f833e6103ad81836112e3565b90846101cc565b909192505f5260205f205f905b8282106103f7575050810190848061018c565b8054828501526020909101906001016103e4565b60ff1916845250508015150281019150848061018c565b506040518091602082016020835281518091526040830190602060408260051b8601019301915f905b82821061045a57505050500390f35b919360019193955060208091603f1989820301855287519060a06104b961049d61048d855160c0865260c0860190611214565b8686015185820388870152611214565b6040850151604085015260608501518482036060860152611214565b928680831b036080820151166080840152818780821b0391015116910152960192019201859493919261044b565b6020906040516104f6816112ad565b606081526060838201525f60408201526060808201525f60808201525f60a08201528282860101520161014a565b346102ff575f3660031901126102ff57602060405160338152f35b346102ff5760203660031901126102ff57600e546001600160a01b0316330361056a57600435600855005b621607ef60ea1b5f5260045ffd5b346102ff575f3660031901126102ff576020600854604051908152f35b346102ff575f3660031901126102ff576020600654604051908152f35b346102ff575f3660031901126102ff576105ca6115f5565b506105ea6105d6611646565b604051918291602083526020830190611238565b0390f35b346102ff5760203660031901126102ff57610607611260565b600d546001600160a01b03163314158061071f575b8061070a575b806106f5575b806106e0575b61056a57600954906001600160a01b03600883901c81169116036106d15760ff81166106c357600a546001600160a01b03166106b45760ff19166001176009556004544281019081106102b857600455600160ff1960055416176005556002547fcf33babc496bb6dc2942b39cb7b75766bbbadf7da50d176ff8c513e9911402395f80a2005b633bf57ac960e21b5f5260045ffd5b62ae4cbb60e51b5f5260045ffd5b635fc483c560e01b5f5260045ffd5b50600a546001600160a01b031633141561062e565b506011546001600160a01b0316331415610628565b506012546001600160a01b0316331415610622565b50600e546001600160a01b031633141561061c565b346102ff575f3660031901126102ff576020600254604051908152f35b346102ff575f3660031901126102ff57600a546040516001600160a01b039091168152602090f35b346102ff575f3660031901126102ff5760095460405160089190911c6001600160a01b03168152602090f35b346102ff575f3660031901126102ff57602060ff600954166040519015158152f35b346102ff5760203660031901126102ff576107e0611260565b600a54906001600160a01b03821661081d576001600160a01b03199091166001600160a01b039190911617600a556005805460ff19166002179055005b6319e6d19f60e01b5f5260045ffd5b346102ff5760403660031901126102ff576108456111e7565b6024356001600160a01b038116908190036102ff57600d546001600160a01b031633141580610a44575b80610a2f575b80610a1a575b80610a05575b61056a57600a546001600160a01b03166106b45760ff60095416156109f65760045442116109e757805f52600c602052600260405f2001546002540361096b575b60407f5aaa9aad7433112662b9e5ae23b96ed62b00035f413ab908c55607284e0804e29160025460028351916108f783611292565b83835295151560208084018281524287860190815260608601998a525f878152600c84528890209551865492516001600160a81b03199093166001600160a01b03919091161791151560a01b60ff60a01b1691909117855551600185015596519190920155600254835192835294820152a2005b600b54600160401b8110156109d3577f5aaa9aad7433112662b9e5ae23b96ed62b00035f413ab908c55607284e0804e2916109ae82600160409401600b556113c7565b81546001600160a01b0360039290921b91821b19169083901b17905591506108c29050565b634e487b7160e01b5f52604160045260245ffd5b63335b65a560e11b5f5260045ffd5b633fd0090160e11b5f5260045ffd5b50600a546001600160a01b0316331415610881565b506011546001600160a01b031633141561087b565b506012546001600160a01b0316331415610875565b50600e546001600160a01b031633141561086f565b346102ff575f3660031901126102ff57602060ff6003541660405190610a7e816111f6565b8152f35b346102ff5760a03660031901126102ff57610a9b611260565b6024356001600160401b0381116102ff57610aba903690600401611355565b6044356001600160401b0381116102ff57610ad9903690600401611355565b916084356001600160401b0381116102ff57366023820112156102ff57610b0a90369060248160040135910161131f565b9160018060a01b03600d541633141580610dd6575b80610dc1575b80610dac575b80610d91575b80610d7c575b61056a5760ff60055416610b4a816111f6565b610d6d576040519284519360208601948086835e5f9082019081528190036020019020546001600160a01b03166102ff5760405192610a8392838501918583106001600160401b038411176109d357610bcd610bf194610be392889761178b89393086526001600160a01b0316602086015260c060408601819052850190611214565b6064356060850152838103608085015288611214565b9160a0818403910152611214565b03905ff091821561030b57600154600160401b8110156109d357806001610c1b920160015561139b565b610d5a5781516001600160401b0381116109d357610c39825461160e565b601f8111610d15575b506020601f8211600114610cb157908060209493925f91610ca6575b508160011b915f199060031b1c19161790555b604051928391518091835e5f9082019081520301902080546001600160a01b0319166001600160a01b03909216919091179055005b905083015187610c5e565b601f19821690835f52805f20915f5b818110610cfd5750918391602096959460019410610ce5575b5050811b019055610c71565b8501515f1960f88460031b161c191690558780610cd9565b9192602060018192868a015181550194019201610cc0565b825f5260205f20601f830160051c81019160208410610d50575b601f0160051c01905b818110610d455750610c42565b5f8155600101610d38565b9091508190610d2f565b634e487b7160e01b5f525f60045260245ffd5b6392d496a160e01b5f5260045ffd5b50600a546001600160a01b0316331415610b37565b506009543360089190911c6001600160a01b03161415610b31565b506011546001600160a01b0316331415610b2b565b506012546001600160a01b0316331415610b25565b50600e546001600160a01b0316331415610b1f565b346102ff575f3660031901126102ff575f610120604051610e0b81611276565b828152610e166115f5565b6020820152606060408201528260608201528260808201528260a08201528260c08201528260e0820152826101008201520152600254610e546113f3565b9060045460ff6005541660ff6007541660095460018060a01b03600a54169260405195610e8087611276565b8652610e8a611646565b926020870193845260408701978852606087019586526080870191610eae816111f6565b825260a08701901515815260c087019160ff84161515835260e088019360018060a01b039060081c168452610f0f6101008901953087526101208a019788526040519960208b525160208b01525161014060408b01526101608a0190611238565b985196601f19898b030160608a015260208089519b8c81520198015f9a5b808c10610f8757505088995051608089015251610f49816111f6565b60a088015251151560c087015251151560e0860152516001600160a01b03908116610100860152905181166101208501529051166101408301520390f35b90986020610f986001928c516111b4565b9a019b019a90610f2d565b346102ff575f3660031901126102ff57602060ff6005541660405190610a7e816111f6565b346102ff575f3660031901126102ff576020600454604051908152f35b346102ff5760203660031901126102ff57610ffe6111e7565b600e546001600160a01b0316330361056a5760ff80196007541691151516176007555f80f35b346102ff575f3660031901126102ff5761103c6113f3565b6040518091602082016020835281518091526020604084019201905f5b818110611067575050500390f35b91935091602061107a60019286516111b4565b9401910191849392611059565b346102ff5760203660031901126102ff5760043560058110156102ff57600d546001600160a01b031633141580611180575b8061116b575b80611156575b8061113b575b80611126575b61056a576110de816111f6565b60ff196005541660ff8216176005557f2da7b23ca63c1eb969eee5fae4acb98186abecf5358b0354a82a5183ebca6b2a60206002549260405190611121816111f6565b8152a2005b50600a546001600160a01b03163314156110d1565b506009543360089190911c6001600160a01b031614156110cb565b506011546001600160a01b03163314156110c5565b506012546001600160a01b03163314156110bf565b50600e546001600160a01b03163314156110b9565b346102ff575f3660031901126102ff5760209060ff6007541615158152f35b80516001600160a01b03168252602080820151151590830152604080820151908301526060908101519082015260800190565b6004359081151582036102ff57565b6005111561120057565b634e487b7160e01b5f52602160045260245ffd5b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b906040602061125d9360018060a01b0381511684520151918160208201520190611214565b90565b600435906001600160a01b03821682036102ff57565b61014081019081106001600160401b038211176109d357604052565b608081019081106001600160401b038211176109d357604052565b60c081019081106001600160401b038211176109d357604052565b604081019081106001600160401b038211176109d357604052565b90601f801991011681019081106001600160401b038211176109d357604052565b6001600160401b0381116109d357601f01601f191660200190565b92919261132b82611304565b9161133960405193846112e3565b8294818452818301116102ff578281602093845f960137010152565b9080601f830112156102ff5781602061125d9335910161131f565b6001600160401b0381116109d35760051b60200190565b51906001600160a01b03821682036102ff57565b6001548110156113b35760015f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b600b548110156113b357600b5f5260205f2001905f90565b80518210156113b35760209160051b010190565b600a546060906001600160a01b0316806114f4575050600b5461141581611370565b9061142360405192836112e3565b808252601f1961143282611370565b015f5b8181106114c55750505f5b81811061144c57505090565b806114586001926113c7565b838060a01b0391549060031b1c165f52600c60205260405f2060026040519161148083611292565b60ff8154868060a01b038116855260a01c1615156020840152848101546040840152015460608201526114b382866113df565b526114be81856113df565b5001611440565b6020906040516114d481611292565b5f81525f838201525f60408201525f606082015282828701015201611435565b5f60049160405192838092630dc9601560e01b82525afa91821561030b575f9261151d57505090565b9091503d805f843e61152f81846112e3565b8201916020818403126102ff578051906001600160401b0382116102ff570182601f820112156102ff57805161156481611370565b9361157260405195866112e3565b81855260208086019260071b840101928184116102ff57602001915b83831061159d57505050505090565b6080838303126102ff57604051906115b482611292565b6115bd84611387565b825260208401519081151582036102ff578260209283608095015260408601516040820152878601518882015281520192019161158e565b60405190611602826112c8565b60606020835f81520152565b90600182811c9216801561163c575b602083101461162857565b634e487b7160e01b5f52602260045260245ffd5b91607f169161161d565b60405190611653826112c8565b6015546001600160a01b03168252604051601654839082905f906116768161160e565b80845290600181169081156116fe57506001146116a2575b506020929161169e9103846112e3565b0152565b60165f90815291507fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b51242895b8183106116e2575050810160209081019061168e565b60209193508060019154838589010152019101909184926116cc565b60ff191660208581019190915291151560051b84018201925061168e9050565b92919261172a82611304565b9161173860405193846112e3565b8294818452818301116102ff578281602093845f96015e010152565b6020818303126102ff578051906001600160401b0382116102ff57019080601f830112156102ff57815161125d9260200161171e56fe608080604052346104f557610a83803803809161001c82856104f9565b8339810160c0828203126104f5576100338261051c565b906100406020840161051c565b60408401519093906001600160401b0381116104f557810182601f820112156104f5578281602061007393519101610530565b91606082015191608081015160018060401b0381116104f55782610098918301610575565b60a08201519092906001600160401b0381116104f5576100b89201610575565b8051906001600160401b038211610373576100d35f54610592565b601f81116104a8575b50602090601f83116001146104455761010c92915f9183610387575b50508160011b915f199060031b1c19161790565b5f555b8051906001600160401b0382116103735761012b600154610592565b601f81116103f7575b50602090601f83116001146103925761016392915f91836103875750508160011b915f199060031b1c19161790565b6001555b6002558051926001600160401b03841161037357610186600354610592565b601f811161031a575b50602093601f81116001146102b557806101c29161024795965f916102aa575b508160011b915f199060031b1c19161790565b6003555b600480546001600160a01b039283166001600160a01b0319918216811790925560058054969093169516949094179055426006556002546040517f19457468657265756d205369676e6564204d6573736167653a0a33320000000060208201908152603c8083019390935291815261023f605c826104f9565b5190206105e0565b506004819392931015610296571591821592610282575b5050610273576040516103e5908161069e8239f35b638baa579f60e01b5f5260045ffd5b6001600160a01b0316141590505f8061025e565b634e487b7160e01b5f52602160045260245ffd5b90508401515f6101af565b601f19811660035f52855f20905f5b81811061030257509061024795968360019493106102ea575b5050811b016003556101c6565b8501515f1960f88460031b161c191690555f806102dd565b858801518355602097880197600190930192016102c4565b60035f52610363907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f870160051c81019160208810610369575b601f0160051c01906105ca565b5f61018f565b9091508190610356565b634e487b7160e01b5f52604160045260245ffd5b015190505f806100f8565b90601f1983169160015f52815f20925f5b8181106103df57509084600195949392106103c7575b505050811b01600155610167565b01515f1960f88460031b161c191690555f80806103b9565b929360206001819287860151815501950193016103a3565b60015f5261043f907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6601f850160051c8101916020861061036957601f0160051c01906105ca565b5f610134565b90601f198316915f8052815f20925f5b8181106104905750908460019594939210610478575b505050811b015f5561010f565b01515f1960f88460031b161c191690555f808061046b565b92936020600181928786015181550195019301610455565b5f80526104ef907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f850160051c8101916020861061036957601f0160051c01906105ca565b5f6100dc565b5f80fd5b601f909101601f19168101906001600160401b0382119082101761037357604052565b51906001600160a01b03821682036104f557565b9192916001600160401b0382116103735760405191610559601f8201601f1916602001846104f9565b8294818452818301116104f5578281602093845f96015e010152565b9080601f830112156104f557815161058f92602001610530565b90565b90600182811c921680156105c0575b60208310146105ac57565b634e487b7160e01b5f52602260045260245ffd5b91607f16916105a1565b8181106105d5575050565b5f81556001016105ca565b8151919060418303610610576106099250602082015190606060408401519301515f1a9061061a565b9192909190565b50505f9160029190565b91906fa2a8918ca85bafe22016d0b997e4df60600160ff1b038411610692579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15610687575f516001600160a01b0381161561067d57905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f916003919056fe6080806040526004361015610012575f80fd5b5f3560e01c90816310c83e531461030357508063238ac933146102db5780634a79d50c1461023957806351ff4847146101945780635600f04f146100b2578063b80777ea146100955763ca97372714610069575f80fd5b34610091575f366003190112610091576005546040516001600160a01b039091168152602090f35b5f80fd5b34610091575f366003190112610091576020600654604051908152f35b34610091575f366003190112610091576040515f6001546100d28161031d565b80845290600181169081156101705750600114610112575b61010e836100fa81850382610355565b60405191829160208352602083019061038b565b0390f35b60015f9081527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6939250905b808210610156575090915081016020016100fa6100ea565b91926001816020925483858801015201910190929161013e565b60ff191660208086019190915291151560051b840190910191506100fa90506100ea565b34610091575f366003190112610091576040515f6003546101b48161031d565b808452906001811690811561017057506001146101db5761010e836100fa81850382610355565b60035f9081527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b939250905b80821061021f575090915081016020016100fa6100ea565b919260018160209254838588010152019101909291610207565b34610091575f366003190112610091576040515f5f546102588161031d565b8084529060018116908115610170575060011461027f5761010e836100fa81850382610355565b5f8080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563939250905b8082106102c1575090915081016020016100fa6100ea565b9192600181602092548385880101520191019092916102a9565b34610091575f366003190112610091576004546040516001600160a01b039091168152602090f35b34610091575f366003190112610091576020906002548152f35b90600182811c9216801561034b575b602083101461033757565b634e487b7160e01b5f52602260045260245ffd5b91607f169161032c565b90601f8019910116810190811067ffffffffffffffff82111761037757604052565b634e487b7160e01b5f52604160045260245ffd5b805180835260209291819084018484015e5f828201840152601f01601f191601019056fea2646970667358221220f83b928eaf7f4ed84cd06c0dc031550df0ed31494538233e23c86bcb5b6b213064736f6c634300081c0033a2646970667358221220dfe2bcc19292268bd366b2c2cc2d9f68448f3cb36ffb0d73ee9f63a5c5c86f8164736f6c634300081c0033";

type MembershipRemovalProposalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MembershipRemovalProposalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MembershipRemovalProposal__factory extends ContractFactory {
  constructor(...args: MembershipRemovalProposalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    _contractAddresses: MembershipManagement.ContractAddressesStruct,
    _id: BigNumberish,
    _duration: BigNumberish,
    _nation: MembershipManagement.NationStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _owner,
      _contractAddresses,
      _id,
      _duration,
      _nation,
      overrides || {}
    );
  }
  override deploy(
    _owner: AddressLike,
    _contractAddresses: MembershipManagement.ContractAddressesStruct,
    _id: BigNumberish,
    _duration: BigNumberish,
    _nation: MembershipManagement.NationStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _owner,
      _contractAddresses,
      _id,
      _duration,
      _nation,
      overrides || {}
    ) as Promise<
      MembershipRemovalProposal & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MembershipRemovalProposal__factory {
    return super.connect(runner) as MembershipRemovalProposal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MembershipRemovalProposalInterface {
    return new Interface(_abi) as MembershipRemovalProposalInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MembershipRemovalProposal {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MembershipRemovalProposal;
  }
}
