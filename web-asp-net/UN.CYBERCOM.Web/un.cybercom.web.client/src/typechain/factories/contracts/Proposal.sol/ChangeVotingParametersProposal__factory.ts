/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ChangeVotingParametersProposal,
  ChangeVotingParametersProposalInterface,
  MembershipManagement,
} from "../../../contracts/Proposal.sol/ChangeVotingParametersProposal";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "daoAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "votingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "councilManagementAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "proposalStorageAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "membershipRemovalAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "membershipManagerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "votingParametersManagerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "packageManagerAddress",
            type: "address",
          },
        ],
        internalType: "struct MembershipManagement.ContractAddresses",
        name: "_contractAddresses",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "council",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "randomizeByGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "randomizeByMember",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "outputCountForGroup",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "outputCountForMember",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "voteDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "voteNumerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumNumerator",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "avgVotes",
                type: "bool",
              },
            ],
            internalType: "struct MembershipManagement.VotingParameters",
            name: "parameters",
            type: "tuple",
          },
        ],
        internalType:
          "struct MembershipManagement.ChangeVotingParametersRole[]",
        name: "_parameters",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyInPackage",
    type: "error",
  },
  {
    inputs: [],
    name: "AuthorizationError",
    type: "error",
  },
  {
    inputs: [],
    name: "CanOnlyVotePackage",
    type: "error",
  },
  {
    inputs: [],
    name: "ClosedForDocumentAdd",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingAlreadytStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingNotStarted",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum MembershipManagement.ApprovalStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "StatusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "vote",
        type: "bool",
      },
    ],
    name: "VoteCasted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "VotingCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "VotingStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "docHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "addDocument",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_packageAddress",
        type: "address",
      },
    ],
    name: "enlistPackage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChangeResponse",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "council",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "randomizeByGroup",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "randomizeByMember",
                    type: "bool",
                  },
                  {
                    internalType: "uint32",
                    name: "outputCountForGroup",
                    type: "uint32",
                  },
                  {
                    internalType: "uint32",
                    name: "outputCountForMember",
                    type: "uint32",
                  },
                  {
                    internalType: "uint256",
                    name: "voteDenominator",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "voteNumerator",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "sumDenominator",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "sumNumerator",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "avgVotes",
                    type: "bool",
                  },
                ],
                internalType: "struct MembershipManagement.VotingParameters",
                name: "parameters",
                type: "tuple",
              },
            ],
            internalType:
              "struct MembershipManagement.ChangeVotingParametersRole[]",
            name: "parameters",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "member",
                type: "address",
              },
              {
                internalType: "bool",
                name: "voteCasted",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "proposalId",
                type: "uint256",
              },
            ],
            internalType: "struct MembershipManagement.Vote[]",
            name: "votes",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "enum MembershipManagement.ApprovalStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isProcessing",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "votingStarted",
            type: "bool",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "proposalAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "packageAddress",
            type: "address",
          },
        ],
        internalType:
          "struct MembershipManagement.ChangeVotingParametersResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDocuments",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "dochash",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "address",
            name: "docAddress",
            type: "address",
          },
        ],
        internalType: "struct MembershipManagement.Doc[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getThreshold",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getVotes",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "member",
            type: "address",
          },
          {
            internalType: "bool",
            name: "voteCasted",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
        ],
        internalType: "struct MembershipManagement.Vote[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isProcessing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "packageAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalType",
    outputs: [
      {
        internalType: "enum MembershipManagement.ProposalTypes",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "processing",
        type: "bool",
      },
    ],
    name: "setProcessing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "random",
        type: "uint256",
      },
    ],
    name: "setRandomNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "startVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum MembershipManagement.ApprovalStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum MembershipManagement.ApprovalStatus",
        name: "_status",
        type: "uint8",
      },
    ],
    name: "updateStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "voteCasted",
        type: "bool",
      },
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votingStarted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052346105775761288a803803806100198161057b565b928339810190808203610180811261057757610100610037836105a0565b91601f1901126105775760405161010081016001600160401b038111828210176104645760405261006a602084016105a0565b8152610078604084016105a0565b6020820190815261008b606085016105a0565b6040830190815261009e608086016105a0565b606084019081526100b160a087016105a0565b90608085019182526100c560c088016105a0565b9260a086019384526100d960e089016105a0565b9460c087019586526100ee6101008a016105a0565b9660e081019788526101208a0151986101408b01519a6101608101519060018060401b03821161057757018c601f82011215610577578051906001600160401b038211610464578160051b6020016101459061057b565b9d8e838152602001926101400282016020019181831161057757602001925b82841061048c5750506007805460ff19908116909155600980546001600160a81b03191660089590951b610100600160a81b03169490941790935550509051600d80546001600160a01b03199081166001600160a01b03938416179091559251600e805485169183169190911790559251600f805484169185169190911790559251601080548316918416919091179055925160118054851691831691909117905592516012805484169185169190911790559251601380548316918416919091179055925160148054909416911617909155600291825560038054909116909117905561012c811015610487575061012c5b60045560ff1960055416600555426006555f5b815181101561047857601554680100000000000000008110156104645780600161029792016015556105d2565b50506102a38183610602565b51516102ae826105d2565b50556102e360206102bf8385610602565b51015151151560016102d0846105d2565b50019060ff801983541691151516179055565b6020806102f08385610602565b510151015115156001610302836105d2565b50019061ff0082549160081b169061ff001916179055604060206103268385610602565b51015101516001610336836105d2565b50019065ffffffff000082549160101b169065ffffffff00001916179055606060206103628385610602565b51015101516001610372836105d2565b50019069ffffffff00000000000082549160301b169069ffffffff0000000000001916179055608060206103a68385610602565b510151015160026103b6836105d2565b50015560a060206103c78385610602565b510151015160036103d7836105d2565b50015560c060206103e88385610602565b510151015160046103f8836105d2565b50015560e060206104098385610602565b51015101516005610419836105d2565b500155610440610100602061042e8486610602565b5101510151151560066102d0846105d2565b5f1981146104505760010161026a565b634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b60405161227390816106178239f35b610257565b8382036101408112610577576040805191908201906001600160401b03821183831017610464576101209160405286518352601f19011261057757604051916101208301916001600160401b0383118484101761046457610140936020936040526104f88489016105b4565b8152610506604089016105b4565b84820152610516606089016105c1565b6040820152610527608089016105c1565b606082015260a0880151608082015260c088015160a082015260e088015160c082015261010088015160e082015261056261012089016105b4565b61010082015283820152815201930192610164565b5f80fd5b6040519190601f01601f191682016001600160401b0381118382101761046457604052565b51906001600160a01b038216820361057757565b5190811515820361057757565b519063ffffffff8216820361057757565b6015548110156105ee5760155f52600760205f20910201905f90565b634e487b7160e01b5f52603260045260245ffd5b80518210156105ee5760209160051b01019056fe6080806040526004361015610012575f80fd5b5f3560e01c90816302484895146112f6575080630b3af7f9146111e85780630dc96015146111855780630f792235146111465780630fb5a6b414611129578063200d2ed214611104578063348edff714610d9b578063351d9f9614610d72578063633dfc7014610b595780636922582b14610af457806383d948b714610ad25780638da5cb5b14610aa6578063972b8e3014610a7e578063af640d0f14610a61578063b377a8541461091b578063b80777ea146108fe578063ccbac9f5146108e1578063d6bfea28146108a8578063e75235b81461088d578063ef2d87001461047b5763fd50aa4414610103575f80fd5b34610477575f366003190112610477575f610120604051610123816113c1565b82815260606020820152606060408201528260608201528260808201528260a08201528260c08201528260e0820152826101008201520152600254610166611514565b60045460ff6005541660ff600754169260095460018060a01b03600a54169260405196610192886113c1565b8752601554956101a187611491565b966101af60405198896113dd565b80885260155f908152907f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47560208a015b82841061039e5750505050602088019687526040880193845260608801958652608088019161020d81611357565b825260a08801901515815260c088019160ff84161515835260e089019360018060a01b039060081c1684526101008901943086526101208a019687526040519860208a526101608a019a5160208b0152519961014060408b01528a5180915260206101808b019b01905f5b818110610315575050505196601f19898b030160608a015260208089519b8c81520198015f9a5b808c106102f9575050889950516080890152516102bb81611357565b60a088015251151560c087015251151560e0860152516001600160a01b03908116610100860152905181166101208501529051166101408301520390f35b9098602061030a6001928c51611315565b9a019b019a9061029f565b90919b60206101406001928f8361010091518051845201518051151585840152848101511515604084015263ffffffff604082015116606084015263ffffffff6060820151166080840152608081015160a084015260a081015160c084015260c081015160e084015260e08101518284015201511515610120820152019d019101919091610278565b60405190604082018281106001600160401b038211176104635760405282548252604051906101208201908282106001600160401b038311176104635760019360079360209360405263ffffffff8688015460ff81161515835260ff8160081c16151586840152818160101c16604084015260301c16606082015260028701546080820152600387015460a0820152600487015460c0820152600587015460e082015260ff6006880154161515610100820152838201528152019201930192906101df565b634e487b7160e01b5f52604160045260245ffd5b5f80fd5b34610477575f3660031901126104775760015461049781611491565b906104a560405192836113dd565b8082526104b4601f1991611491565b015f5b81811061085057825f5b815181101561078b576104d3816114bc565b5060405181545f926104e482611716565b91600181169081156107745750600114610740575b50505f8083529181900360200190205460405163129e754360e21b8152916001600160a01b03919091169082600481845afa918215610674575f92610724575b50604051635600f04f60e01b81525f81600481855afa908115610674575f91610702575b506040516310c83e5360e01b8152602081600481865afa908115610674575f916106d1575b506040516351ff484760e01b8152905f82600481875afa918215610674575f9261067f575b5060405163238ac93360e01b815292602084600481885afa938415610674575f94610639575b50604051956105db876113a6565b86526020860152604085015260608401526001600160a01b0316608083015260a08201526106098284611500565b526106148183611500565b505f198114610625576001016104c1565b634e487b7160e01b5f52601160045260245ffd5b9093506020813d821161066c575b81610654602093836113dd565b8101031261047757610665906114a8565b92886105cd565b3d9150610647565b6040513d5f823e3d90fd5b9091503d805f833e61069181836113dd565b810190602081830312610477578051906001600160401b03821161047757019080601f830112156104775781516106ca9260200161174e565b90876105a7565b90506020813d82116106fa575b816106eb602093836113dd565b81010312610477575186610582565b3d91506106de565b61071e91503d805f833e61071681836113dd565b810190611784565b8561055d565b6107399192503d805f833e61071681836113dd565b9084610539565b909192505f5260205f205f905b82821061076057505081019084806104f9565b80548285015260209091019060010161074d565b60ff191684525050801515028101915084806104f9565b506040518091602082016020835281518091526040830190602060408260051b8601019301915f905b8282106107c357505050500390f35b919360019193955060208091603f1989820301855287519060a06108226108066107f6855160c0865260c086019061146d565b868601518582038887015261146d565b604085015160408501526060850151848203606086015261146d565b928680831b036080820151166080840152818780821b039101511691015296019201920185949391926107b4565b60209060405161085f816113a6565b606081526060838201525f60408201526060808201525f60808201525f60a0820152828286010152016104b7565b34610477575f36600319011261047757602060405160438152f35b3461047757602036600319011261047757600e546001600160a01b031633036108d357600435600855005b621607ef60ea1b5f5260045ffd5b34610477575f366003190112610477576020600854604051908152f35b34610477575f366003190112610477576020600654604051908152f35b3461047757602036600319011261047757610934611375565b600d546001600160a01b031633141580610a4c575b80610a37575b80610a22575b80610a0d575b6108d357600954906001600160a01b03600883901c81169116036109fe5760ff81166109f057600a546001600160a01b03166109e15760ff191660011760095560045442810190811061062557600455600160ff1960055416176005556002547fcf33babc496bb6dc2942b39cb7b75766bbbadf7da50d176ff8c513e9911402395f80a2005b633bf57ac960e21b5f5260045ffd5b62ae4cbb60e51b5f5260045ffd5b635fc483c560e01b5f5260045ffd5b50600a546001600160a01b031633141561095b565b506011546001600160a01b0316331415610955565b506012546001600160a01b031633141561094f565b50600e546001600160a01b0316331415610949565b34610477575f366003190112610477576020600254604051908152f35b34610477575f36600319011261047757600a546040516001600160a01b039091168152602090f35b34610477575f3660031901126104775760095460405160089190911c6001600160a01b03168152602090f35b34610477575f36600319011261047757602060ff600954166040519015158152f35b3461047757602036600319011261047757610b0d611375565b600a54906001600160a01b038216610b4a576001600160a01b03199091166001600160a01b039190911617600a556005805460ff19166002179055005b6319e6d19f60e01b5f5260045ffd5b3461047757604036600319011261047757610b72611348565b6024356001600160a01b0381169081900361047757600d546001600160a01b031633141580610d5d575b80610d48575b80610d33575b80610d1e575b6108d357600a546001600160a01b03166109e15760ff6009541615610d0f576004544211610d0057805f52600c602052600260405f20015460025403610c98575b60407f5aaa9aad7433112662b9e5ae23b96ed62b00035f413ab908c55607284e0804e2916002546002835191610c248361138b565b83835295151560208084018281524287860190815260608601998a525f878152600c84528890209551865492516001600160a81b03199093166001600160a01b03919091161791151560a01b60ff60a01b1691909117855551600185015596519190920155600254835192835294820152a2005b600b54600160401b811015610463577f5aaa9aad7433112662b9e5ae23b96ed62b00035f413ab908c55607284e0804e291610cdb82600160409401600b556114e8565b81546001600160a01b0360039290921b91821b19169083901b1790559150610bef9050565b63335b65a560e11b5f5260045ffd5b633fd0090160e11b5f5260045ffd5b50600a546001600160a01b0316331415610bae565b506011546001600160a01b0316331415610ba8565b506012546001600160a01b0316331415610ba2565b50600e546001600160a01b0316331415610b9c565b34610477575f36600319011261047757602060ff6003541660405190610d9781611357565b8152f35b346104775760a036600319011261047757610db4611375565b6024356001600160401b03811161047757610dd390369060040161144f565b6044356001600160401b03811161047757610df290369060040161144f565b916084356001600160401b038111610477573660238201121561047757610e23903690602481600401359101611419565b9160018060a01b03600d5416331415806110ef575b806110da575b806110c5575b806110aa575b80611095575b6108d35760ff60055416610e6381611357565b611086576040519284519360208601948086835e5f9082019081528190036020019020546001600160a01b03166104775760405192610a8392838501918583106001600160401b0384111761046357610ee6610f0a94610efc9288976117bb89393086526001600160a01b0316602086015260c06040860181905285019061146d565b606435606085015283810360808501528861146d565b9160a081840391015261146d565b03905ff091821561067457600154600160401b81101561046357806001610f3492016001556114bc565b6110735781516001600160401b03811161046357610f528254611716565b601f811161102e575b506020601f8211600114610fca57908060209493925f91610fbf575b508160011b915f199060031b1c19161790555b604051928391518091835e5f9082019081520301902080546001600160a01b0319166001600160a01b03909216919091179055005b905083015187610f77565b601f19821690835f52805f20915f5b8181106110165750918391602096959460019410610ffe575b5050811b019055610f8a565b8501515f1960f88460031b161c191690558780610ff2565b9192602060018192868a015181550194019201610fd9565b825f5260205f20601f830160051c81019160208410611069575b601f0160051c01905b81811061105e5750610f5b565b5f8155600101611051565b9091508190611048565b634e487b7160e01b5f525f60045260245ffd5b6392d496a160e01b5f5260045ffd5b50600a546001600160a01b0316331415610e50565b506009543360089190911c6001600160a01b03161415610e4a565b506011546001600160a01b0316331415610e44565b506012546001600160a01b0316331415610e3e565b50600e546001600160a01b0316331415610e38565b34610477575f36600319011261047757602060ff6005541660405190610d9781611357565b34610477575f366003190112610477576020600454604051908152f35b346104775760203660031901126104775761115f611348565b600e546001600160a01b031633036108d35760ff80196007541691151516176007555f80f35b34610477575f3660031901126104775761119d611514565b6040518091602082016020835281518091526020604084019201905f5b8181106111c8575050500390f35b9193509160206111db6001928651611315565b94019101918493926111ba565b3461047757602036600319011261047757600435600581101561047757600d546001600160a01b0316331415806112e1575b806112cc575b806112b7575b8061129c575b80611287575b6108d35761123f81611357565b60ff196005541660ff8216176005557f2da7b23ca63c1eb969eee5fae4acb98186abecf5358b0354a82a5183ebca6b2a6020600254926040519061128281611357565b8152a2005b50600a546001600160a01b0316331415611232565b506009543360089190911c6001600160a01b0316141561122c565b506011546001600160a01b0316331415611226565b506012546001600160a01b0316331415611220565b50600e546001600160a01b031633141561121a565b34610477575f3660031901126104775760209060ff6007541615158152f35b80516001600160a01b03168252602080820151151590830152604080820151908301526060908101519082015260800190565b60043590811515820361047757565b6005111561136157565b634e487b7160e01b5f52602160045260245ffd5b600435906001600160a01b038216820361047757565b608081019081106001600160401b0382111761046357604052565b60c081019081106001600160401b0382111761046357604052565b61014081019081106001600160401b0382111761046357604052565b90601f801991011681019081106001600160401b0382111761046357604052565b6001600160401b03811161046357601f01601f191660200190565b929192611425826113fe565b9161143360405193846113dd565b829481845281830111610477578281602093845f960137010152565b9080601f830112156104775781602061146a93359101611419565b90565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b6001600160401b0381116104635760051b60200190565b51906001600160a01b038216820361047757565b6001548110156114d45760015f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b600b548110156114d457600b5f5260205f2001905f90565b80518210156114d45760209160051b010190565b600a546060906001600160a01b031680611615575050600b5461153681611491565b9061154460405192836113dd565b808252601f1961155382611491565b015f5b8181106115e65750505f5b81811061156d57505090565b806115796001926114e8565b838060a01b0391549060031b1c165f52600c60205260405f206002604051916115a18361138b565b60ff8154868060a01b038116855260a01c1615156020840152848101546040840152015460608201526115d48286611500565b526115df8185611500565b5001611561565b6020906040516115f58161138b565b5f81525f838201525f60408201525f606082015282828701015201611556565b5f60049160405192838092630dc9601560e01b82525afa918215610674575f9261163e57505090565b9091503d805f843e61165081846113dd565b820191602081840312610477578051906001600160401b038211610477570182601f8201121561047757805161168581611491565b9361169360405195866113dd565b81855260208086019260071b8401019281841161047757602001915b8383106116be57505050505090565b60808383031261047757604051906116d58261138b565b6116de846114a8565b8252602084015190811515820361047757826020928360809501526040860151604082015287860151888201528152019201916116af565b90600182811c92168015611744575b602083101461173057565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611725565b92919261175a826113fe565b9161176860405193846113dd565b829481845281830111610477578281602093845f96015e010152565b602081830312610477578051906001600160401b03821161047757019080601f8301121561047757815161146a9260200161174e56fe608080604052346104f557610a83803803809161001c82856104f9565b8339810160c0828203126104f5576100338261051c565b906100406020840161051c565b60408401519093906001600160401b0381116104f557810182601f820112156104f5578281602061007393519101610530565b91606082015191608081015160018060401b0381116104f55782610098918301610575565b60a08201519092906001600160401b0381116104f5576100b89201610575565b8051906001600160401b038211610373576100d35f54610592565b601f81116104a8575b50602090601f83116001146104455761010c92915f9183610387575b50508160011b915f199060031b1c19161790565b5f555b8051906001600160401b0382116103735761012b600154610592565b601f81116103f7575b50602090601f83116001146103925761016392915f91836103875750508160011b915f199060031b1c19161790565b6001555b6002558051926001600160401b03841161037357610186600354610592565b601f811161031a575b50602093601f81116001146102b557806101c29161024795965f916102aa575b508160011b915f199060031b1c19161790565b6003555b600480546001600160a01b039283166001600160a01b0319918216811790925560058054969093169516949094179055426006556002546040517f19457468657265756d205369676e6564204d6573736167653a0a33320000000060208201908152603c8083019390935291815261023f605c826104f9565b5190206105e0565b506004819392931015610296571591821592610282575b5050610273576040516103e5908161069e8239f35b638baa579f60e01b5f5260045ffd5b6001600160a01b0316141590505f8061025e565b634e487b7160e01b5f52602160045260245ffd5b90508401515f6101af565b601f19811660035f52855f20905f5b81811061030257509061024795968360019493106102ea575b5050811b016003556101c6565b8501515f1960f88460031b161c191690555f806102dd565b858801518355602097880197600190930192016102c4565b60035f52610363907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f870160051c81019160208810610369575b601f0160051c01906105ca565b5f61018f565b9091508190610356565b634e487b7160e01b5f52604160045260245ffd5b015190505f806100f8565b90601f1983169160015f52815f20925f5b8181106103df57509084600195949392106103c7575b505050811b01600155610167565b01515f1960f88460031b161c191690555f80806103b9565b929360206001819287860151815501950193016103a3565b60015f5261043f907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6601f850160051c8101916020861061036957601f0160051c01906105ca565b5f610134565b90601f198316915f8052815f20925f5b8181106104905750908460019594939210610478575b505050811b015f5561010f565b01515f1960f88460031b161c191690555f808061046b565b92936020600181928786015181550195019301610455565b5f80526104ef907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f850160051c8101916020861061036957601f0160051c01906105ca565b5f6100dc565b5f80fd5b601f909101601f19168101906001600160401b0382119082101761037357604052565b51906001600160a01b03821682036104f557565b9192916001600160401b0382116103735760405191610559601f8201601f1916602001846104f9565b8294818452818301116104f5578281602093845f96015e010152565b9080601f830112156104f557815161058f92602001610530565b90565b90600182811c921680156105c0575b60208310146105ac57565b634e487b7160e01b5f52602260045260245ffd5b91607f16916105a1565b8181106105d5575050565b5f81556001016105ca565b8151919060418303610610576106099250602082015190606060408401519301515f1a9061061a565b9192909190565b50505f9160029190565b91906fa2a8918ca85bafe22016d0b997e4df60600160ff1b038411610692579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15610687575f516001600160a01b0381161561067d57905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f916003919056fe6080806040526004361015610012575f80fd5b5f3560e01c90816310c83e531461030357508063238ac933146102db5780634a79d50c1461023957806351ff4847146101945780635600f04f146100b2578063b80777ea146100955763ca97372714610069575f80fd5b34610091575f366003190112610091576005546040516001600160a01b039091168152602090f35b5f80fd5b34610091575f366003190112610091576020600654604051908152f35b34610091575f366003190112610091576040515f6001546100d28161031d565b80845290600181169081156101705750600114610112575b61010e836100fa81850382610355565b60405191829160208352602083019061038b565b0390f35b60015f9081527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6939250905b808210610156575090915081016020016100fa6100ea565b91926001816020925483858801015201910190929161013e565b60ff191660208086019190915291151560051b840190910191506100fa90506100ea565b34610091575f366003190112610091576040515f6003546101b48161031d565b808452906001811690811561017057506001146101db5761010e836100fa81850382610355565b60035f9081527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b939250905b80821061021f575090915081016020016100fa6100ea565b919260018160209254838588010152019101909291610207565b34610091575f366003190112610091576040515f5f546102588161031d565b8084529060018116908115610170575060011461027f5761010e836100fa81850382610355565b5f8080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563939250905b8082106102c1575090915081016020016100fa6100ea565b9192600181602092548385880101520191019092916102a9565b34610091575f366003190112610091576004546040516001600160a01b039091168152602090f35b34610091575f366003190112610091576020906002548152f35b90600182811c9216801561034b575b602083101461033757565b634e487b7160e01b5f52602260045260245ffd5b91607f169161032c565b90601f8019910116810190811067ffffffffffffffff82111761037757604052565b634e487b7160e01b5f52604160045260245ffd5b805180835260209291819084018484015e5f828201840152601f01601f191601019056fea2646970667358221220f83b928eaf7f4ed84cd06c0dc031550df0ed31494538233e23c86bcb5b6b213064736f6c634300081c0033a2646970667358221220cf0d658eb8894035302a5f7afb737630ced2d36a87ae77884d32c25d8361300b64736f6c634300081c0033";

type ChangeVotingParametersProposalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChangeVotingParametersProposalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChangeVotingParametersProposal__factory extends ContractFactory {
  constructor(...args: ChangeVotingParametersProposalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    _contractAddresses: MembershipManagement.ContractAddressesStruct,
    _id: BigNumberish,
    _duration: BigNumberish,
    _parameters: MembershipManagement.ChangeVotingParametersRoleStruct[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _owner,
      _contractAddresses,
      _id,
      _duration,
      _parameters,
      overrides || {}
    );
  }
  override deploy(
    _owner: AddressLike,
    _contractAddresses: MembershipManagement.ContractAddressesStruct,
    _id: BigNumberish,
    _duration: BigNumberish,
    _parameters: MembershipManagement.ChangeVotingParametersRoleStruct[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _owner,
      _contractAddresses,
      _id,
      _duration,
      _parameters,
      overrides || {}
    ) as Promise<
      ChangeVotingParametersProposal & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ChangeVotingParametersProposal__factory {
    return super.connect(runner) as ChangeVotingParametersProposal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChangeVotingParametersProposalInterface {
    return new Interface(_abi) as ChangeVotingParametersProposalInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ChangeVotingParametersProposal {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ChangeVotingParametersProposal;
  }
}
