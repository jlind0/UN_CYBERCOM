/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ChangeVotingParametersProposal,
  ChangeVotingParametersProposalInterface,
  MembershipManagement,
} from "../../../contracts/Proposal.sol/ChangeVotingParametersProposal";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "daoAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "votingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "councilManagementAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "proposalStorageAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "membershipRemovalAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "membershipManagerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "votingParametersManagerAddress",
            type: "address",
          },
        ],
        internalType: "struct MembershipManagement.ContractAddresses",
        name: "_contractAddresses",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "council",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "randomizeByGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "randomizeByMember",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "outputCountForGroup",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "outputCountForMember",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "voteDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "voteNumerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumNumerator",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "avgVotes",
                type: "bool",
              },
            ],
            internalType: "struct MembershipManagement.VotingParameters",
            name: "parameters",
            type: "tuple",
          },
        ],
        internalType:
          "struct MembershipManagement.ChangeVotingParametersRole[]",
        name: "_parameters",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AuthorizationError",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingNotStarted",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum MembershipManagement.ApprovalStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "StatusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "vote",
        type: "bool",
      },
    ],
    name: "VoteCasted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "VotingCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "VotingStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "docHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "addDocument",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChangeResponse",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "council",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "randomizeByGroup",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "randomizeByMember",
                    type: "bool",
                  },
                  {
                    internalType: "uint32",
                    name: "outputCountForGroup",
                    type: "uint32",
                  },
                  {
                    internalType: "uint32",
                    name: "outputCountForMember",
                    type: "uint32",
                  },
                  {
                    internalType: "uint256",
                    name: "voteDenominator",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "voteNumerator",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "sumDenominator",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "sumNumerator",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "avgVotes",
                    type: "bool",
                  },
                ],
                internalType: "struct MembershipManagement.VotingParameters",
                name: "parameters",
                type: "tuple",
              },
            ],
            internalType:
              "struct MembershipManagement.ChangeVotingParametersRole[]",
            name: "parameters",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "member",
                type: "address",
              },
              {
                internalType: "bool",
                name: "voteCasted",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "proposalId",
                type: "uint256",
              },
            ],
            internalType: "struct MembershipManagement.Vote[]",
            name: "votes",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "enum MembershipManagement.ApprovalStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isProcessing",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "votingStarted",
            type: "bool",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "proposalAddress",
            type: "address",
          },
        ],
        internalType:
          "struct MembershipManagement.ChangeVotingParametersResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDocuments",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "dochash",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "address",
            name: "docAddress",
            type: "address",
          },
        ],
        internalType: "struct MembershipManagement.Doc[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVotes",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "member",
            type: "address",
          },
          {
            internalType: "bool",
            name: "voteCasted",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
        ],
        internalType: "struct MembershipManagement.Vote[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isProcessing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalType",
    outputs: [
      {
        internalType: "enum MembershipManagement.ProposalTypes",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "processing",
        type: "bool",
      },
    ],
    name: "setProcessing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "random",
        type: "uint256",
      },
    ],
    name: "setRandomNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "startVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum MembershipManagement.ApprovalStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum MembershipManagement.ApprovalStatus",
        name: "_status",
        type: "uint8",
      },
    ],
    name: "updateStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "voteCasted",
        type: "bool",
      },
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votingStarted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526007805460ff1990811690915560098054909116905534801561002657600080fd5b506040516128d83803806128d88339810160408190526100459161070b565b600980546001600160a01b0387811661010002610100600160a81b0319909216919091179091558451600c80549183166001600160a01b03199283161790556020860151600d80549184169183169190911790556040860151600e80549184169183169190911790556060860151600f805491841691831691909117905560808601516010805491841691831691909117905560a08601516011805491841691831691909117905560c08601516012805491909316911617905560028381556003805460ff19168217905585908590859085603c81106101255780610128565b603c5b60045550506005805460ff191690555050426006555060005b81518110156104c357601380546001018155600052815182908290811061016a5761016a610806565b6020026020010151600001516013828154811061018957610189610806565b9060005260206000209060070201600001819055508181815181106101b0576101b0610806565b60200260200101516020015160000151601382815481106101d3576101d3610806565b60009182526020909120600790910201600101805460ff1916911515919091179055815182908290811061020957610209610806565b602002602001015160200151602001516013828154811061022c5761022c610806565b906000526020600020906007020160010160000160016101000a81548160ff02191690831515021790555081818151811061026957610269610806565b602002602001015160200151604001516013828154811061028c5761028c610806565b906000526020600020906007020160010160000160026101000a81548163ffffffff021916908363ffffffff1602179055508181815181106102d0576102d0610806565b60200260200101516020015160600151601382815481106102f3576102f3610806565b906000526020600020906007020160010160000160066101000a81548163ffffffff021916908363ffffffff16021790555081818151811061033757610337610806565b602002602001015160200151608001516013828154811061035a5761035a610806565b90600052602060002090600702016001016001018190555081818151811061038457610384610806565b60200260200101516020015160a00151601382815481106103a7576103a7610806565b9060005260206000209060070201600101600201819055508181815181106103d1576103d1610806565b60200260200101516020015160c00151601382815481106103f4576103f4610806565b90600052602060002090600702016001016003018190555081818151811061041e5761041e610806565b60200260200101516020015160e001516013828154811061044157610441610806565b90600052602060002090600702016001016004018190555081818151811061046b5761046b610806565b60200260200101516020015161010001516013828154811061048f5761048f610806565b60009182526020909120600790910201600601805460ff1916911515919091179055806104bb8161081c565b915050610141565b505050505050610843565b80516001600160a01b03811681146104e557600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715610522576105226104ea565b60405290565b60405161012081016001600160401b0381118282101715610522576105226104ea565b60405160e081016001600160401b0381118282101715610522576105226104ea565b604051601f8201601f191681016001600160401b0381118282101715610595576105956104ea565b604052919050565b805180151581146104e557600080fd5b805163ffffffff811681146104e557600080fd5b600082601f8301126105d257600080fd5b81516001600160401b038111156105eb576105eb6104ea565b6105fa60208260051b0161056d565b808282526020820191506020610140840286010192508583111561061d57600080fd5b602085015b838110156107015780870361014081121561063c57600080fd5b610644610500565b82518152610120601f198301121561065b57600080fd5b610663610528565b91506106716020840161059d565b825261067f6040840161059d565b6020830152610690606084016105ad565b60408301526106a1608084016105ad565b606083015260a083810151608084015260c0808501519184019190915260e08085015191840191909152610100840151908301526106e2610120840161059d565b6101008301526020818101929092528452929092019161014001610622565b5095945050505050565b600080600080600085870361016081121561072557600080fd5b61072e876104ce565b955060e0601f198201121561074257600080fd5b5061074b61054b565b610757602088016104ce565b8152610765604088016104ce565b6020820152610776606088016104ce565b6040820152610787608088016104ce565b606082015261079860a088016104ce565b60808201526107a960c088016104ce565b60a08201526107ba60e088016104ce565b60c082015261010087015161012088015161014089015192965090945092506001600160401b038111156107ed57600080fd5b6107f9888289016105c1565b9150509295509295909350565b634e487b7160e01b600052603260045260246000fd5b60006001820161083c57634e487b7160e01b600052601160045260246000fd5b5060010190565b612086806108526000396000f3fe608060405234801561001057600080fd5b50600436106100f65760003560e01c806383d948b71161009257806383d948b7146101cb5780638da5cb5b146101d8578063af640d0f14610208578063b377a85414610211578063b80777ea14610224578063ccbac9f51461022d578063d6bfea2814610236578063ef2d870014610249578063fd50aa441461025e57600080fd5b806302484895146100fb5780630b3af7f91461011d5780630dc96015146101325780630f792235146101475780630fb5a6b41461015a578063200d2ed214610171578063348edff71461018b578063351d9f961461019e578063633dfc70146101b8575b600080fd5b6007546101089060ff1681565b60405190151581526020015b60405180910390f35b61013061012b366004610f0a565b610273565b005b61013a610361565b6040516101149190610f65565b610130610155366004610fc3565b61048a565b61016360045481565b604051908152602001610114565b60055461017e9060ff1681565b6040516101149190611008565b6101306101993660046110fa565b6104c7565b6003546101ab9060ff1681565b60405161011491906111a8565b6101306101c63660046111c2565b610568565b6009546101089060ff1681565b6009546101f09061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610114565b61016360025481565b61013061021f3660046111f9565b610745565b61016360065481565b61016360085481565b610130610244366004611216565b6108cc565b6102516108fb565b604051610114919061127f565b610266610c2e565b6040516101149190611454565b600c546001600160a01b031633148015906102995750600d546001600160a01b03163314155b80156102b057506011546001600160a01b03163314155b80156102c757506010546001600160a01b03163314155b80156102e3575060095461010090046001600160a01b03163314155b1561030057604051621607ef60ea1b815260040160405180910390fd5b6005805482919060ff1916600183600481111561031f5761031f610fde565b02179055506002547f2da7b23ca63c1eb969eee5fae4acb98186abecf5358b0354a82a5183ebca6b2a826040516103569190611008565b60405180910390a250565b600a546060906000906001600160401b0381111561038157610381611034565b6040519080825280602002602001820160405280156103d357816020015b60408051608081018252600080825260208083018290529282018190526060820152825260001990920191018161039f5790505b50905060005b600a5481101561048457600b6000600a83815481106103fa576103fa611509565b6000918252602080832091909101546001600160a01b039081168452838201949094526040928301909120825160808101845281549485168152600160a01b90940460ff16151591840191909152600181015491830191909152600201546060820152825183908390811061047157610471611509565b60209081029190910101526001016103d9565b50919050565b600d546001600160a01b031633146104b457604051621607ef60ea1b815260040160405180910390fd5b6007805460ff1916911515919091179055565b600c546001600160a01b031633148015906104ed5750600d546001600160a01b03163314155b801561050457506011546001600160a01b03163314155b801561051b57506010546001600160a01b03163314155b8015610537575060095461010090046001600160a01b03163314155b1561055457604051621607ef60ea1b815260040160405180910390fd5b6105618585858585610da0565b5050505050565b600c546001600160a01b0316331480159061058e5750600d546001600160a01b03163314155b80156105a557506011546001600160a01b03163314155b80156105bc57506010546001600160a01b03163314155b156105d957604051621607ef60ea1b815260040160405180910390fd5b60095460ff166105fc57604051633fd0090160e11b815260040160405180910390fd5b60045442111561061f5760405163335b65a560e11b815260040160405180910390fd5b600280546001600160a01b0383166000908152600b60205260409020909101541461069057600a80546001810182556000919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b0319166001600160a01b0383161790555b604080516080810182526001600160a01b0383811680835285151560208085018281524286880190815260028054606089019081526000878152600b86528a90209851895494511515600160a01b026001600160a81b0319909516981697909717929092178755516001870155935194840194909455915484519182529281019190915290917f5aaa9aad7433112662b9e5ae23b96ed62b00035f413ab908c55607284e0804e2910160405180910390a25050565b600c546001600160a01b0316331480159061076b5750600d546001600160a01b03163314155b801561078257506011546001600160a01b03163314155b801561079957506010546001600160a01b03163314155b156107b657604051621607ef60ea1b815260040160405180910390fd5b6009546001600160a01b03828116610100909204161461081d5760405162461bcd60e51b815260206004820152601b60248201527f4f6e6c79206f776e65722063616e20737461727420766f74696e67000000000060448201526064015b60405180910390fd5b60095460ff16156108695760405162461bcd60e51b8152602060048201526016602482015275159bdd1a5b99c8185b1c9958591e481cdd185c9d195960521b6044820152606401610814565b6009805460ff191660011790556004805442919060009061088b908490611535565b90915550506005805460ff191660011790556002546040517fcf33babc496bb6dc2942b39cb7b75766bbbadf7da50d176ff8c513e99114023990600090a250565b600d546001600160a01b031633146108f657604051621607ef60ea1b815260040160405180910390fd5b600855565b6001546060906000906001600160401b0381111561091b5761091b611034565b60405190808252806020026020018201604052801561097d57816020015b6040805160c0810182526060808252602082018190526000928201839052808201526080810182905260a08101919091528152602001906001900390816109395790505b50905060005b815181101561048457600080600183815481106109a2576109a2611509565b906000526020600020016040516109b9919061157c565b908152604080519182900360200182205460c0830180835263129e754360e21b905290516001600160a01b03909116925081908390634a79d50c9060c4808501916000918187030181865afa158015610a16573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a3e9190810190611621565b8152602001826001600160a01b0316635600f04f6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610a81573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610aa99190810190611621565b8152602001826001600160a01b03166310c83e536040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b109190611671565b8152602001826001600160a01b03166351ff48476040518163ffffffff1660e01b8152600401600060405180830381865afa158015610b53573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b7b9190810190611621565b8152602001826001600160a01b031663238ac9336040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be2919061168a565b6001600160a01b03168152602001826001600160a01b0316815250838381518110610c0f57610c0f611509565b60200260200101819052508180610c25906116a7565b92505050610983565b610c36610ea0565b60405180610120016040528060025481526020016013805480602002602001604051908101604052809291908181526020016000905b82821015610d2b576000848152602090819020604080518082018252600786029092018054835281516101208101835260018083015460ff8082161515845261010080830482161515858a015263ffffffff6201000084048116978601979097526601000000000000909204909516606084015260028401546080840152600384015460a0840152600484015460c0840152600584015460e0840152600690930154909316151591810191909152828401529083529092019101610c6c565b505050508152602001610d3c610361565b815260048054602083015260055460409092019160ff1690811115610d6357610d63610fde565b815260075460ff908116151560208301526009549081161515604083015261010090046001600160a01b0316606082015230608090910152919050565b60405183906000908190610db59084906116c0565b908152604051908190036020019020546001600160a01b031614610dd857600080fd5b600030878486888a604051610dec90610efd565b610dfb969594939291906116dc565b604051809103906000f080158015610e17573d6000803e3d6000fd5b506001805480820182556000919091529091507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601610e56868261178d565b5080600083604051610e6891906116c0565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b031990921691909117905550505050505050565b6040518061012001604052806000815260200160608152602001606081526020016000815260200160006004811115610edb57610edb610fde565b8152600060208201819052604082018190526060820181905260809091015290565b6108058061184c83390190565b600060208284031215610f1c57600080fd5b813560058110610f2b57600080fd5b9392505050565b80516001600160a01b03168252602080820151151590830152604080820151908301526060908101519082015260800190565b602080825282518282018190526000918401906040840190835b81811015610fa357610f92838551610f32565b602094909401939250600101610f7f565b509095945050505050565b80358015158114610fbe57600080fd5b919050565b600060208284031215610fd557600080fd5b610f2b82610fae565b634e487b7160e01b600052602160045260246000fd5b6005811061100457611004610fde565b9052565b602081016110168284610ff4565b92915050565b6001600160a01b038116811461103157600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561107257611072611034565b604052919050565b60006001600160401b0382111561109357611093611034565b50601f01601f191660200190565b600082601f8301126110b257600080fd5b81356020830160006110cb6110c68461107a565b61104a565b90508281528583830111156110df57600080fd5b82826020830137600092810160200192909252509392505050565b600080600080600060a0868803121561111257600080fd5b853561111d8161101c565b945060208601356001600160401b0381111561113857600080fd5b611144888289016110a1565b94505060408601356001600160401b0381111561116057600080fd5b61116c888289016110a1565b9350506060860135915060808601356001600160401b0381111561118f57600080fd5b61119b888289016110a1565b9150509295509295909350565b60208101600483106111bc576111bc610fde565b91905290565b600080604083850312156111d557600080fd5b6111de83610fae565b915060208301356111ee8161101c565b809150509250929050565b60006020828403121561120b57600080fd5b8135610f2b8161101c565b60006020828403121561122857600080fd5b5035919050565b60005b8381101561124a578181015183820152602001611232565b50506000910152565b6000815180845261126b81602086016020860161122f565b601f01601f19169290920160200192915050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b8281101561134657603f198786030184528151805160c087526112cd60c0880182611253565b9050602082015187820360208901526112e68282611253565b915050604082015160408801526060820151878203606089015261130a8282611253565b6080848101516001600160a01b03908116918b019190915260a094850151169390980192909252505060209384019391909101906001016112a7565b50929695505050505050565b600081518084526020840193506020830160005b82811015611412578151805187526020810151905080511515602088015260208101511515604088015260408101516113a7606089018263ffffffff169052565b50606081015163ffffffff8116608089015250608081015160a088015260a081015160c088015260c081015160e088015260e081015161010088015261010081015190506113fa61012088018215159052565b50610140959095019460209190910190600101611366565b5093949350505050565b600081518084526020840193506020830160005b8281101561141257611443868351610f32565b955060209190910190600101611430565b602081528151602082015260006020830151610120604084015261147c610140840182611352565b90506040840151601f19848303016060850152611499828261141c565b9150506060840151608084015260808401516114b860a0850182610ff4565b5060a084015180151560c08501525060c084015180151560e08501525060e08401516001600160a01b038116610100850152506101008401516001600160a01b038116610120850152509392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156110165761101661151f565b600181811c9082168061155c57607f821691505b60208210810361048457634e487b7160e01b600052602260045260246000fd5b600080835461158a81611548565b6001821680156115a157600181146115b6576115e6565b60ff19831686528115158202860193506115e6565b86600052602060002060005b838110156115de578154888201526001909101906020016115c2565b505081860193505b509195945050505050565b60006115ff6110c68461107a565b905082815283838301111561161357600080fd5b610f2b83602083018461122f565b60006020828403121561163357600080fd5b81516001600160401b0381111561164957600080fd5b8201601f8101841361165a57600080fd5b611669848251602084016115f1565b949350505050565b60006020828403121561168357600080fd5b5051919050565b60006020828403121561169c57600080fd5b8151610f2b8161101c565b6000600182016116b9576116b961151f565b5060010190565b600082516116d281846020870161122f565b9190910192915050565b6001600160a01b0387811682528616602082015260c06040820181905260009061170890830187611253565b85606084015282810360808401526117208186611253565b905082810360a08401526117348185611253565b9998505050505050505050565b601f82111561178857806000526020600020601f840160051c810160208510156117685750805b601f840160051c820191505b818110156105615760008155600101611774565b505050565b81516001600160401b038111156117a6576117a6611034565b6117ba816117b48454611548565b84611741565b6020601f8211600181146117ee57600083156117d65750848201515b600019600385901b1c1916600184901b178455610561565b600084815260208120601f198516915b8281101561181e57878501518255602094850194600190920191016117fe565b508482101561183c5786840151600019600387901b60f8161c191681555b50505050600190811b0190555056fe608060405234801561001057600080fd5b5060405161080538038061080583398101604081905261002f91610353565b600061003b82826104b0565b50600161004883826104b0565b506002839055600361005a85826104b0565b50600480546001600160a01b038088166001600160a01b0319928316179092556005805492891692909116919091179055426006556002546040516000916100d0916020017f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b60408051601f1981840301815291905280516020909101209050600080806100f8848961015b565b9194509250905060008260038111156101135761011361056e565b14158061012e57506004546001600160a01b03848116911614155b1561014c57604051638baa579f60e01b815260040160405180910390fd5b50505050505050505050610584565b600080600083516041036101955760208401516040850151606086015160001a610187888285856101a8565b9550955095505050506101a1565b50508151600091506002905b9250925092565b600080806fa2a8918ca85bafe22016d0b997e4df60600160ff1b038411156101d95750600091506003905082610263565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa15801561022d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661025957506000925060019150829050610263565b9250600091508190505b9450945094915050565b80516001600160a01b038116811461028457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806001600160401b038411156102b9576102b9610289565b50604051601f19601f85018116603f011681018181106001600160401b03821117156102e7576102e7610289565b6040528381529050808284018510156102ff57600080fd5b60200160005b8481101561031d578381015182820152602001610305565b50600084820152509392505050565b600082601f83011261033d57600080fd5b61034c8383516020850161029f565b9392505050565b60008060008060008060c0878903121561036c57600080fd5b6103758761026d565b95506103836020880161026d565b60408801519095506001600160401b0381111561039f57600080fd5b8701601f810189136103b057600080fd5b6103bf8982516020840161029f565b606089015160808a0151919650945090506001600160401b038111156103e457600080fd5b6103f089828a0161032c565b60a089015190935090506001600160401b0381111561040e57600080fd5b61041a89828a0161032c565b9150509295509295509295565b600181811c9082168061043b57607f821691505b60208210810361045b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104ab57806000526020600020601f840160051c810160208510156104885750805b601f840160051c820191505b818110156104a85760008155600101610494565b50505b505050565b81516001600160401b038111156104c9576104c9610289565b6104dd816104d78454610427565b84610461565b6020601f82116001811461051157600083156104f95750848201515b600019600385901b1c1916600184901b1784556104a8565b600084815260208120601f198516915b828110156105415787850151825560209485019460019092019101610521565b508482101561055f5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052602160045260246000fd5b610272806105936000396000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c806310c83e5314610072578063238ac9331461008e5780634a79d50c146100b957806351ff4847146100ce5780635600f04f146100d6578063b80777ea146100de578063ca973727146100e7575b600080fd5b61007b60025481565b6040519081526020015b60405180910390f35b6004546100a1906001600160a01b031681565b6040516001600160a01b039091168152602001610085565b6100c16100fa565b60405161008591906101e8565b6100c1610188565b6100c1610195565b61007b60065481565b6005546100a1906001600160a01b031681565b6000805461010790610202565b80601f016020809104026020016040519081016040528092919081815260200182805461013390610202565b80156101805780601f1061015557610100808354040283529160200191610180565b820191906000526020600020905b81548152906001019060200180831161016357829003601f168201915b505050505081565b6003805461010790610202565b6001805461010790610202565b6000815180845260005b818110156101c8576020818501810151868301820152016101ac565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006101fb60208301846101a2565b9392505050565b600181811c9082168061021657607f821691505b60208210810361023657634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212206fbaa8e1b0a52b8feb4bdf6abb8ca6228c65e1b59e95e4c36b880bf615104f5664736f6c634300081c0033a26469706673582212200c64dd1d196f276a4b15f702331b97343402ad661fa5528cf7cb15435f704a0064736f6c634300081c0033";

type ChangeVotingParametersProposalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChangeVotingParametersProposalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChangeVotingParametersProposal__factory extends ContractFactory {
  constructor(...args: ChangeVotingParametersProposalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    _contractAddresses: MembershipManagement.ContractAddressesStruct,
    _id: BigNumberish,
    _duration: BigNumberish,
    _parameters: MembershipManagement.ChangeVotingParametersRoleStruct[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _owner,
      _contractAddresses,
      _id,
      _duration,
      _parameters,
      overrides || {}
    );
  }
  override deploy(
    _owner: AddressLike,
    _contractAddresses: MembershipManagement.ContractAddressesStruct,
    _id: BigNumberish,
    _duration: BigNumberish,
    _parameters: MembershipManagement.ChangeVotingParametersRoleStruct[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _owner,
      _contractAddresses,
      _id,
      _duration,
      _parameters,
      overrides || {}
    ) as Promise<
      ChangeVotingParametersProposal & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ChangeVotingParametersProposal__factory {
    return super.connect(runner) as ChangeVotingParametersProposal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChangeVotingParametersProposalInterface {
    return new Interface(_abi) as ChangeVotingParametersProposalInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ChangeVotingParametersProposal {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ChangeVotingParametersProposal;
  }
}
