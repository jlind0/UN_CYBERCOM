/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CouncilManager,
  CouncilManagerInterface,
} from "../../contracts/CouncilManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_daoAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CouncilNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "LogicError",
    type: "error",
  },
  {
    inputs: [],
    name: "NationAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "NationDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "BROKER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CENTRAL_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EMERGING_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GENERAL_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDUSTRY_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LESSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POWER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proposalAddress",
        type: "address",
      },
    ],
    name: "acceptNewMember",
    outputs: [
      {
        internalType: "address",
        name: "memberId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "doesCouncilExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "doesCouncilGroupExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "memberId",
        type: "address",
      },
    ],
    name: "doesNationExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllRoles",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getCouncil",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "randomizeByGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "randomizeByMember",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "outputCountForGroup",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "outputCountForMember",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "voteDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "voteNumerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumNumerator",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "avgVotes",
                type: "bool",
              },
            ],
            internalType: "struct MembershipManagement.VotingParameters",
            name: "votingParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "id",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                ],
                internalType: "struct MembershipManagement.Nation[]",
                name: "members",
                type: "tuple[]",
              },
            ],
            internalType: "struct MembershipManagement.CouncilGroup[]",
            name: "groups",
            type: "tuple[]",
          },
        ],
        internalType: "struct MembershipManagement.Council",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getCouncilForGroupId",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "randomizeByGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "randomizeByMember",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "outputCountForGroup",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "outputCountForMember",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "voteDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "voteNumerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumNumerator",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "avgVotes",
                type: "bool",
              },
            ],
            internalType: "struct MembershipManagement.VotingParameters",
            name: "votingParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "id",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                ],
                internalType: "struct MembershipManagement.Nation[]",
                name: "members",
                type: "tuple[]",
              },
            ],
            internalType: "struct MembershipManagement.CouncilGroup[]",
            name: "groups",
            type: "tuple[]",
          },
        ],
        internalType: "struct MembershipManagement.Council",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nationId",
        type: "address",
      },
    ],
    name: "getCouncilForNation",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "randomizeByGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "randomizeByMember",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "outputCountForGroup",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "outputCountForMember",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "voteDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "voteNumerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumNumerator",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "avgVotes",
                type: "bool",
              },
            ],
            internalType: "struct MembershipManagement.VotingParameters",
            name: "votingParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "id",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                ],
                internalType: "struct MembershipManagement.Nation[]",
                name: "members",
                type: "tuple[]",
              },
            ],
            internalType: "struct MembershipManagement.CouncilGroup[]",
            name: "groups",
            type: "tuple[]",
          },
        ],
        internalType: "struct MembershipManagement.Council",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getCouncilRoleForGroup",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "member",
            type: "address",
          },
          {
            internalType: "bool",
            name: "voteCasted",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
        ],
        internalType: "struct MembershipManagement.Vote[]",
        name: "vs",
        type: "tuple[]",
      },
    ],
    name: "getCouncilVotes",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "councilId",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "randomizeByGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "randomizeByMember",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "outputCountForGroup",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "outputCountForMember",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "voteDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "voteNumerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumNumerator",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "avgVotes",
                type: "bool",
              },
            ],
            internalType: "struct MembershipManagement.VotingParameters",
            name: "votingParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "groupId",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "member",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "voteCasted",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "timestamp",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "proposalId",
                    type: "uint256",
                  },
                ],
                internalType: "struct MembershipManagement.Vote[]",
                name: "votes",
                type: "tuple[]",
              },
              {
                internalType: "int256",
                name: "score",
                type: "int256",
              },
            ],
            internalType: "struct MembershipManagement.CouncilGroupVotes[]",
            name: "votes",
            type: "tuple[]",
          },
          {
            internalType: "int256",
            name: "score",
            type: "int256",
          },
        ],
        internalType: "struct MembershipManagement.CouncilVotes[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCouncils",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "randomizeByGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "randomizeByMember",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "outputCountForGroup",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "outputCountForMember",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "voteDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "voteNumerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumNumerator",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "avgVotes",
                type: "bool",
              },
            ],
            internalType: "struct MembershipManagement.VotingParameters",
            name: "votingParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "id",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                ],
                internalType: "struct MembershipManagement.Nation[]",
                name: "members",
                type: "tuple[]",
              },
            ],
            internalType: "struct MembershipManagement.CouncilGroup[]",
            name: "groups",
            type: "tuple[]",
          },
        ],
        internalType: "struct MembershipManagement.Council[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
    ],
    name: "getNation",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "id",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct MembershipManagement.Nation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nationId",
        type: "address",
      },
    ],
    name: "removeNation",
    outputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proposalAddress",
        type: "address",
      },
    ],
    name: "updateVotingParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61016060405234610c4d57604051601f61328638819003918201601f19168301916001600160401b03831184841017610c5157808492602094604052833981010312610c4d57516001600160a01b03811690819003610c4d575f5160206132665f395f51905f526080527fed8815186908135b357c7061ba3c55257b68958e2410b61db8545aeec7a2a95b60a0527ff965ff90568a04fa10fac40602bcbfc47d8be6cfe6e27f85c10e31d8757fe49760c0527f79390b8ce962a43f5951d1ed360f47f4a2c7ad9ccf449c00c6102231fe41bc4d60e0527f85f6017c7f3635f3e21f932bfcec61f314ced22845f0e0e3813bdc644b86d415610100527f065a4c25030bac931a2a8918598ed1bdd12b4bcee1d984f7a29145a5a12aa500610120527ffa7f857eacbee4676fe5725cb4ad51d1057eedfc53fcc9131edf602c759639e86101405260018060a01b031960085416176008555f5160206132665f395f51905f525f52600760205260405f2061018061017a8254610c85565b82610cbd565b600c65213937b5b2b960d11b0190556080515f818152600760205260409020600101556101ab610c65565b5f815261028a602082015f81526007604084015f815260608501945f8652608081016001815260a082015f815260c08301916001835260e08401935f85526101008101955f87526080519a8b5f528860205260405f209961021f60028c0194511515859060ff801983541691151516179055565b5115159161ff0069ffffffff00000000000065ffffffff00008654935160101b16935160301b169360081b1690610100600160501b031916171717905551600387015551600486015551600585015551600684015551151591019060ff801983541691151516179055565b5f5260076020526102a0600860405f2001610d2e565b50506102ad600154610d60565b806001556080515f5260076020526102ca600860405f2001610cf0565b50556080515f52600760205260016102e7600860405f2001610cf0565b50016102f661017a8254610c85565b600e665072696d61727960c81b018091556103226080516001545f5260056020528060405f2055610d82565b60a0515f52600760205260405f2061033a8154610c85565b601f8111610c23575b50600a642837bbb2b960d91b01905560a0515f8181526007602052604090206001015561036e610c65565b5f81526103e660208201600181526007604084015f8152606085019460018652608081016001815260a082016006815260c08301916001835260e0840193600185526101008101955f875260a0519a8b5f528860205260405f209961021f60028c0194511515859060ff801983541691151516179055565b5f5260076020526103fc600860405f2001610d2e565b5050610409600154610d60565b8060015560a0515f526007602052610426600860405f2001610cf0565b505560a0515f526007602052806001610444600860405f2001610cf0565b500161045361017a8254610c85565b5561046f60a0516001545f5260056020528060405f2055610d82565b60c0515f52600760205260405f2061048a61017a8254610c85565b600e6610d95b9d1c985b60ca1b01905560c0515f818152600760205260409020600101556104b6610c65565b5f815261052d602082015f81526007604084015f8152606085019460018652608081016003815260a082016001815260c08301916001835260e0840193600285526101008101955f875260c0519a8b5f528860205260405f209961021f60028c0194511515859060ff801983541691151516179055565b5f526007602052610543600860405f2001610d2e565b505060c0515f526007602052806001610561600860405f2001610cf0565b500161057061017a8254610c85565b556105b561057f600154610d60565b8060015560c0515f5260076020528061059d600860405f2001610cf0565b505560c051905f5260056020528060405f2055610d82565b60e0515f52600760205260405f206105d061017a8254610c85565b7f456d657267696e67000000000000000000000000000000000000000000000010905560e0515f8181526007602052604090206001015561060f610c65565b60018152610687602082015f81526007604084016001815260608501945f8652608081016005815260a082016003815260c08301916001835260e0840193600485526101008101955f875260e0519a8b5f528860205260405f209961021f60028c0194511515859060ff801983541691151516179055565b5f52600760205261069d600860405f2001610d2e565b50506106aa600154610d60565b8060015560e0515f5260076020526106c7600860405f2001610cf0565b505560e0515f52600760205260016106e4600860405f2001610cf0565b50016106f361017a8254610c85565b600e6647726f7570204160c81b01905560e0516001545f5260056020528060405f20555f52600760205261072c600860405f2001610d2e565b5050610739600154610d60565b8060015560e0515f526007602052610756600860405f2001610d16565b505560e0515f5260076020526001610773600860405f2001610d16565b500161078261017a8254610c85565b600e6623b937bab8102160c91b0190556107ad60e0516001545f5260056020528060405f2055610d82565b610100515f52600760205260405f206107c961017a8254610c85565b600e6611d95b995c985b60ca1b019055610100515f818152600760205260409020600101556107f6610c65565b5f815261086e602082015f81526007604084015f815260608501945f8652608081016001815260a082016001815260c08301916001835260e08401936002855261010081019560018752610100519a8b5f528860205260405f209961021f60028c0194511515859060ff801983541691151516179055565b5f526007602052610884600860405f2001610d2e565b5050610100515f5260076020528060016108a3600860405f2001610cf0565b50016108b261017a8254610c85565b556108f96108c1600154610d60565b80600155610100515f526007602052806108e0600860405f2001610cf0565b505561010051905f5260056020528060405f2055610d82565b610120515f52600760205260405f2061091561017a8254610c85565b600c652632b9b9b2b960d11b019055610120515f81815260076020526040902060010155610941610c65565b5f81526109b9602082015f81526007604084015f8152606085019460018652608081016003815260a082016001815260c08301916001835260e0840193600585526101008101955f8752610120519a8b5f528860205260405f209961021f60028c0194511515859060ff801983541691151516179055565b5f5260076020526109cf600860405f2001610d2e565b5050610120515f5260076020528060016109ee600860405f2001610cf0565b50016109fd61017a8254610c85565b55610a44610a0c600154610d60565b80600155610120515f52600760205280610a2b600860405f2001610cf0565b505561012051905f5260056020528060405f2055610d82565b610140515f52600760205260405f20610a6061017a8254610c85565b7f496e6475737472790000000000000000000000000000000000000000000000109055610140515f81815260076020526040902060010155610aa0610c65565b5f8152610b17602082015f81526007604084015f81526060850194600186526080810183815260a082016001815260c08301916001835260e0840193600185526101008101955f8752610140519a8b5f528860205260405f209961021f60028c0194511515859060ff801983541691151516179055565b5f526007602052610b2d600860405f2001610d2e565b5050610140515f5260076020526001610b4b600860405f2001610cf0565b5001610b5a61017a8254610c85565b55610ba1610b69600154610d60565b80600155610140515f52600760205280610b88600860405f2001610cf0565b505561014051905f5260056020528060405f2055610d82565b6040516124979081610dcf82396080518181816119d501526123b8015260a0518181816101fc0152612343015260c051818181610125015261236a015260e051818181610d730152612391015261010051818181610ffb015261231c01526101205181818161079001526123df015261014051818181610dda01526124060152f35b815f52601f60205f20910160051c8101905b818110610c425750610343565b5f8155600101610c35565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6040519061012082016001600160401b03811183821017610c5157604052565b90600182811c92168015610cb3575b6020831014610c9f57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610c94565b601f8211610cc9575050565b5f52601f60205f20910160051c8101905b818110610ce5575050565b5f8155600101610cda565b805415610d02575f5260205f20905f90565b634e487b7160e01b5f52603260045260245ffd5b805460011015610d02575f52600360205f2001905f90565b80549068010000000000000000821015610c515760018201808255821015610d02575f52600360205f20910201905f90565b5f198114610d6e5760010190565b634e487b7160e01b5f52601160045260245ffd5b60065468010000000000000000811015610c51576001810180600655811015610d025760065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f015556fe6080806040526004361015610012575f80fd5b5f3560e01c908163029793ec146119c0575080630ed40bd0146116e55780630f2d64d1146116b65780633773cfe1146112b35780634a7e372d1461101e57806359bd7a7414610fe45780635e80575714610fac5780635e986ccd14610dfd5780636d3491ec14610dc3578063802751ba14610d96578063aca2c41f14610d5c578063b0b224d714610ba1578063c4bdfb1f14610817578063c8881997146107b3578063cf61552a14610779578063d3d1ff301461074f578063d5a2a5dd14610732578063e7ad2ed41461025a578063ed1f1b901461021f578063ee67c353146101e5578063f2bcac3d1461014c5763f4f10da91461010e575f80fd5b34610148575f3660031901126101485760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b5f80fd5b34610148575f366003190112610148576040518060206006549283815201809260065f5260205f20905f5b8181106101cf575050508161018d910382611c38565b604051918291602083019060208452518091526040830191905f5b8181106101b6575050500390f35b82518452859450602093840193909201916001016101a8565b8254845260209093019260019283019201610177565b34610148575f3660031901126101485760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b34610148576020366003190112610148576004355f52600560205260405f20545f5260076020526020600860405f2001541515604051908152f35b34610148576020366003190112610148576004356001600160401b038111610148573660238201121561014857806004013561029581611c59565b916102a36040519384611c38565b8183526024602084019260071b8201019036821161014857602401915b8183106106cf576040515f856101006102d98185611c38565b60078452601f19015f5b8181106106985750505b805182101561053f576103008282611e79565b518051909290610318906001600160a01b0316611fca565b8351909190610330906001600160a01b031683612259565b906020830194610340865161231a565b61034a8189611e79565b5196518752604085015160208801526040870197885151156104d0575b60605f9601955b89515181101561042a57610383818851611e79565b5151885161039081611c59565b9061039e6040519283611c38565b8082526103ad601f1991611c59565b015f5b8181106103fb575050826103f693926103f092604051916103d083611c1d565b825260208201525f60408201528d51906103ea8383611e79565b52611e79565b50611c9d565b61036e565b60209060405161040a81611c02565b5f81525f838201525f60408201525f6060820152828286010152016103b0565b5092959093969194505f5b885180518210156104c1578161044a91611e79565b51518851146104615761045c90611c9d565b610435565b9096509694939291965b85515181116104b257846103f094602061048c61049a946104ac9a51611e79565b510151906103ea8383611e79565b506104a58288611e79565b5285611e79565b906102ed565b634b4c8d2960e11b5f5260045ffd5b5090965096949392919661046b565b6060860151516104df81611c59565b906104ed6040519283611c38565b8082526104fc601f1991611c59565b015f5b81811061050f5750508952610367565b60209060409b999b5161052181611c1d565b5f81526060838201525f6040820152828286010152019997996104ff565b826040518091602082016020835281518091526040830190602060408260051b8601019301915f905b82821061057757505050500390f35b919390929450603f19868203018252845190610180810191805182526105a560208201516020840190611a32565b60408101519261018061014084015283518091526101a0830160206101a08360051b8601019501915f5b8181106105fc57505050506001926020926101606060859401519101529601920192018594939192610568565b9091929561019f198682030184528651906060810191805182526020810151926060602084015283518091526020608084019401905f905b80821061065957505050604090810151910152956020908101930191906001016105cf565b9091946020608060019260608951858060a01b038151168352848101511515858401526040810151604084015201516060820152019601920190610634565b6020906040516106a781611c02565b5f81526106b2611e8d565b83820152606060408201525f6060820152828288010152016102e3565b60808336031261014857604051906106e682611c02565b83356001600160a01b03811681036101485782526020840135908115158203610148578260209283608095015260408601356040820152606086013560608201528152019201916102c0565b34610148575f366003190112610148576020600254604051908152f35b34610148576020366003190112610148576004355f526005602052602060405f2054604051908152f35b34610148575f3660031901126101485760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b34610148576020366003190112610148576107cc6119f8565b606060206040516107dc81611bcb565b5f8152015260018060a01b03165f5260036020526108136107ff60405f20611f99565b604051918291602083526020830190611a9a565b0390f35b34610148576020366003190112610148576108306119f8565b6008546001600160a01b03163303610b935761084b81612165565b15610b84576001600160a01b03165f81815260046020908152604080832054835260079091528120918190600884015b8054831015610b765761088e8382611c84565b50600201905f5b82548681831015610b6b5750846108ac8386611e42565b50546001600160a01b0316146108cb57506108c690611c9d565b610895565b9091939495505f198101908111610a0857808203610b17575b5050805480156109a3575f1901906108fc8282611e42565b610b0457805f60019255016109118154611cab565b9081610ac1575b5050555f5b60025480821015610a1c578361093283611e2a565b905460039190911b1c6001600160a01b031614610959575b5061095490611c9d565b61091d565b5f198101908111610a08578082036109b7575b506002549081156109a357610954915f190161098781611e2a565b81549060018060a01b039060031b1b191690556002559061094a565b634e487b7160e01b5f52603160045260245ffd5b6109c3610a0291611e2a565b905460039190911b1c6001600160a01b03166109de83611e2a565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b8561096c565b634e487b7160e01b5f52601160045260245ffd5b505090805f526003602052600160405f205f815501610a3b8154611cab565b9081610a7e575b5050805f5260046020525f6040812055600192835b610a6a57610a6490611c9d565b9161087b565b5050505060016020915b0154604051908152f35b81601f5f9311600114610a955750555b8480610a42565b81835260208320610ab191601f0160051c810190600101611ce3565b8082528160208120915555610a8e565b81601f5f9311600114610ad85750555b8680610918565b81835260208320610af491601f0160051c810190600101611ce3565b8082528160208120915555610ad1565b634e487b7160e01b5f525f60045260245ffd5b610b24610b2c9184611e42565b509183611e42565b610b04578082146108e457815481546001600160a01b0319166001600160a01b0391909116178155610b649160019081019101612185565b85806108e4565b929593505050610a57565b505050506001602091610a74565b638979ca3b60e01b5f5260045ffd5b6282b42960e81b5f5260045ffd5b3461014857602036600319011261014857610bba611ed0565b506004355f52600560205260405f20545f52600760205260405f20600860405191610be483611c02565b610bed81611efb565b835260018101546020840152604051610c0581611be6565b63ffffffff600283015460ff81161515835260ff81861c1615156020840152818160101c16604084015260301c16606082015260038201546080820152600482015460a0820152600582015460c0820152600682015460e082015260ff6007830154161515610100820152604084015201908154610c8281611c59565b90610c906040519283611c38565b80825260208201935f5260205f20935f905b828210610cc75761081385856060820152604051918291602083526020830190611ac2565b604051610cd381611c1d565b86548152610ce360018801611efb565b6020820152600287018054610cf781611c59565b91610d056040519384611c38565b81835260208301905f5260205f20905f905b838210610d3e57505050506001928260209260406003950152815201960191019094610ca2565b60026020600192610d4e86611f99565b815201930191019091610d17565b34610148575f3660031901126101485760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b34610148576020366003190112610148576020610db9610db46119f8565b612165565b6040519015158152f35b34610148575f3660031901126101485760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461014857602036600319011261014857610e16611ed0565b506004355f52600760205260405f20600860405191610e3483611c02565b610e3d81611efb565b835260018101546020840152604051610e5581611be6565b63ffffffff600283015460ff81161515835260ff81861c1615156020840152818160101c16604084015260301c16606082015260038201546080820152600482015460a0820152600582015460c0820152600682015460e082015260ff6007830154161515610100820152604084015201908154610ed281611c59565b90610ee06040519283611c38565b80825260208201935f5260205f20935f905b828210610f175761081385856060820152604051918291602083526020830190611ac2565b604051610f2381611c1d565b86548152610f3360018801611efb565b6020820152600287018054610f4781611c59565b91610f556040519384611c38565b81835260208301905f5260205f20905f905b838210610f8e57505050506001928260209260406003950152815201960191019094610ef2565b60026020600192610f9e86611f99565b815201930191019091610f67565b3461014857602036600319011261014857610813610fd0610fcb6119f8565b611fca565b604051918291602083526020830190611ac2565b34610148575f3660031901126101485760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b34610148575f366003190112610148576006545f61103b82611c59565b916110496040519384611c38565b808352601f1961105882611c59565b015f5b81811061129c5750506006545b8183106110d657836040518091602082016020835281518091526040830190602060408260051b8601019301915f905b8282106110a757505050500390f35b919360019193955060206110c68192603f198a82030186528851611ac2565b9601920192018594939192611098565b808310156112885760065f528260205f2001545f52600760205260405f209260086040519461110486611c02565b61110d81611efb565b86526001810154602087015260405161112581611be6565b63ffffffff600283015460ff81161515835260ff81861c1615156020840152818160101c16604084015260301c16606082015260038201546080820152600482015460a0820152600582015460c0820152600682015460e082015260ff60078301541615156101008201526040870152019384546111a281611c59565b906111b06040519283611c38565b80825260208201965f5260205f20965f905b8282106111f4575050506111ed9394955060608201526111e28287611e79565b526103f08186611e79565b9190611068565b60405161120081611c1d565b8954815261121060018b01611efb565b602082015260028a01805461122481611c59565b916112326040519384611c38565b81835260208301905f5260205f205f915b83831061126a575050505060019282602092604060039501528152019901910190976111c2565b6002602060019261127a85611f99565b815201920192019190611243565b634e487b7160e01b5f52603260045260245ffd5b6020906112a7611ed0565b8282880101520161105b565b34610148576020366003190112610148576112cc6119f8565b6008546001600160a01b03163303610b9357604051633f542a9160e21b8152905f90829060049082906001600160a01b03165afa9081156116ab575f91611410575b505f5b6020820151805182101561140e578161132991611e79565b5180515f52600760205260405f20916008830154156104b257602092600460a08561140795015161010081015115156113756002860191600787019060ff801983541691151516179055565b6040820151815465ffffffff000069ffffffff000000000000606086015160301b169260101b169069ffffffffffffffff00001916171781556113c782511515829060ff801983541691151516179055565b81880151815461ff00191690151560081b61ff001617905560c0810151600585015560e08101516006850155608081015160038501550151910155611c9d565b9050611311565b005b90503d805f833e6114218183611c38565b810190602081830312610148578051906001600160401b038211610148570161012081830312610148576040519161145883611be6565b8151835260208201516001600160401b03811161014857820181601f8201121561014857805161148781611c59565b916114956040519384611c38565b818352602061014081850193028201019084821161014857602001915b8183106115e557505050602084015260408201516001600160401b03811161014857820181601f82011215610148578051906114ed82611c59565b926114fb6040519485611c38565b82845260208085019360071b8301019181831161014857602001925b828410611591575050505060408301526060810151606083015260808101516005811015610148576115859161010091608085015261155860a08201611e5b565b60a085015261156960c08201611e5b565b60c085015261157a60e08201611c70565b60e085015201611c70565b6101008201528161130e565b6080848303126101485760206080916040516115ac81611c02565b6115b587611c70565b81526115c2838801611e5b565b838201526040870151604082015260608701516060820152815201930192611517565b8285036101408112610148576101206040519161160183611bcb565b85518352601f190112610148576101409160209160405161162181611be6565b61162c848801611e5b565b815261163a60408801611e5b565b8482015261164a60608801611e68565b604082015261165b60808801611e68565b606082015260a0870151608082015260c087015160a082015260e087015160c082015261010087015160e08201526116966101208801611e5b565b610100820152838201528152019201916114b2565b6040513d5f823e3d90fd5b34610148576020366003190112610148576004355f5260076020526020600860405f2001541515604051908152f35b34610148576020366003190112610148576116fe6119f8565b6008546001600160a01b03163303610b935760405163b46a357f60e01b8152906001600160a01b03165f82600481845afa9182156116ab575f926118f9575b508151611752906001600160a01b0316612165565b6118ea5760206004916040519283809263507a264960e11b82525afa9081156116ab575f916118b8575b50805f52600560205260405f20545f52600760205260405f205f600882018054935b84831061188d575b506117b2929350611c84565b50906117be5f54611c9d565b5f5560018060a01b038351165f5260036020526117de8360405f20611d3e565b8251600254916001600160a01b0390911690600160401b831015611879576118126001926109de8585600297018755611e2a565b01805484516001600160a01b03165f9081526004602052604090205591018054600160401b8110156118795761184d91600182018155611e42565b929092610b045761186081604094611d3e565b51905482516001600160a01b0390921682526020820152f35b634e487b7160e01b5f52604160045260245ffd5b90918161189a8285611c84565b5054146118b1576118aa90611c9d565b919061179e565b91906117a6565b90506020813d6020116118e2575b816118d360209383611c38565b8101031261014857518261177c565b3d91506118c6565b632607e5b560e21b5f5260045ffd5b9091503d805f833e61190b8183611c38565b810190602081830312610148578051906001600160401b038211610148570190604082820312610148576040519161194283611bcb565b61194b81611c70565b83526020810151906001600160401b038211610148570181601f82011215610148578051906001600160401b0382116118795760405192611996601f8401601f191660200185611c38565b8284526020838301011161014857815f9260208093018386015e830101526020820152908261173d565b34610148575f366003190112610148576020907f00000000000000000000000000000000000000000000000000000000000000008152f35b600435906001600160a01b038216820361014857565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b610100809180511515845260208101511515602085015263ffffffff604082015116604085015263ffffffff60608201511660608501526080810151608085015260a081015160a085015260c081015160c085015260e081015160e085015201511515910152565b9060406020611abf9360018060a01b0381511684520151918160208201520190611a0e565b90565b6060611ad982516101808552610180850190611a0e565b9160208101516020850152611af660408201516040860190611a32565b015191610160818303910152815180825260208201916020808360051b8301019401925f915b838310611b2b57505050505090565b9091929394601f198282030183528551805182526040611b5a6020830151606060208601526060850190611a0e565b910151916040818303910152815180825260208201906020808260051b8501019401925f5b828110611ba057505050505060208060019297019301930191939290611b1c565b9091929394602080611bbe600193601f198782030189528951611a9a565b9701950193929101611b7f565b604081019081106001600160401b0382111761187957604052565b61012081019081106001600160401b0382111761187957604052565b608081019081106001600160401b0382111761187957604052565b606081019081106001600160401b0382111761187957604052565b90601f801991011681019081106001600160401b0382111761187957604052565b6001600160401b0381116118795760051b60200190565b51906001600160a01b038216820361014857565b8054821015611288575f52600360205f20910201905f90565b5f198114610a085760010190565b90600182811c92168015611cd9575b6020831014611cc557565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611cba565b818110611cee575050565b5f8155600101611ce3565b9190601f8111611d0857505050565b611d32925f5260205f20906020601f840160051c83019310611d34575b601f0160051c0190611ce3565b565b9091508190611d25565b815181546001600160a01b0319166001600160a01b0391909116178155602091909101518051909291600101906001600160401b03811161187957611d8d81611d878454611cab565b84611cf9565b6020601f8211600114611dcc578190611dbd9394955f92611dc1575b50508160011b915f199060031b1c19161790565b9055565b015190505f80611da9565b601f19821690835f52805f20915f5b818110611e1257509583600195969710611dfa575b505050811b019055565b01515f1960f88460031b161c191690555f8080611df0565b9192602060018192868b015181550194019201611ddb565b6002548110156112885760025f5260205f2001905f90565b8054821015611288575f5260205f209060011b01905f90565b5190811515820361014857565b519063ffffffff8216820361014857565b80518210156112885760209160051b010190565b60405190611e9a82611be6565b5f610100838281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201520152565b60405190611edd82611c02565b606080838181525f6020820152611ef2611e8d565b60408201520152565b9060405191825f825492611f0e84611cab565b8084529360018116908115611f775750600114611f33575b50611d3292500383611c38565b90505f9291925260205f20905f915b818310611f5b575050906020611d32928201015f611f26565b6020919350806001915483858901015201910190918492611f42565b905060209250611d3294915060ff191682840152151560051b8201015f611f26565b90604051611fa681611bcb565b82546001600160a01b03168152918290602090611fc590600101611efb565b910152565b611fd2611ed0565b5060018060a01b03165f52600460205260405f20545f52600760205260405f2060086040519161200183611c02565b61200a81611efb565b83526001810154602084015260405161202281611be6565b63ffffffff600283015460ff81161515835260ff81861c1615156020840152818160101c16604084015260301c16606082015260038201546080820152600482015460a0820152600582015460c0820152600682015460e082015260ff6007830154161515610100820152604084015201805461209e81611c59565b916120ac6040519384611c38565b81835260208301905f5260205f205f915b8383106120d05750505050606082015290565b6040516120dc81611c1d565b825481526120ec60018401611efb565b602082015260028301805461210081611c59565b9161210e6040519384611c38565b81835260208301905f5260205f20905f905b838210612147575050505060019282602092604060039501528152019201920191906120bd565b6002602060019261215786611f99565b815201930191019091612120565b6001600160a01b039081165f818152600360205260409020549091161490565b919091828114612254576121998354611cab565b6001600160401b038111611879576121b581611d878454611cab565b5f93601f82116001146121ef57611dbd92939482915f926121e45750508160011b915f199060031b1c19161790565b015490505f80611da9565b601f198216905f5260205f2094835f5260205f20915f5b81811061223c5750958360019596971061222457505050811b019055565b01545f1960f88460031b161c191690555f8080611df0565b9192600180602092868b015481550194019201612206565b509050565b60405161226581611c1d565b5f81526060602082015260606040820152505f905b606081019081515183101561230b575f5b6040612298858551611e79565b510151518110156122f45760018060a01b036122c38260406122bb888851611e79565b510151611e79565b5151166001600160a01b038616146122e3576122de90611c9d565b61228b565b50506122f0925051611e79565b5190565b50916060915061230390611c9d565b91905061227a565b63057f71d760e21b5f5260045ffd5b7f0000000000000000000000000000000000000000000000000000000000000000811461245c577f00000000000000000000000000000000000000000000000000000000000000008114612456577f00000000000000000000000000000000000000000000000000000000000000008114612450577f0000000000000000000000000000000000000000000000000000000000000000811461244a577f00000000000000000000000000000000000000000000000000000000000000008114612444577f0000000000000000000000000000000000000000000000000000000000000000811461243e577f0000000000000000000000000000000000000000000000000000000000000000146124395763057f71d760e21b5f5260045ffd5b600690565b50600590565b50600490565b50600390565b50600290565b50600190565b505f9056fea2646970667358221220349662d839005d6ec00964376aad657fdfbc75ba21ff0c96f20b1959cb888e2d64736f6c634300081c00337fcce6a499b6d8a3672e3669f525a458fa2543baa244623617dd2ae829df407d";

type CouncilManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CouncilManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CouncilManager__factory extends ContractFactory {
  constructor(...args: CouncilManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _daoAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_daoAddress, overrides || {});
  }
  override deploy(
    _daoAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_daoAddress, overrides || {}) as Promise<
      CouncilManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CouncilManager__factory {
    return super.connect(runner) as CouncilManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CouncilManagerInterface {
    return new Interface(_abi) as CouncilManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CouncilManager {
    return new Contract(address, _abi, runner) as unknown as CouncilManager;
  }
}
