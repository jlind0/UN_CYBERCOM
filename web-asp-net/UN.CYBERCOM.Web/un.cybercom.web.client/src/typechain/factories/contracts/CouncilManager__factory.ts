/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CouncilManager,
  CouncilManagerInterface,
} from "../../contracts/CouncilManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_daoAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CouncilNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "LogicError",
    type: "error",
  },
  {
    inputs: [],
    name: "NationAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "NationDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "BROKER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CENTRAL_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EMERGING_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GENERAL_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDUSTRY_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LESSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POWER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proposalAddress",
        type: "address",
      },
    ],
    name: "acceptNewMember",
    outputs: [
      {
        internalType: "address",
        name: "memberId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "doesCouncilExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "doesCouncilGroupExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "memberId",
        type: "address",
      },
    ],
    name: "doesNationExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllRoles",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getCouncil",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "randomizeByGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "randomizeByMember",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "outputCountForGroup",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "outputCountForMember",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "voteDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "voteNumerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumNumerator",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "avgVotes",
                type: "bool",
              },
            ],
            internalType: "struct MembershipManagement.VotingParameters",
            name: "votingParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "id",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                ],
                internalType: "struct MembershipManagement.Nation[]",
                name: "members",
                type: "tuple[]",
              },
            ],
            internalType: "struct MembershipManagement.CouncilGroup[]",
            name: "groups",
            type: "tuple[]",
          },
        ],
        internalType: "struct MembershipManagement.Council",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getCouncilForGroupId",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "randomizeByGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "randomizeByMember",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "outputCountForGroup",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "outputCountForMember",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "voteDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "voteNumerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumNumerator",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "avgVotes",
                type: "bool",
              },
            ],
            internalType: "struct MembershipManagement.VotingParameters",
            name: "votingParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "id",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                ],
                internalType: "struct MembershipManagement.Nation[]",
                name: "members",
                type: "tuple[]",
              },
            ],
            internalType: "struct MembershipManagement.CouncilGroup[]",
            name: "groups",
            type: "tuple[]",
          },
        ],
        internalType: "struct MembershipManagement.Council",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nationId",
        type: "address",
      },
    ],
    name: "getCouncilForNation",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "randomizeByGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "randomizeByMember",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "outputCountForGroup",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "outputCountForMember",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "voteDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "voteNumerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumNumerator",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "avgVotes",
                type: "bool",
              },
            ],
            internalType: "struct MembershipManagement.VotingParameters",
            name: "votingParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "id",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                ],
                internalType: "struct MembershipManagement.Nation[]",
                name: "members",
                type: "tuple[]",
              },
            ],
            internalType: "struct MembershipManagement.CouncilGroup[]",
            name: "groups",
            type: "tuple[]",
          },
        ],
        internalType: "struct MembershipManagement.Council",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getCouncilRoleForGroup",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "member",
            type: "address",
          },
          {
            internalType: "bool",
            name: "voteCasted",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
        ],
        internalType: "struct MembershipManagement.Vote[]",
        name: "vs",
        type: "tuple[]",
      },
    ],
    name: "getCouncilVotes",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "councilId",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "randomizeByGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "randomizeByMember",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "outputCountForGroup",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "outputCountForMember",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "voteDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "voteNumerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumNumerator",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "avgVotes",
                type: "bool",
              },
            ],
            internalType: "struct MembershipManagement.VotingParameters",
            name: "votingParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "groupId",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "member",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "voteCasted",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "timestamp",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "proposalId",
                    type: "uint256",
                  },
                ],
                internalType: "struct MembershipManagement.Vote[]",
                name: "votes",
                type: "tuple[]",
              },
              {
                internalType: "int256",
                name: "score",
                type: "int256",
              },
            ],
            internalType: "struct MembershipManagement.CouncilGroupVotes[]",
            name: "votes",
            type: "tuple[]",
          },
          {
            internalType: "int256",
            name: "score",
            type: "int256",
          },
        ],
        internalType: "struct MembershipManagement.CouncilVotes[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCouncils",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "randomizeByGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "randomizeByMember",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "outputCountForGroup",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "outputCountForMember",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "voteDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "voteNumerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumNumerator",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "avgVotes",
                type: "bool",
              },
            ],
            internalType: "struct MembershipManagement.VotingParameters",
            name: "votingParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "id",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                ],
                internalType: "struct MembershipManagement.Nation[]",
                name: "members",
                type: "tuple[]",
              },
            ],
            internalType: "struct MembershipManagement.CouncilGroup[]",
            name: "groups",
            type: "tuple[]",
          },
        ],
        internalType: "struct MembershipManagement.Council[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
    ],
    name: "getNation",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "id",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct MembershipManagement.Nation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nationId",
        type: "address",
      },
    ],
    name: "removeNation",
    outputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proposalAddress",
        type: "address",
      },
    ],
    name: "updateVotingParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040527f7fcce6a499b6d8a3672e3669f525a458fa2543baa244623617dd2ae829df407d6080527fed8815186908135b357c7061ba3c55257b68958e2410b61db8545aeec7a2a95b60a0527ff965ff90568a04fa10fac40602bcbfc47d8be6cfe6e27f85c10e31d8757fe49760c0527f79390b8ce962a43f5951d1ed360f47f4a2c7ad9ccf449c00c6102231fe41bc4d60e0527f85f6017c7f3635f3e21f932bfcec61f314ced22845f0e0e3813bdc644b86d415610100527f065a4c25030bac931a2a8918598ed1bdd12b4bcee1d984f7a29145a5a12aa500610120527ffa7f857eacbee4676fe5725cb4ad51d1057eedfc53fcc9131edf602c759639e86101405234801561010f575f5ffd5b506040516143d93803806143d983398101604081905261012e91611300565b600880546001600160a01b0319166001600160a01b0383161790556040805180820182526006815265213937b5b2b960d11b6020808301919091526080515f9081526007909152919091209061018490826113c5565b50608080515f81815260076020818152604080842060019081019590955580516101208101825284815280830185815281830186815260608301878152838a0189815260a0850189815260c086018b815260e087018b81526101008089018d81529e518d52998b9052978b20965160028801805497519651955161ffff1990981691151561ff001916919091179515159099029490941762010000600160501b0319166201000063ffffffff9485160263ffffffff60301b19161766010000000000009390951692909202939093179095559051600383015592516004820155915160058301555160068201559351908401805460ff19169115159190911790556008909201805482018155825280549091906102a09061147f565b91829055506080515f90815260076020526040812060080180549091906102c9576102c96114a3565b5f91825260208083206003909202909101929092556040805180820182526007808252665072696d61727960c81b82860152608051845290935281206008018054909190610319576103196114a3565b905f5260205f209060030201600101908161033491906113c5565b50608051600180545f9081526005602081815260408084208690556006805495860190555f5160206143b95f395f51905f529094019490945582518084018452908152642837bbb2b960d91b8185015260a05182526007909352209061039a90826113c5565b5060a080515f81815260076020818152604080842060019081019590955580516101208101825284815280830186815281830186815260608301888152608084018981526006858c0181815260c087018c815260e088018d8152610100808a018e81529f518e529a8c9052988c20975160028901805498519751965161ffff1990991691151561ff00191691909117961515909a029590951762010000600160501b0319166201000063ffffffff9586160263ffffffff60301b19161766010000000000009490961693909302949094179096559451600384015593516004830155925160058201559051918101919091559351908401805460ff19169115159190911790556008909201805482018155825280549091906104bb9061147f565b918290555060a0515f90815260076020526040812060080180549091906104e4576104e46114a3565b5f91825260208083206003909202909101929092556040805180820182526007808252665072696d61727960c81b8286015260a051845290935281206008018054909190610534576105346114a3565b905f5260205f209060030201600101908161054f91906113c5565b5060a051600180545f9081526005602090815260408083208590556006805494850190555f5160206143b95f395f51905f52909301939093558151808301835260078082526610d95b9d1c985b60ca1b8286015260c051835290935220906105b790826113c5565b5060c05160075f60c05181526020019081526020015f20600101819055506040518061012001604052805f151581526020015f151581526020015f63ffffffff168152602001600163ffffffff168152602001600381526020016001815260200160018152602001600281526020015f151581525060075f60c05181526020019081526020015f206002015f820151815f015f6101000a81548160ff0219169083151502179055506020820151815f0160016101000a81548160ff0219169083151502179055506040820151815f0160026101000a81548163ffffffff021916908363ffffffff1602179055506060820151815f0160066101000a81548163ffffffff021916908363ffffffff1602179055506080820151816001015560a0820151816002015560c0820151816003015560e08201518160040155610100820151816005015f6101000a81548160ff02191690831515021790555090505060075f60c05181526020019081526020015f2060080160018160018154018082558091505003905f5260205f20905050604051806040016040528060078152602001665072696d61727960c81b81525060075f60c05181526020019081526020015f206008015f8154811061078c5761078c6114a3565b905f5260205f20906003020160010190816107a791906113c5565b5060015f81546107b69061147f565b918290555060c0515f90815260076020526040812060080180549091906107df576107df6114a3565b5f918252602080832060039092029091019290925560c0516001805483526005845260408084208390556006805492830190555f5160206143b95f395f51905f5290910191909155805180820182526008815267456d657267696e6760c01b8185015260e0518352600790935290209061085990826113c5565b5060e05160075f60e05181526020019081526020015f20600101819055506040518061012001604052806001151581526020015f15158152602001600163ffffffff1681526020015f63ffffffff168152602001600581526020016003815260200160018152602001600481526020015f151581525060075f60e05181526020019081526020015f206002015f820151815f015f6101000a81548160ff0219169083151502179055506020820151815f0160016101000a81548160ff0219169083151502179055506040820151815f0160026101000a81548163ffffffff021916908363ffffffff1602179055506060820151815f0160066101000a81548163ffffffff021916908363ffffffff1602179055506080820151816001015560a0820151816002015560c0820151816003015560e08201518160040155610100820151816005015f6101000a81548160ff02191690831515021790555090505060075f60e05181526020019081526020015f2060080160018160018154018082558091505003905f5260205f2090505060015f81546109f69061147f565b918290555060e0515f9081526007602052604081206008018054909190610a1f57610a1f6114a3565b5f918252602080832060039092029091019290925560408051808201825260078082526647726f7570204160c81b8286015260e051845290935281206008018054909190610a6f57610a6f6114a3565b905f5260205f2090600302016001019081610a8a91906113c5565b5060e051600180545f9081526005602090815260408083208590559382526007905291822060080180548201815582528054909190610ac89061147f565b918290555060e0515f90815260076020526040902060080180546001908110610af357610af36114a3565b5f918252602080832060039092029091019290925560408051808201825260078082526623b937bab8102160c91b8286015260e0518452909352902060080180546001908110610b4557610b456114a3565b905f5260205f2090600302016001019081610b6091906113c5565b5060e051600180545f9081526005602090815260408083208590556006805494850190555f5160206143b95f395f51905f52909301939093558151808301835260078082526611d95b995c985b60ca1b828601526101005183529093522090610bc990826113c5565b506101005160075f6101005181526020019081526020015f20600101819055506040518061012001604052805f151581526020015f151581526020015f63ffffffff1681526020015f63ffffffff168152602001600181526020016001815260200160018152602001600281526020016001151581525060075f6101005181526020019081526020015f206002015f820151815f015f6101000a81548160ff0219169083151502179055506020820151815f0160016101000a81548160ff0219169083151502179055506040820151815f0160026101000a81548163ffffffff021916908363ffffffff1602179055506060820151815f0160066101000a81548163ffffffff021916908363ffffffff1602179055506080820151816001015560a0820151816002015560c0820151816003015560e08201518160040155610100820151816005015f6101000a81548160ff02191690831515021790555090505060075f6101005181526020019081526020015f2060080160018160018154018082558091505003905f5260205f20905050604051806040016040528060078152602001665072696d61727960c81b81525060075f6101005181526020019081526020015f206008015f81548110610da357610da36114a3565b905f5260205f2090600302016001019081610dbe91906113c5565b5060015f8154610dcd9061147f565b9182905550610100515f9081526007602052604081206008018054909190610df757610df76114a3565b5f9182526020808320600390920290910192909255610100516001805483526005845260408084208390556006805492830181555f5160206143b95f395f51905f529092019290925581518083018352908152652632b9b9b2b960d11b818501526101205183526007909352902090610e7090826113c5565b506101205160075f6101205181526020019081526020015f20600101819055506040518061012001604052805f151581526020015f151581526020015f63ffffffff168152602001600163ffffffff168152602001600381526020016001815260200160018152602001600581526020015f151581525060075f6101205181526020019081526020015f206002015f820151815f015f6101000a81548160ff0219169083151502179055506020820151815f0160016101000a81548160ff0219169083151502179055506040820151815f0160026101000a81548163ffffffff021916908363ffffffff1602179055506060820151815f0160066101000a81548163ffffffff021916908363ffffffff1602179055506080820151816001015560a0820151816002015560c0820151816003015560e08201518160040155610100820151816005015f6101000a81548160ff02191690831515021790555090505060075f6101205181526020019081526020015f2060080160018160018154018082558091505003905f5260205f20905050604051806040016040528060078152602001665072696d61727960c81b81525060075f6101205181526020019081526020015f206008015f8154811061104a5761104a6114a3565b905f5260205f209060030201600101908161106591906113c5565b5060015f81546110749061147f565b9182905550610120515f908152600760205260408120600801805490919061109e5761109e6114a3565b5f9182526020808320600390920290910192909255610120516001805483526005845260408084208390556006805492830190555f5160206143b95f395f51905f5290910191909155805180820182526008815267496e64757374727960c01b81850152610140518352600790935290209061111a90826113c5565b5061014080515f818152600760208181526040808420600190810195909555805161012081018252848152808301858152818301868152606083018881526080840187815260a085018a815260c086018b815260e087018c81526101008089018d81528f518e528c8c528a8e20995160028b0180549a519951985161ffff19909b1691151561ff001916919091179815159092029790971762010000600160501b0319166201000063ffffffff9788160263ffffffff60301b1916176601000000000000969098169590950296909617909355905160038601555160048501555160058401559051600683015551818501805460ff19169115159190911790556008908101805490960190955580518082018252838152665072696d61727960c81b81840152955184529190528120909101805490919061125d5761125d6114a3565b905f5260205f209060030201600101908161127891906113c5565b5060015f81546112879061147f565b9182905550610140515f90815260076020526040812060080180549091906112b1576112b16114a3565b5f9182526020808320600390920290910192909255610140516001805483526005909352604082208190556006805493840181559091525f5160206143b95f395f51905f5290910155506114b7565b5f60208284031215611310575f5ffd5b81516001600160a01b0381168114611326575f5ffd5b9392505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061135557607f821691505b60208210810361137357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156113c057805f5260205f20601f840160051c8101602085101561139e5750805b601f840160051c820191505b818110156113bd575f81556001016113aa565b50505b505050565b81516001600160401b038111156113de576113de61132d565b6113f2816113ec8454611341565b84611379565b6020601f821160018114611424575f831561140d5750848201515b5f19600385901b1c1916600184901b1784556113bd565b5f84815260208120601f198516915b828110156114535787850151825560209485019460019092019101611433565b508482101561147057868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f6001820161149c57634e487b7160e01b5f52601160045260245ffd5b5060010190565b634e487b7160e01b5f52603260045260245ffd5b60805160a05160c05160e051610100516101205161014051612e806115395f395f818161026a015261209701525f8181610311015261206801525f81816102100152611f7e01525f81816102a4015261200a01525f81816103ec0152611fdb01525f81816103b00152611fac01525f818161014601526120390152612e805ff3fe608060405234801561000f575f5ffd5b506004361061013d575f3560e01c8063b0b224d7116100b4578063d5a2a5dd11610079578063d5a2a5dd14610352578063e7ad2ed41461035a578063ed1f1b901461037a578063ee67c353146103ab578063f2bcac3d146103d2578063f4f10da9146103e7575f5ffd5b8063b0b224d7146102c6578063c4bdfb1f146102d9578063c8881997146102ec578063cf61552a1461030c578063d3d1ff3014610333575f5ffd5b806359bd7a741161010557806359bd7a741461020b5780635e805757146102325780635e986ccd146102525780636d3491ec14610265578063802751ba1461028c578063aca2c41f1461029f575f5ffd5b8063029793ec146101415780630ed40bd01461017b5780630f2d64d1146101ad5780633773cfe1146101e15780634a7e372d146101f6575b5f5ffd5b6101687f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b61018e6101893660046121ce565b61040e565b604080516001600160a01b039093168352602083019190915201610172565b6101d16101bb3660046121e9565b5f90815260076020526040902060080154151590565b6040519015158152602001610172565b6101f46101ef3660046121ce565b6106db565b005b6101fe6108a3565b60405161017291906123f8565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b6102456102403660046121ce565b610c94565b604051610172919061245b565b6102456102603660046121e9565b610fed565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b6101d161029a3660046121ce565b61132f565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b6102456102d43660046121e9565b61134f565b6101686102e73660046121ce565b611690565b6102ff6102fa3660046121ce565b611a13565b604051610172919061246d565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b6101686103413660046121e9565b5f9081526005602052604090205490565b600254610168565b61036d61036836600461255f565b611aec565b6040516101729190612643565b6101d16103883660046121e9565b5f9081526005602090815260408083205483526007909152902060080154151590565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b6103da611e0c565b604051610172919061279c565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b6008545f9081906001600160a01b0316331461043c576040516282b42960e81b815260040160405180910390fd5b5f8390505f816001600160a01b031663b46a357f6040518163ffffffff1660e01b81526004015f60405180830381865afa15801561047c573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526104a391908101906127e9565b90506104b1815f015161132f565b156104cf57604051632607e5b560e21b815260040160405180910390fd5b5f826001600160a01b031663a0f44c926040518163ffffffff1660e01b8152600401602060405180830381865afa15801561050c573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061053091906128bf565b5f818152600560209081526040808320548352600790915281209192505b60088201548110156105975782826008018281548110610570576105706128d6565b905f5260205f2090600302015f01540315610597578061058f816128fe565b91505061054e565b5f8260080182815481106105ad576105ad6128d6565b5f918252602082208254600390920201925090806105ca836128fe565b909155505084516001600160a01b039081165f908152600360209081526040909120875181546001600160a01b0319169316929092178255860151869190600182019061061790826129ad565b5050855160028054600181810183555f8381527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90920180546001600160a01b039586166001600160a01b031991821617909155888201548b518616845260046020908152604085209190915587850180548085018255908552938190208c5194909502909401805493909516921691909117835590880151889350908201906106c190826129ad565b505094516001909301549297509195505050505050915091565b6008546001600160a01b03163314610705576040516282b42960e81b815260040160405180910390fd5b5f8190505f816001600160a01b031663fd50aa446040518163ffffffff1660e01b81526004015f60405180830381865afa158015610745573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261076c9190810190612c63565b90505f5b81602001515181101561089d575f82602001518281518110610794576107946128d6565b60209081029190910181015180515f908152600790925260408220600881015491935091036107d657604051634b4c8d2960e11b815260040160405180910390fd5b6020828101516101008082015160078501805460ff19169115159190911790556040820151600285018054606085015185519686015169ffffffffffffffff0000199092166201000063ffffffff9586160269ffffffff000000000000191617600160301b94909116939093029290921761ffff191694151561ff001916949094179015159091021790915560c0810151600583015560e081015160068301556080810151600383015560a00151600482015582610893816128fe565b9350505050610770565b50505050565b6006546060905f9081906001600160401b038111156108c4576108c461247f565b6040519080825280602002602001820160405280156108fd57816020015b6108ea6120c4565b8152602001906001900390816108e25790505b5090505b600654821015610c8e5760075f60068481548110610921576109216128d6565b905f5260205f20015481526020019081526020015f206040518060800160405290815f8201805461095190612916565b80601f016020809104026020016040519081016040528092919081815260200182805461097d90612916565b80156109c85780601f1061099f576101008083540402835291602001916109c8565b820191905f5260205f20905b8154815290600101906020018083116109ab57829003601f168201915b505050918352505060018201546020808301919091526040805161012081018252600285015460ff80821615158352610100808304821615158487015263ffffffff620100008404811685870152600160301b90930490921660608085019190915260038801546080850152600488015460a0850152600588015460c0850152600688015460e0850152600788015490911615159183019190915282850191909152600885018054835181860281018601909452808452919094019391925f9084015b82821015610c56578382905f5260205f2090600302016040518060600160405290815f8201548152602001600182018054610ac590612916565b80601f0160208091040260200160405190810160405280929190818152602001828054610af190612916565b8015610b3c5780601f10610b1357610100808354040283529160200191610b3c565b820191905f5260205f20905b815481529060010190602001808311610b1f57829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020015f905b82821015610c3f575f848152602090819020604080518082019091526002850290910180546001600160a01b031682526001810180549293919291840191610bb090612916565b80601f0160208091040260200160405190810160405280929190818152602001828054610bdc90612916565b8015610c275780601f10610bfe57610100808354040283529160200191610c27565b820191905f5260205f20905b815481529060010190602001808311610c0a57829003601f168201915b50505050508152505081526020019060010190610b69565b505050508152505081526020019060010190610a8b565b5050505081525050818381518110610c7057610c706128d6565b60200260200101819052508180610c86906128fe565b925050610901565b92915050565b610c9c6120c4565b6001600160a01b0382165f9081526004602090815260408083205483526007909152808220815160808101909252805482908290610cd990612916565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0590612916565b8015610d505780601f10610d2757610100808354040283529160200191610d50565b820191905f5260205f20905b815481529060010190602001808311610d3357829003601f168201915b505050918352505060018201546020808301919091526040805161012081018252600285015460ff80821615158352610100808304821615158487015263ffffffff620100008404811685870152600160301b90930490921660608085019190915260038801546080850152600488015460a0850152600588015460c0850152600688015460e0850152600788015490911615159183019190915282850191909152600885018054835181860281018601909452808452919094019391925f9084015b82821015610fde578382905f5260205f2090600302016040518060600160405290815f8201548152602001600182018054610e4d90612916565b80601f0160208091040260200160405190810160405280929190818152602001828054610e7990612916565b8015610ec45780601f10610e9b57610100808354040283529160200191610ec4565b820191905f5260205f20905b815481529060010190602001808311610ea757829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020015f905b82821015610fc7575f848152602090819020604080518082019091526002850290910180546001600160a01b031682526001810180549293919291840191610f3890612916565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6490612916565b8015610faf5780601f10610f8657610100808354040283529160200191610faf565b820191905f5260205f20905b815481529060010190602001808311610f9257829003601f168201915b50505050508152505081526020019060010190610ef1565b505050508152505081526020019060010190610e13565b50505091525090949350505050565b610ff56120c4565b5f828152600760205260409081902081516080810190925280548290829061101c90612916565b80601f016020809104026020016040519081016040528092919081815260200182805461104890612916565b80156110935780601f1061106a57610100808354040283529160200191611093565b820191905f5260205f20905b81548152906001019060200180831161107657829003601f168201915b505050918352505060018201546020808301919091526040805161012081018252600285015460ff80821615158352610100808304821615158487015263ffffffff620100008404811685870152600160301b90930490921660608085019190915260038801546080850152600488015460a0850152600588015460c0850152600688015460e0850152600788015490911615159183019190915282850191909152600885018054835181860281018601909452808452919094019391925f9084015b82821015611321578382905f5260205f2090600302016040518060600160405290815f820154815260200160018201805461119090612916565b80601f01602080910402602001604051908101604052809291908181526020018280546111bc90612916565b80156112075780601f106111de57610100808354040283529160200191611207565b820191905f5260205f20905b8154815290600101906020018083116111ea57829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020015f905b8282101561130a575f848152602090819020604080518082019091526002850290910180546001600160a01b03168252600181018054929391929184019161127b90612916565b80601f01602080910402602001604051908101604052809291908181526020018280546112a790612916565b80156112f25780601f106112c9576101008083540402835291602001916112f2565b820191905f5260205f20905b8154815290600101906020018083116112d557829003601f168201915b50505050508152505081526020019060010190611234565b505050508152505081526020019060010190611156565b505050915250909392505050565b6001600160a01b039081165f818152600360205260409020549091161490565b6113576120c4565b5f82815260056020908152604080832054835260079091529081902081516080810190925280548290829061138b90612916565b80601f01602080910402602001604051908101604052809291908181526020018280546113b790612916565b80156114025780601f106113d957610100808354040283529160200191611402565b820191905f5260205f20905b8154815290600101906020018083116113e557829003601f168201915b505050918352505060018201546020808301919091526040805161012081018252600285015460ff80821615158352610100808304821615158487015263ffffffff620100008404811685870152600160301b90930490921660608085019190915260038801546080850152600488015460a0850152600588015460c0850152600688015460e0850152600788015490911615159183019190915282850191909152600885018054835181860281018601909452808452919094019391925f9084015b82821015611321578382905f5260205f2090600302016040518060600160405290815f82015481526020016001820180546114ff90612916565b80601f016020809104026020016040519081016040528092919081815260200182805461152b90612916565b80156115765780601f1061154d57610100808354040283529160200191611576565b820191905f5260205f20905b81548152906001019060200180831161155957829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020015f905b82821015611679575f848152602090819020604080518082019091526002850290910180546001600160a01b0316825260018101805492939192918401916115ea90612916565b80601f016020809104026020016040519081016040528092919081815260200182805461161690612916565b80156116615780601f1061163857610100808354040283529160200191611661565b820191905f5260205f20905b81548152906001019060200180831161164457829003601f168201915b505050505081525050815260200190600101906115a3565b5050505081525050815260200190600101906114c5565b6008545f906001600160a01b031633146116bc576040516282b42960e81b815260040160405180910390fd5b6116c58261132f565b6116e257604051638979ca3b60e01b815260040160405180910390fd5b6001600160a01b0382165f9081526004602090815260408083205483526007909152812090805b6008830154821015611a05575f83600801838154811061172b5761172b6128d6565b5f9182526020822060039091020191505b60028201548110156119e457866001600160a01b0316826002018281548110611767576117676128d6565b5f9182526020909120600290910201546001600160a01b0316036119d257600282015461179690600190612d63565b8114611823576002820180546117ae90600190612d63565b815481106117be576117be6128d6565b905f5260205f2090600202018260020182815481106117df576117df6128d6565b5f9182526020909120825460029092020180546001600160a01b0319166001600160a01b0390921691909117815560018082019061181f90840182612d76565b5050505b8160020180548061183657611836612e36565b5f8281526020812060025f199093019283020180546001600160a01b03191681559061186560018301826120f1565b505090555f5b60025481101561197b57876001600160a01b031660028281548110611892576118926128d6565b5f918252602090912001546001600160a01b031603611969576002546118ba90600190612d63565b811461193757600280546118d090600190612d63565b815481106118e0576118e06128d6565b5f91825260209091200154600280546001600160a01b03909216918390811061190b5761190b6128d6565b905f5260205f20015f6101000a8154816001600160a01b0302191690836001600160a01b031602179055505b600280548061194857611948612e36565b5f8281526020902081015f1990810180546001600160a01b03191690550190555b80611973816128fe565b91505061186b565b6001600160a01b0388165f90815260036020526040812080546001600160a01b0319168155906119ae60018301826120f1565b5050506001600160a01b0387165f90815260046020526040812055600192506119e4565b806119dc816128fe565b91505061173c565b82156119f1575050611a05565b836119fb816128fe565b9450505050611709565b50506001015490505b919050565b6040805180820182525f80825260606020808401919091526001600160a01b038581168352600382529184902084518086019095528054909216845260018201805493949391840191611a6590612916565b80601f0160208091040260200160405190810160405280929190818152602001828054611a9190612916565b8015611adc5780601f10611ab357610100808354040283529160200191611adc565b820191905f5260205f20905b815481529060010190602001808311611abf57829003601f168201915b5050505050815250509050919050565b60408051600780825261010082019092526060915f918291816020015b611b1161212b565b815260200190600190039081611b095790505090505b8351821015611e05575f848381518110611b4357611b436128d6565b602002602001015190505f611b5a825f0151610c94565b90505f611b6a82845f0151611e62565b90505f611b7a8360200151611f7b565b90505f858281518110611b8f57611b8f6128d6565b602002602001015190508360200151815f018181525050836040015181602001819052508060400151515f03611c36578360600151516001600160401b03811115611bdc57611bdc61247f565b604051908082528060200260200182016040528015611c2f57816020015b611c1c60405180606001604052805f8152602001606081526020015f81525090565b815260200190600190039081611bfa5790505b5060408201525b5f5b816040015151811015611d1d57604051806060016040528086606001518381518110611c6657611c666128d6565b60200260200101515f015181526020018b516001600160401b03811115611c8f57611c8f61247f565b604051908082528060200260200182016040528015611cdf57816020015b604080516080810182525f8082526020808301829052928201819052606082015282525f19909201910181611cad5790505b5081526020015f81525082604001518281518110611cff57611cff6128d6565b60200260200101819052508080611d15906128fe565b915050611c38565b5f5b826040015151811015611d685784516040840151805183908110611d4557611d456128d6565b60200260200101515f01510315611d685780611d60816128fe565b915050611d1f565b826040015151811115611d8e57604051634b4c8d2960e11b815260040160405180910390fd5b8683604001518281518110611da557611da56128d6565b6020026020010151602001518a81518110611dc257611dc26128d6565b602002602001018190525082888581518110611de057611de06128d6565b60200260200101819052508880611df6906128fe565b99505050505050505050611b27565b9392505050565b60606006805480602002602001604051908101604052809291908181526020018280548015611e5857602002820191905f5260205f20905b815481526020019060010190808311611e44575b5050505050905090565b611e8560405180606001604052805f815260200160608152602001606081525090565b5f5b836060015151811015611f62575f5b84606001518281518110611eac57611eac6128d6565b60200260200101516040015151811015611f4f57836001600160a01b031685606001518381518110611ee057611ee06128d6565b6020026020010151604001518281518110611efd57611efd6128d6565b60200260200101515f01516001600160a01b031603611f3d5784606001518281518110611f2c57611f2c6128d6565b602002602001015192505050610c8e565b80611f47816128fe565b915050611e96565b81611f59816128fe565b92505050611e87565b60405163057f71d760e21b815260040160405180910390fd5b5f7f00000000000000000000000000000000000000000000000000000000000000008203611faa57505f919050565b7f00000000000000000000000000000000000000000000000000000000000000008203611fd957506001919050565b7f0000000000000000000000000000000000000000000000000000000000000000820361200857506002919050565b7f0000000000000000000000000000000000000000000000000000000000000000820361203757506003919050565b7f0000000000000000000000000000000000000000000000000000000000000000820361206657506004919050565b7f0000000000000000000000000000000000000000000000000000000000000000820361209557506005919050565b7f00000000000000000000000000000000000000000000000000000000000000008203611f6257506006919050565b6040518060800160405280606081526020015f81526020016120e4612157565b8152602001606081525090565b5080546120fd90612916565b5f825580601f1061210c575050565b601f0160209004905f5260205f209081019061212891906121a2565b50565b60405180608001604052805f8152602001612144612157565b8152602001606081526020015f81525090565b60408051610120810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915290565b5b808211156121b6575f81556001016121a3565b5090565b6001600160a01b0381168114612128575f5ffd5b5f602082840312156121de575f5ffd5b8135611e05816121ba565b5f602082840312156121f9575f5ffd5b5035919050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b8051151582526020810151151560208301526040810151612257604084018263ffffffff169052565b50606081015161226f606084018263ffffffff169052565b506080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008101516122ad61010084018215159052565b505050565b60018060a01b0381511682525f6020820151604060208501526122d86040850182612200565b949350505050565b5f815161018084526122f6610180850182612200565b9050602083015160208501526040830151612314604086018261222e565b50606083015184820361016086015280518083526020918201918084019190600582901b8501015f5b828110156123ec57601f1986830301845284518051835260208101516060602085015261236d6060850182612200565b905060408201519150838103604085015280825180835260208301915060208160051b8401016020850194505f5b828110156123cc57601f198583030184526123b78287516122b2565b6020968701969490940193915060010161239b565b50809650505050505060208501945060208401935060018101905061233d565b50979650505050505050565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b8281101561244f57603f1987860301845261243a8583516122e0565b9450602093840193919091019060010161241e565b50929695505050505050565b602081525f611e0560208301846122e0565b602081525f611e0560208301846122b2565b634e487b7160e01b5f52604160045260245ffd5b604051608081016001600160401b03811182821017156124b5576124b561247f565b60405290565b604080519081016001600160401b03811182821017156124b5576124b561247f565b60405161012081016001600160401b03811182821017156124b5576124b561247f565b604051601f8201601f191681016001600160401b03811182821017156125285761252861247f565b604052919050565b5f6001600160401b038211156125485761254861247f565b5060051b60200190565b8015158114612128575f5ffd5b5f6020828403121561256f575f5ffd5b81356001600160401b03811115612584575f5ffd5b8201601f81018413612594575f5ffd5b80356125a76125a282612530565b612500565b8082825260208201915060208360071b8501019250868311156125c8575f5ffd5b6020840193505b8284101561263957608084880312156125e6575f5ffd5b6125ee612493565b84356125f9816121ba565b8152602085013561260981612552565b602082810191909152604086810135908301526060808701359083015290835260809094019391909101906125cf565b9695505050505050565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b8281101561244f57603f1987860301845281516101808601815187526020820151612697602089018261222e565b5060408201516101806101408901528181518084526101a08a0191506101a08160051b8b010193506020830192505f5b81811015612773578a850361019f19018352835180518652602080820151606082890181905281519089018190529101905f9060808901905b8083101561274e57835160018060a01b038151168352602081015115156020840152604081015160408401526060810151606084015250608082019150602084019350600183019250612700565b50604093840151989093019790975250945060209384019392909201916001016126c7565b505050506060919091015161016096909601959095526020938401939190910190600101612669565b602080825282518282018190525f918401906040840190835b818110156127d35783518352602093840193909201916001016127b5565b509095945050505050565b8051611a0e816121ba565b5f602082840312156127f9575f5ffd5b81516001600160401b0381111561280e575f5ffd5b82016040818503121561281f575f5ffd5b6128276124bb565b8151612832816121ba565b815260208201516001600160401b0381111561284c575f5ffd5b80830192505084601f830112612860575f5ffd5b81516001600160401b038111156128795761287961247f565b61288c601f8201601f1916602001612500565b8181528660208386010111156128a0575f5ffd5b8160208501602083015e5f602092820183015290820152949350505050565b5f602082840312156128cf575f5ffd5b5051919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f6001820161290f5761290f6128ea565b5060010190565b600181811c9082168061292a57607f821691505b60208210810361294857634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156122ad57805f5260205f20601f840160051c810160208510156129735750805b601f840160051c820191505b81811015612992575f815560010161297f565b5050505050565b5f19600383901b1c191660019190911b1790565b81516001600160401b038111156129c6576129c661247f565b6129da816129d48454612916565b8461294e565b6020601f821160018114612a07575f83156129f55750848201515b6129ff8482612999565b855550612992565b5f84815260208120601f198516915b82811015612a365787850151825560209485019460019092019101612a16565b5084821015612a5357868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b8051611a0e81612552565b805163ffffffff81168114611a0e575f5ffd5b5f82601f830112612a8f575f5ffd5b8151612a9d6125a282612530565b8082825260208201915060206101408402860101925085831115612abf575f5ffd5b602085015b83811015612ba157808703610140811215612add575f5ffd5b612ae56124bb565b82518152610120601f1983011215612afb575f5ffd5b612b036124dd565b9150612b1160208401612a62565b8252612b1f60408401612a62565b6020830152612b3060608401612a6d565b6040830152612b4160808401612a6d565b606083015260a083810151608084015260c0808501519184019190915260e0808501519184019190915261010084015190830152612b826101208401612a62565b6101008301526020818101929092528452929092019161014001612ac4565b5095945050505050565b5f82601f830112612bba575f5ffd5b8151612bc86125a282612530565b8082825260208201915060208360071b860101925085831115612be9575f5ffd5b602085015b83811015612ba15760808188031215612c05575f5ffd5b612c0d612493565b8151612c18816121ba565b81526020820151612c2881612552565b60208281019190915260408381015190830152606080840151908301529084529290920191608001612bee565b805160058110611a0e575f5ffd5b5f60208284031215612c73575f5ffd5b81516001600160401b03811115612c88575f5ffd5b82016101208185031215612c9a575f5ffd5b612ca26124dd565b8151815260208201516001600160401b03811115612cbe575f5ffd5b612cca86828501612a80565b60208301525060408201516001600160401b03811115612ce8575f5ffd5b612cf486828501612bab565b60408301525060608281015190820152612d1060808301612c55565b6080820152612d2160a08301612a62565b60a0820152612d3260c08301612a62565b60c0820152612d4360e083016127de565b60e0820152612d5561010083016127de565b610100820152949350505050565b81810381811115610c8e57610c8e6128ea565b818103612d81575050565b612d8b8254612916565b6001600160401b03811115612da257612da261247f565b612db0816129d48454612916565b5f601f821160018114612dd3575f83156129f55750848201546129ff8482612999565b5f8581526020808220868352908220601f198616925b83811015612e095782860154825560019586019590910190602001612de9565b5085831015612e2657818501545f19600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b5f52603160045260245ffdfea2646970667358221220931943d02aea5b55550f7df3598ecc9d2d470ff5130decbd3bc8dad538b144af64736f6c634300081c0033f652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f";

type CouncilManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CouncilManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CouncilManager__factory extends ContractFactory {
  constructor(...args: CouncilManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _daoAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_daoAddress, overrides || {});
  }
  override deploy(
    _daoAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_daoAddress, overrides || {}) as Promise<
      CouncilManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CouncilManager__factory {
    return super.connect(runner) as CouncilManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CouncilManagerInterface {
    return new Interface(_abi) as CouncilManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CouncilManager {
    return new Contract(address, _abi, runner) as unknown as CouncilManager;
  }
}
