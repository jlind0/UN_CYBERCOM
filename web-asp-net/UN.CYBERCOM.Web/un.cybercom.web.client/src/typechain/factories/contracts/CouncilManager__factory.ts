/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CouncilManager,
  CouncilManagerInterface,
} from "../../contracts/CouncilManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_daoAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CouncilNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "LogicError",
    type: "error",
  },
  {
    inputs: [],
    name: "NationAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "NationDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "BROKER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CENTRAL_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EMERGING_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GENERAL_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDUSTRY_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LESSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POWER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proposalAddress",
        type: "address",
      },
    ],
    name: "acceptNewMember",
    outputs: [
      {
        internalType: "address",
        name: "memberId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "doesCouncilExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "doesCouncilGroupExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "memberId",
        type: "address",
      },
    ],
    name: "doesNationExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllRoles",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getCouncil",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "randomizeByGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "randomizeByMember",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "outputCountForGroup",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "outputCountForMember",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "voteDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "voteNumerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumNumerator",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "avgVotes",
                type: "bool",
              },
            ],
            internalType: "struct MembershipManagement.VotingParameters",
            name: "votingParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "numberOfSeconds",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "requiresMajority",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "onlyWithinOwnGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "disabled",
                type: "bool",
              },
              {
                internalType: "bytes32[]",
                name: "councilsThatCanMotion",
                type: "bytes32[]",
              },
            ],
            internalType: "struct MembershipManagement.MotionRules",
            name: "motionRules",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "id",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                ],
                internalType: "struct MembershipManagement.Nation[]",
                name: "members",
                type: "tuple[]",
              },
            ],
            internalType: "struct MembershipManagement.CouncilGroup[]",
            name: "groups",
            type: "tuple[]",
          },
        ],
        internalType: "struct MembershipManagement.Council",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getCouncilForGroupId",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "randomizeByGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "randomizeByMember",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "outputCountForGroup",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "outputCountForMember",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "voteDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "voteNumerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumNumerator",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "avgVotes",
                type: "bool",
              },
            ],
            internalType: "struct MembershipManagement.VotingParameters",
            name: "votingParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "numberOfSeconds",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "requiresMajority",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "onlyWithinOwnGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "disabled",
                type: "bool",
              },
              {
                internalType: "bytes32[]",
                name: "councilsThatCanMotion",
                type: "bytes32[]",
              },
            ],
            internalType: "struct MembershipManagement.MotionRules",
            name: "motionRules",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "id",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                ],
                internalType: "struct MembershipManagement.Nation[]",
                name: "members",
                type: "tuple[]",
              },
            ],
            internalType: "struct MembershipManagement.CouncilGroup[]",
            name: "groups",
            type: "tuple[]",
          },
        ],
        internalType: "struct MembershipManagement.Council",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nationId",
        type: "address",
      },
    ],
    name: "getCouncilForNation",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "randomizeByGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "randomizeByMember",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "outputCountForGroup",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "outputCountForMember",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "voteDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "voteNumerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumNumerator",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "avgVotes",
                type: "bool",
              },
            ],
            internalType: "struct MembershipManagement.VotingParameters",
            name: "votingParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "numberOfSeconds",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "requiresMajority",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "onlyWithinOwnGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "disabled",
                type: "bool",
              },
              {
                internalType: "bytes32[]",
                name: "councilsThatCanMotion",
                type: "bytes32[]",
              },
            ],
            internalType: "struct MembershipManagement.MotionRules",
            name: "motionRules",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "id",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                ],
                internalType: "struct MembershipManagement.Nation[]",
                name: "members",
                type: "tuple[]",
              },
            ],
            internalType: "struct MembershipManagement.CouncilGroup[]",
            name: "groups",
            type: "tuple[]",
          },
        ],
        internalType: "struct MembershipManagement.Council",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nationId",
        type: "address",
      },
    ],
    name: "getCouncilGroupForNation",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            components: [
              {
                internalType: "address",
                name: "id",
                type: "address",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
            ],
            internalType: "struct MembershipManagement.Nation[]",
            name: "members",
            type: "tuple[]",
          },
        ],
        internalType: "struct MembershipManagement.CouncilGroup",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getCouncilRoleForGroup",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "member",
            type: "address",
          },
          {
            internalType: "bool",
            name: "voteCasted",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
        ],
        internalType: "struct MembershipManagement.Vote[]",
        name: "vs",
        type: "tuple[]",
      },
    ],
    name: "getCouncilVotes",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "councilId",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "randomizeByGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "randomizeByMember",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "outputCountForGroup",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "outputCountForMember",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "voteDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "voteNumerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumNumerator",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "avgVotes",
                type: "bool",
              },
            ],
            internalType: "struct MembershipManagement.VotingParameters",
            name: "votingParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "groupId",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "member",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "voteCasted",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "timestamp",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "proposalId",
                    type: "uint256",
                  },
                ],
                internalType: "struct MembershipManagement.Vote[]",
                name: "votes",
                type: "tuple[]",
              },
              {
                internalType: "int256",
                name: "score",
                type: "int256",
              },
            ],
            internalType: "struct MembershipManagement.CouncilGroupVotes[]",
            name: "votes",
            type: "tuple[]",
          },
          {
            internalType: "int256",
            name: "score",
            type: "int256",
          },
        ],
        internalType: "struct MembershipManagement.CouncilVotes[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCouncils",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "randomizeByGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "randomizeByMember",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "outputCountForGroup",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "outputCountForMember",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "voteDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "voteNumerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumDenominator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sumNumerator",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "avgVotes",
                type: "bool",
              },
            ],
            internalType: "struct MembershipManagement.VotingParameters",
            name: "votingParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "numberOfSeconds",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "requiresMajority",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "onlyWithinOwnGroup",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "disabled",
                type: "bool",
              },
              {
                internalType: "bytes32[]",
                name: "councilsThatCanMotion",
                type: "bytes32[]",
              },
            ],
            internalType: "struct MembershipManagement.MotionRules",
            name: "motionRules",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "id",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                ],
                internalType: "struct MembershipManagement.Nation[]",
                name: "members",
                type: "tuple[]",
              },
            ],
            internalType: "struct MembershipManagement.CouncilGroup[]",
            name: "groups",
            type: "tuple[]",
          },
        ],
        internalType: "struct MembershipManagement.Council[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
    ],
    name: "getNation",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "id",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct MembershipManagement.Nation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nationId",
        type: "address",
      },
    ],
    name: "removeNation",
    outputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalNations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proposalAddress",
        type: "address",
      },
    ],
    name: "updateVotingParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61016060405234610dae57604051601f613a6a38819003918201601f19168301916001600160401b03831184841017610db257808492602094604052833981010312610dae57516001600160a01b03811690819003610dae575f516020613a4a5f395f51905f526080527fed8815186908135b357c7061ba3c55257b68958e2410b61db8545aeec7a2a95b60a0527ff965ff90568a04fa10fac40602bcbfc47d8be6cfe6e27f85c10e31d8757fe49760c0527f79390b8ce962a43f5951d1ed360f47f4a2c7ad9ccf449c00c6102231fe41bc4d60e0527f85f6017c7f3635f3e21f932bfcec61f314ced22845f0e0e3813bdc644b86d415610100527f065a4c25030bac931a2a8918598ed1bdd12b4bcee1d984f7a29145a5a12aa500610120527ffa7f857eacbee4676fe5725cb4ad51d1057eedfc53fcc9131edf602c759639e86101405260018060a01b031960085416176008555f516020613a4a5f395f51905f525f52600760205260405f2061018061017a8254610de6565b82610e1e565b600c65213937b5b2b960d11b0190556080515f818152600760205260409020600101556101ab610dc6565b5f815261029a602082015f8152600760408401935f855260608101905f8252608081016001815260a082015f815260c08301916001835260e08401935f85526101008101955f87526080519a8b5f528860205261023a60405f209a61022360028d0195511515869060ff801983541691151516179055565b51845461ff00191690151560081b61ff0016178455565b519065ffffffff000069ffffffff0000000000008454925160301b169260101b169062010000600160501b0319161717905551600387015551600486015551600585015551600684015551151591019060ff801983541691151516179055565b5f5260076020526102b0600b60405f2001610e8f565b50506102bd600154610ec1565b806001556080515f5260076020526102da600b60405f2001610e51565b50556080515f52600760205260016102f7600b60405f2001610e51565b500161030661017a8254610de6565b600e665072696d61727960c81b01809155610343608051805f5260076020525f60086040822001556001545f5260056020528060405f2055610ee3565b60a0515f52600760205260405f2061035b8154610de6565b601f8111610d84575b50600a642837bbb2b960d91b01905560a0515f8181526007602052604090206001015561038f610dc6565b5f815261040b6020820160018152600760408401935f8552606081019060018252608081016001815260a082016006815260c08301916001835260e0840193600185526101008101955f875260a0519a8b5f528860205261023a60405f209a61022360028d0195511515869060ff801983541691151516179055565b5f526007602052610421600b60405f2001610e8f565b505061042e600154610ec1565b8060015560a0515f52600760205261044b600b60405f2001610e51565b505560a0515f526007602052806001610469600b60405f2001610e51565b500161047861017a8254610de6565b556104a560a051805f5260076020525f60086040822001556001545f5260056020528060405f2055610ee3565b60c0515f52600760205260405f206104c061017a8254610de6565b600e6610d95b9d1c985b60ca1b01905560c0515f818152600760205260409020600101556104ec610dc6565b5f8152610567602082015f8152600760408401935f8552606081019060018252608081016003815260a082016001815260c08301916001835260e0840193600285526101008101955f875260c0519a8b5f528860205261023a60405f209a61022360028d0195511515869060ff801983541691151516179055565b5f52600760205261057d600b60405f2001610e8f565b505060c0515f52600760205280600161059b600b60405f2001610e51565b50016105aa61017a8254610de6565b556105b6600154610ec1565b8060015560c0515f5260076020526105d3600b60405f2001610e51565b505560c0515f908152600760205260409020600160088201556080516105fb91600a01610f2f565b60c0515f526007602052610618600a60405f200160a05190610f2f565b61063260c051805f526007602052600a60405f2001610f2f565b60c0515f52600760205261064f600a60405f200160e05190610f2f565b60c0515f52600760205261066d600a60405f20016101205190610f2f565b60c0515f52600760205261068b600a60405f20016101405190610f2f565b6106a660c0516001545f5260056020528060405f2055610ee3565b60e0515f52600760205260405f206106c161017a8254610de6565b7f456d657267696e67000000000000000000000000000000000000000000000010905560e0515f81815260076020526040902060010155610700610dc6565b6001815261077c602082015f8152600760408401936001855260608101905f8252608081016005815260a082016003815260c08301916001835260e0840193600485526101008101955f875260e0519a8b5f528860205261023a60405f209a61022360028d0195511515869060ff801983541691151516179055565b5f9081526007602052604090206001600882015560098101805461ff0019166101001790556107ad90600b01610e8f565b50506107ba600154610ec1565b8060015560e0515f5260076020526107d7600b60405f2001610e51565b505560e0515f52600760205260016107f4600b60405f2001610e51565b500161080361017a8254610de6565b600e6647726f7570204160c81b01905560e0516001545f5260056020528060405f20555f52600760205261083c600b60405f2001610e8f565b5050610849600154610ec1565b8060015560e0515f526007602052610866600b60405f2001610e77565b505560e0515f5260076020526001610883600b60405f2001610e77565b500161089261017a8254610de6565b600e6623b937bab8102160c91b0190556108bd60e0516001545f5260056020528060405f2055610ee3565b610100515f52600760205260405f206108d961017a8254610de6565b600e6611d95b995c985b60ca1b019055610100515f81815260076020526040902060010155610906610dc6565b5f8152610982602082015f8152600760408401935f855260608101905f8252608081016001815260a082016001815260c08301916001835260e08401936002855261010081019560018752610100519a8b5f528860205261023a60405f209a61022360028d0195511515869060ff801983541691151516179055565b5f90815260076020526040902060098101805461ffff19166101011790556109ac90600b01610e8f565b5050610100515f5260076020528060016109cb600b60405f2001610e51565b50016109da61017a8254610de6565b55610a216109e9600154610ec1565b80600155610100515f52600760205280610a08600b60405f2001610e51565b505561010051905f5260056020528060405f2055610ee3565b610120515f52600760205260405f20610a3d61017a8254610de6565b600c652632b9b9b2b960d11b019055610120515f81815260076020526040902060010155610a69610dc6565b5f8152610ae5602082015f8152600760408401935f8552606081019060018252608081016003815260a082016001815260c08301916001835260e0840193600585526101008101955f8752610120519a8b5f528860205261023a60405f209a61022360028d0195511515869060ff801983541691151516179055565b5f90815260076020526040902060098101805462ff0000191662010000179055610b1190600b01610e8f565b5050610120515f526007602052806001610b30600b60405f2001610e51565b5001610b3f61017a8254610de6565b55610b86610b4e600154610ec1565b80600155610120515f52600760205280610b6d600b60405f2001610e51565b505561012051905f5260056020528060405f2055610ee3565b610140515f52600760205260405f20610ba261017a8254610de6565b7f496e6475737472790000000000000000000000000000000000000000000000109055610140515f81815260076020526040902060010155610be2610dc6565b5f8152610c5d602082015f8152600760408401935f85526060810190600182526080810183815260a082016001815260c08301916001835260e0840193600185526101008101955f8752610140519a8b5f528860205261023a60405f209a61022360028d0195511515869060ff801983541691151516179055565b5f9081526007602052604090206002600882015560098101805461ff001916610100179055610c8e90600b01610e8f565b5050610140515f5260076020526001610cac600b60405f2001610e51565b5001610cbb61017a8254610de6565b55610d02610cca600154610ec1565b80600155610140515f52600760205280610ce9600b60405f2001610e51565b505561014051905f5260056020528060405f2055610ee3565b604051612aee9081610f5c8239608051818181611c1d0152612a0f015260a051818181610212015261299a015260c05181818161013b01526129c1015260e051818181610df801526129e801526101005181818161110b01526129730152610120518181816107a60152612a36015261014051818181610e970152612a5d0152f35b815f52601f60205f20910160051c8101905b818110610da35750610364565b5f8155600101610d96565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6040519061012082016001600160401b03811183821017610db257604052565b90600182811c92168015610e14575b6020831014610e0057565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610df5565b601f8211610e2a575050565b5f52601f60205f20910160051c8101905b818110610e46575050565b5f8155600101610e3b565b805415610e63575f5260205f20905f90565b634e487b7160e01b5f52603260045260245ffd5b805460011015610e63575f52600360205f2001905f90565b80549068010000000000000000821015610db25760018201808255821015610e63575f52600360205f20910201905f90565b5f198114610ecf5760010190565b634e487b7160e01b5f52601160045260245ffd5b60065468010000000000000000811015610db2576001810180600655811015610e635760065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0155565b80549068010000000000000000821015610db25760018201808255821015610e63575f5260205f20015556fe6080806040526004361015610012575f80fd5b5f3560e01c908163029793ec14611c08575080630ed40bd0146119415780630f2d64d1146119125780633773cfe1146114165780634a7e372d1461112e57806359bd7a74146110f45780635e805757146110bc5780635e986ccd14610eba5780636d3491ec14610e80578063802751ba14610e535780638b164cf314610e1b578063aca2c41f14610de1578063b0b224d714610bd3578063b8c338e414610bb7578063c4bdfb1f1461082d578063c8881997146107c9578063cf61552a1461078f578063d3d1ff3014610765578063d5a2a5dd14610748578063e7ad2ed414610270578063ed1f1b9014610235578063ee67c353146101fb578063f2bcac3d146101625763f4f10da914610124575f80fd5b3461015e575f36600319011261015e5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b5f80fd5b3461015e575f36600319011261015e576040516006549081815260208101809260065f5260205f20905f5b8181106101e557505050816101a3910382611f1d565b604051918291602083019060208452518091526040830191905f5b8181106101cc575050500390f35b82518452859450602093840193909201916001016101be565b825484526020909301926001928301920161018d565b3461015e575f36600319011261015e5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461015e57602036600319011261015e576004355f52600560205260405f20545f5260076020526020600b60405f2001541515604051908152f35b3461015e57602036600319011261015e576004356001600160401b03811161015e573660238201121561015e5780600401356102ab81611f3e565b916102b96040519384611f1d565b8183526024602084019260071b8201019036821161015e57602401915b8183106106e5576040515f856101006102ef8185611f1d565b60078452601f19015f5b8181106106ae5750505b805182101561055557610316828261215e565b51805190929061032e906001600160a01b0316612321565b8351909190610346906001600160a01b0316836128c5565b9060208301946103568651612971565b610360818961215e565b5196518752604085015160208801526040870197885151156104e6575b60805f9601955b8951518110156104405761039981885161215e565b515188516103a681611f3e565b906103b46040519283611f1d565b8082526103c3601f1991611f3e565b015f5b8181106104115750508261040c939261040692604051916103e683611ee7565b825260208201525f60408201528d5190610400838361215e565b5261215e565b50611f82565b610384565b60209060405161042081611ecc565b5f81525f838201525f60408201525f6060820152828286010152016103c6565b5092959093969194505f5b885180518210156104d757816104609161215e565b51518851146104775761047290611f82565b61044b565b9096509694939291965b85515181116104c857846104069460206104a26104b0946104c29a5161215e565b51015190610400838361215e565b506104bb828861215e565b528561215e565b90610303565b634b4c8d2960e11b5f5260045ffd5b50909650969493929196610481565b6080860151516104f581611f3e565b906105036040519283611f1d565b808252610512601f1991611f3e565b015f5b818110610525575050895261037d565b60209060409b999b5161053781611ee7565b5f81526060838201525f604082015282828601015201999799610515565b826040518091602082016020835281518091526040830190602060408260051b8601019301915f905b82821061058d57505050500390f35b919390929450603f19868203018252845190610180810191805182526105bb60208201516020840190611c7a565b60408101519261018061014084015283518091526101a0830160206101a08360051b8601019501915f5b8181106106125750505050600192602092610160606085940151910152960192019201859493919261057e565b9091929561019f198682030184528651906060810191805182526020810151926060602084015283518091526020608084019401905f905b80821061066f57505050604090810151910152956020908101930191906001016105e5565b9091946020608060019260608951858060a01b03815116835284810151151585840152604081015160408401520151606082015201960192019061064a565b6020906040516106bd81611ecc565b5f81526106c8612172565b83820152606060408201525f6060820152828288010152016102f9565b60808336031261015e57604051906106fc82611ecc565b83356001600160a01b038116810361015e578252602084013590811515820361015e578260209283608095015260408601356040820152606086013560608201528152019201916102d6565b3461015e575f36600319011261015e576020600254604051908152f35b3461015e57602036600319011261015e576004355f526005602052602060405f2054604051908152f35b3461015e575f36600319011261015e5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461015e57602036600319011261015e576107e2611c40565b606060206040516107f281611e95565b5f8152015260018060a01b03165f52600360205261082961081560405f206122f0565b604051918291602083526020830190611ce2565b0390f35b3461015e57602036600319011261015e57610846611c40565b6008546001600160a01b03163303610ba9576108618161250f565b15610b9a576001600160a01b03165f81815260046020908152604080832054835260079091528120918190600b84015b8054831015610b8c576108a48382611f69565b50600201905f5b82548681831015610b815750846108c28386612127565b50546001600160a01b0316146108e157506108dc90611f82565b6108ab565b9091939495505f198101908111610a1e57808203610b2d575b5050805480156109b9575f1901906109128282612127565b610b1a57805f60019255016109278154611f90565b9081610ad7575b5050555f5b60025480821015610a3257836109488361210f565b905460039190911b1c6001600160a01b03161461096f575b5061096a90611f82565b610933565b5f198101908111610a1e578082036109cd575b506002549081156109b95761096a915f190161099d8161210f565b81549060018060a01b039060031b1b1916905560025590610960565b634e487b7160e01b5f52603160045260245ffd5b6109d9610a189161210f565b905460039190911b1c6001600160a01b03166109f48361210f565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b85610982565b634e487b7160e01b5f52601160045260245ffd5b505090805f526003602052600160405f205f815501610a518154611f90565b9081610a94575b5050805f5260046020525f6040812055600192835b610a8057610a7a90611f82565b91610891565b5050505060016020915b0154604051908152f35b81601f5f9311600114610aab5750555b8480610a58565b81835260208320610ac791601f0160051c810190600101611fc8565b8082528160208120915555610aa4565b81601f5f9311600114610aee5750555b868061092e565b81835260208320610b0a91601f0160051c810190600101611fc8565b8082528160208120915555610ae7565b634e487b7160e01b5f525f60045260245ffd5b610b3a610b429184612127565b509183612127565b610b1a578082146108fa57815481546001600160a01b0319166001600160a01b0391909116178155610b7a91600190810191016127f1565b85806108fa565b929593505050610a6d565b505050506001602091610a8a565b638979ca3b60e01b5f5260045ffd5b6282b42960e81b5f5260045ffd5b3461015e575f36600319011261015e5760205f54604051908152f35b3461015e57602036600319011261015e57610bec6121b5565b506004355f52600560205260405f20545f52600760205260405f20600b60405191610c1683611f02565b610c1f8161220a565b835260018101546020840152604051610c3781611eb0565b63ffffffff600283015460ff81161515835260ff8160081c1615156020840152818160101c16604084015260301c16606082015260038201546080820152600482015460a0820152600582015460c0820152600682015460e082015260ff60078301541615156101008201526040840152604051610cb481611f02565b6008820154815260ff600983015481811615156020840152818160081c161515604084015260101c1615156060820152610cf0600a83016122a8565b6080820152606084015201908154610d0781611f3e565b90610d156040519283611f1d565b80825260208201935f5260205f20935f905b828210610d4c5761082985856080820152604051918291602083526020830190611d8b565b604051610d5881611ee7565b86548152610d686001880161220a565b6020820152600287018054610d7c81611f3e565b91610d8a6040519384611f1d565b81835260208301905f5260205f20905f905b838210610dc357505050506001928260209260406003950152815201960191019094610d27565b60026020600192610dd3866122f0565b815201930191019091610d9c565b3461015e575f36600319011261015e5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461015e57602036600319011261015e57610829610e3f610e3a611c40565b61254e565b604051918291602083526020830190611d0a565b3461015e57602036600319011261015e576020610e76610e71611c40565b61250f565b6040519015158152f35b3461015e575f36600319011261015e5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461015e57602036600319011261015e57610ed36121b5565b506004355f52600760205260405f20600b60405191610ef183611f02565b610efa8161220a565b835260018101546020840152604051610f1281611eb0565b63ffffffff600283015460ff81161515835260ff8160081c1615156020840152818160101c16604084015260301c16606082015260038201546080820152600482015460a0820152600582015460c0820152600682015460e082015260ff60078301541615156101008201526040840152604051610f8f81611f02565b6008820154815260ff600983015481811615156020840152818160081c161515604084015260101c1615156060820152610fcb600a83016122a8565b6080820152606084015201908154610fe281611f3e565b90610ff06040519283611f1d565b80825260208201935f5260205f20935f905b8282106110275761082985856080820152604051918291602083526020830190611d8b565b60405161103381611ee7565b865481526110436001880161220a565b602082015260028701805461105781611f3e565b916110656040519384611f1d565b81835260208301905f5260205f20905f905b83821061109e57505050506001928260209260406003950152815201960191019094611002565b600260206001926110ae866122f0565b815201930191019091611077565b3461015e57602036600319011261015e576108296110e06110db611c40565b612321565b604051918291602083526020830190611d8b565b3461015e575f36600319011261015e5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461015e575f36600319011261015e576006545f61114b82611f3e565b916111596040519384611f1d565b808352601f1961116882611f3e565b015f5b8181106113ff5750506006545b8183106111e657836040518091602082016020835281518091526040830190602060408260051b8601019301915f905b8282106111b757505050500390f35b919360019193955060206111d68192603f198a82030186528851611d8b565b96019201920185949391926111a8565b808310156113eb5760065f528260205f2001545f52600760205260405f2092600b6040519461121486611f02565b61121d8161220a565b86526001810154602087015260405161123581611eb0565b63ffffffff600283015460ff81161515835260ff8160081c1615156020840152818160101c16604084015260301c16606082015260038201546080820152600482015460a0820152600582015460c0820152600682015460e082015260ff600783015416151561010082015260408701526040516112b281611f02565b6008820154815260ff600983015481811615156020840152818160081c161515604084015260101c16151560608201526112ee600a83016122a8565b608082015260608701520193845461130581611f3e565b906113136040519283611f1d565b80825260208201965f5260205f20965f905b82821061135757505050611350939495506080820152611345828761215e565b52610406818661215e565b9190611178565b60405161136381611ee7565b8954815261137360018b0161220a565b602082015260028a01805461138781611f3e565b916113956040519384611f1d565b81835260208301905f5260205f205f915b8383106113cd57505050506001928260209260406003950152815201990191019097611325565b600260206001926113dd856122f0565b8152019201920191906113a6565b634e487b7160e01b5f52603260045260245ffd5b60209061140a6121b5565b8282880101520161116b565b3461015e57602036600319011261015e5761142f611c40565b6008546001600160a01b03163303610ba957604051633f542a9160e21b8152905f90829060049082906001600160a01b03165afa908115611907575f91611573575b505f5b60208201518051821015611571578161148c9161215e565b5180515f52600760205260405f2091600b830154156104c857602092600460a08561156a95015161010081015115156114d86002860191600787019060ff801983541691151516179055565b6040820151815465ffffffff000069ffffffff000000000000606086015160301b169260101b169069ffffffffffffffff000019161717815561152a82511515829060ff801983541691151516179055565b81880151815461ff00191690151560081b61ff001617905560c0810151600585015560e08101516006850155608081015160038501550151910155611f82565b9050611474565b005b90503d805f833e6115848183611f1d565b81019060208183031261015e578051906001600160401b03821161015e5701906101a08282031261015e57604051916101a083018381106001600160401b038211176118f3576040528051835260208101516001600160401b03811161015e57810182601f8201121561015e5780516115fc81611f3e565b9161160a6040519384611f1d565b818352602061014081850193028201019085821161015e57602001915b81831061182d57505050602084015260408101516001600160401b03811161015e57810182601f8201121561015e57805161166181611f3e565b9161166f6040519384611f1d565b81835260208084019260071b8201019085821161015e57602001915b8183106117d9575050506040840152606081015160608401526080810151600781101561015e5760808401526116c360a08201612140565b60a08401526116d460c08201612140565b60c08401526116e560e08201611f55565b60e08401526116f76101008201611f55565b61010084015261170a6101208201611f55565b610120840152610140810151610140840152610160810151610160840152610180810151906001600160401b03821161015e570181601f8201121561015e5780519061175582611f3e565b926117636040519485611f1d565b8284526020606081860194028301019181831161015e57602001925b828410611796575050505061018082015281611471565b60608483031261015e5760206060916040516117b181611ee7565b6117ba87611f55565b815282870151838201526040870151604082015281520193019261177f565b60808387031261015e5760206080916040516117f481611ecc565b6117fd86611f55565b815261180a838701612140565b83820152604086015160408201526060860151606082015281520192019161168b565b828603610140811261015e576101206040519161184983611e95565b85518352601f19011261015e576101409160209160405161186981611eb0565b611874848801612140565b815261188260408801612140565b848201526118926060880161214d565b60408201526118a36080880161214d565b606082015260a0870151608082015260c087015160a082015260e087015160c082015261010087015160e08201526118de6101208801612140565b61010082015283820152815201920191611627565b634e487b7160e01b5f52604160045260245ffd5b6040513d5f823e3d90fd5b3461015e57602036600319011261015e576004355f5260076020526020600b60405f2001541515604051908152f35b3461015e57602036600319011261015e5761195a611c40565b6008546001600160a01b03163303610ba95760405163b46a357f60e01b8152906001600160a01b03165f82600481845afa918215611907575f92611b41575b5081516119ae906001600160a01b031661250f565b611b325760206004916040519283809263507a264960e11b82525afa908115611907575f91611b00575b50805f52600560205260405f20545f52600760205260405f205f600b82018054935b848310611ad5575b50611a0e929350611f69565b5090611a1a5f54611f82565b5f5560018060a01b038351165f526003602052611a3a8360405f20612023565b8251600254916001600160a01b0390911690600160401b8310156118f357611a6e6001926109f4858560029701875561210f565b01805484516001600160a01b03165f9081526004602052604090205591018054600160401b8110156118f357611aa991600182018155612127565b929092610b1a57611abc81604094612023565b51905482516001600160a01b0390921682526020820152f35b909181611ae28285611f69565b505414611af957611af290611f82565b91906119fa565b9190611a02565b90506020813d602011611b2a575b81611b1b60209383611f1d565b8101031261015e5751826119d8565b3d9150611b0e565b632607e5b560e21b5f5260045ffd5b9091503d805f833e611b538183611f1d565b81019060208183031261015e578051906001600160401b03821161015e57019060408282031261015e5760405191611b8a83611e95565b611b9381611f55565b83526020810151906001600160401b03821161015e570181601f8201121561015e578051906001600160401b0382116118f35760405192611bde601f8401601f191660200185611f1d565b8284526020838301011161015e57815f9260208093018386015e8301015260208201529082611999565b3461015e575f36600319011261015e576020907f00000000000000000000000000000000000000000000000000000000000000008152f35b600435906001600160a01b038216820361015e57565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b610100809180511515845260208101511515602085015263ffffffff604082015116604085015263ffffffff60608201511660608501526080810151608085015260a081015160a085015260c081015160c085015260e081015160e085015201511515910152565b9060406020611d079360018060a01b0381511684520151918160208201520190611c56565b90565b805182526040611d296020830151606060208601526060850190611c56565b910151916040818303910152815180825260208201916020808360051b8301019401925f915b838310611d5e57505050505090565b9091929394602080611d7c600193601f198682030187528951611ce2565b97019301930191939290611d4f565b611da081516101a084526101a0840190611c56565b9060208101516020840152611dbd60408201516040850190611c7a565b6060810151838303610160850152602060c0608060a0860193805187528381015115158488015260408101511515604088015260608101511515606088015201519460a060808201528551809452019301905f5b818110611e7f575050506080015191610180818303910152815180825260208201916020808360051b8301019401925f915b838310611e5257505050505090565b9091929394602080611e70600193601f198682030187528951611d0a565b97019301930191939290611e43565b8251855260209485019490920191600101611e11565b604081019081106001600160401b038211176118f357604052565b61012081019081106001600160401b038211176118f357604052565b608081019081106001600160401b038211176118f357604052565b606081019081106001600160401b038211176118f357604052565b60a081019081106001600160401b038211176118f357604052565b90601f801991011681019081106001600160401b038211176118f357604052565b6001600160401b0381116118f35760051b60200190565b51906001600160a01b038216820361015e57565b80548210156113eb575f52600360205f20910201905f90565b5f198114610a1e5760010190565b90600182811c92168015611fbe575b6020831014611faa57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611f9f565b818110611fd3575050565b5f8155600101611fc8565b9190601f8111611fed57505050565b612017925f5260205f20906020601f840160051c83019310612019575b601f0160051c0190611fc8565b565b909150819061200a565b815181546001600160a01b0319166001600160a01b0391909116178155602091909101518051909291600101906001600160401b0381116118f3576120728161206c8454611f90565b84611fde565b6020601f82116001146120b15781906120a29394955f926120a6575b50508160011b915f199060031b1c19161790565b9055565b015190505f8061208e565b601f19821690835f52805f20915f5b8181106120f7575095836001959697106120df575b505050811b019055565b01515f1960f88460031b161c191690555f80806120d5565b9192602060018192868b0151815501940192016120c0565b6002548110156113eb5760025f5260205f2001905f90565b80548210156113eb575f5260205f209060011b01905f90565b5190811515820361015e57565b519063ffffffff8216820361015e57565b80518210156113eb5760209160051b010190565b6040519061217f82611eb0565b5f610100838281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201520152565b604051906121c282611f02565b60606080838281525f60208201526121d8612172565b60408201526040516121e981611f02565b5f81525f60208201525f60408201525f848201528383820152838201520152565b9060405191825f82549261221d84611f90565b80845293600181169081156122865750600114612242575b5061201792500383611f1d565b90505f9291925260205f20905f915b81831061226a575050906020612017928201015f612235565b6020919350806001915483858901015201910190918492612251565b90506020925061201794915060ff191682840152151560051b8201015f612235565b90604051918281549182825260208201905f5260205f20925f5b8181106122d757505061201792500383611f1d565b84548352600194850194879450602090930192016122c2565b906040516122fd81611e95565b82546001600160a01b0316815291829060209061231c9060010161220a565b910152565b6123296121b5565b5060018060a01b03165f52600460205260405f20545f52600760205260405f20600b6040519161235883611f02565b6123618161220a565b83526001810154602084015260405161237981611eb0565b63ffffffff600283015460ff81161515835260ff8160081c1615156020840152818160101c16604084015260301c16606082015260038201546080820152600482015460a0820152600582015460c0820152600682015460e082015260ff600783015416151561010082015260408401526040516123f681611f02565b6008820154815260ff600983015481811615156020840152818160081c161515604084015260101c1615156060820152612432600a83016122a8565b6080820152606084015201805461244881611f3e565b916124566040519384611f1d565b81835260208301905f5260205f205f915b83831061247a5750505050608082015290565b60405161248681611ee7565b825481526124966001840161220a565b60208201526002830180546124aa81611f3e565b916124b86040519384611f1d565b81835260208301905f5260205f20905f905b8382106124f157505050506001928260209260406003950152815201920192019190612467565b60026020600192612501866122f0565b8152019301910190916124ca565b6001600160a01b039081165f818152600360205260409020549091161490565b6040519061253c82611ee7565b60606040835f81528260208201520152565b61255661252f565b505f6006545b808210612567575f80fd5b919060018060a01b03821690815f52600460205260405f20545f52600760205260405f20600b6040519161259a83611f02565b6125a38161220a565b8352600181015460208401526040516125bb81611eb0565b63ffffffff600283015460ff81161515835260ff8160081c1615156020840152818160101c16604084015260301c16606082015260038201546080820152600482015460a0820152600582015460c0820152600682015460e082015260ff6007830154161515610100820152604084015260405161263881611f02565b6008820154815260ff600983015481811615156020840152818160081c161515604084015260101c1615156060820152612674600a83016122a8565b608082015260608401520190815461268b81611f3e565b926126996040519485611f1d565b81845260208401905f5260205f20905f905b83821061275357505050506080019081525f915b8151805184101561273e57836126d79197969761215e565b51945f9660408701975b885180518210156127245787906001600160a01b039061270290849061215e565b515116146127185761271390611f82565b6126e1565b50505050505050905090565b505092965092612735919550611f82565b919490936126bf565b5091505061274c9150611f82565b909161255c565b604099969895995161276481611ee7565b835481526127746001850161220a565b602082015260028401805461278881611f3e565b916127966040519384611f1d565b81835260208301905f5260205f205f915b8383106127d35750505050600192826020926040600395015281520193019101909198949795986126ab565b600260206001926127e3856122f0565b8152019201920191906127a7565b9190918281146128c0576128058354611f90565b6001600160401b0381116118f3576128218161206c8454611f90565b5f93601f821160011461285b576120a292939482915f926128505750508160011b915f199060031b1c19161790565b015490505f8061208e565b601f198216905f5260205f2094835f5260205f20915f5b8181106128a85750958360019596971061289057505050811b019055565b01545f1960f88460031b161c191690555f80806120d5565b9192600180602092868b015481550194019201612872565b509050565b6128cd61252f565b505f905b6080810190815151831015612962575f5b60406128ef85855161215e565b5101515181101561294b5760018060a01b0361291a82604061291288885161215e565b51015161215e565b5151166001600160a01b0386161461293a5761293590611f82565b6128e2565b505061294792505161215e565b5190565b50916080915061295a90611f82565b9190506128d1565b63057f71d760e21b5f5260045ffd5b7f00000000000000000000000000000000000000000000000000000000000000008114612ab3577f00000000000000000000000000000000000000000000000000000000000000008114612aad577f00000000000000000000000000000000000000000000000000000000000000008114612aa7577f00000000000000000000000000000000000000000000000000000000000000008114612aa1577f00000000000000000000000000000000000000000000000000000000000000008114612a9b577f00000000000000000000000000000000000000000000000000000000000000008114612a95577f000000000000000000000000000000000000000000000000000000000000000014612a905763057f71d760e21b5f5260045ffd5b600690565b50600590565b50600490565b50600390565b50600290565b50600190565b505f9056fea2646970667358221220627afa32140e1068b4ec2a82bde9b3ae2475cbc07c6f912514eee55072046d2964736f6c634300081c00337fcce6a499b6d8a3672e3669f525a458fa2543baa244623617dd2ae829df407d";

type CouncilManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CouncilManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CouncilManager__factory extends ContractFactory {
  constructor(...args: CouncilManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _daoAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_daoAddress, overrides || {});
  }
  override deploy(
    _daoAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_daoAddress, overrides || {}) as Promise<
      CouncilManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CouncilManager__factory {
    return super.connect(runner) as CouncilManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CouncilManagerInterface {
    return new Interface(_abi) as CouncilManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CouncilManager {
    return new Contract(address, _abi, runner) as unknown as CouncilManager;
  }
}
