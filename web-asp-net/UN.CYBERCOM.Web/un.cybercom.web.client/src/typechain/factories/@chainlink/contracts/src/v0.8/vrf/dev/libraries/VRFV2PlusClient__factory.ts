/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../../../common";
import type {
  VRFV2PlusClient,
  VRFV2PlusClientInterface,
} from "../../../../../../../../@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient";

const _abi = [
  {
    inputs: [],
    name: "EXTRA_ARGS_V1_TAG",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60af6032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106032575f3560e01c8063f7514ab4146036575b5f5ffd5b605c7f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa81565b6040516001600160e01b0319909116815260200160405180910390f3fea2646970667358221220eea86eb56cca9146816bb5b513c1e07c6a24393fd499f26c042ec02b1c25be5264736f6c634300081c0033";

type VRFV2PlusClientConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VRFV2PlusClientConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VRFV2PlusClient__factory extends ContractFactory {
  constructor(...args: VRFV2PlusClientConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VRFV2PlusClient & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VRFV2PlusClient__factory {
    return super.connect(runner) as VRFV2PlusClient__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VRFV2PlusClientInterface {
    return new Interface(_abi) as VRFV2PlusClientInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VRFV2PlusClient {
    return new Contract(address, _abi, runner) as unknown as VRFV2PlusClient;
  }
}
